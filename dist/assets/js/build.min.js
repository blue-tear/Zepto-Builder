/*!
 * Zepto Builder 0.2.0 (2013-12-18, 14:10)
 * https://github.com/e-sites/Zepto-Builder
 * MIT licensed
 *
 * Copyright (C) 2013 e-sites, http://e-sites.nl/
 */
(function(){var requirejs,require,define;(function(undef){function hasProp(obj,prop){return hasOwn.call(obj,prop)}function normalize(name,baseName){var nameParts,nameSegment,mapValue,foundMap,foundI,foundStarMap,starI,i,j,part,baseParts=baseName&&baseName.split("/"),map=config.map,starMap=map&&map["*"]||{};if(name&&name.charAt(0)===".")if(baseName){baseParts=baseParts.slice(0,baseParts.length-1),name=baseParts.concat(name.split("/"));for(i=0;i<name.length;i+=1){part=name[i];if(part===".")name.splice(i,1),i-=1;else if(part===".."){if(i===1&&(name[2]===".."||name[0]===".."))break;i>0&&(name.splice(i-1,2),i-=2)}}name=name.join("/")}else name.indexOf("./")===0&&(name=name.substring(2));if((baseParts||starMap)&&map){nameParts=name.split("/");for(i=nameParts.length;i>0;i-=1){nameSegment=nameParts.slice(0,i).join("/");if(baseParts)for(j=baseParts.length;j>0;j-=1){mapValue=map[baseParts.slice(0,j).join("/")];if(mapValue){mapValue=mapValue[nameSegment];if(mapValue){foundMap=mapValue,foundI=i;break}}}if(foundMap)break;!foundStarMap&&starMap&&starMap[nameSegment]&&(foundStarMap=starMap[nameSegment],starI=i)}!foundMap&&foundStarMap&&(foundMap=foundStarMap,foundI=starI),foundMap&&(nameParts.splice(0,foundI,foundMap),name=nameParts.join("/"))}return name}function makeRequire(relName,forceSync){return function(){return req.apply(undef,aps.call(arguments,0).concat([relName,forceSync]))}}function makeNormalize(relName){return function(name){return normalize(name,relName)}}function makeLoad(depName){return function(value){defined[depName]=value}}function callDep(name){if(hasProp(waiting,name)){var args=waiting[name];delete waiting[name],defining[name]=!0,main.apply(undef,args)}if(!hasProp(defined,name)&&!hasProp(defining,name))throw new Error("No "+name);return defined[name]}function splitPrefix(name){var prefix,index=name?name.indexOf("!"):-1;return index>-1&&(prefix=name.substring(0,index),name=name.substring(index+1,name.length)),[prefix,name]}function makeConfig(name){return function(){return config&&config.config&&config.config[name]||{}}}var main,req,makeMap,handlers,defined={},waiting={},config={},defining={},hasOwn=Object.prototype.hasOwnProperty,aps=[].slice;makeMap=function(name,relName){var plugin,parts=splitPrefix(name),prefix=parts[0];return name=parts[1],prefix&&(prefix=normalize(prefix,relName),plugin=callDep(prefix)),prefix?plugin&&plugin.normalize?name=plugin.normalize(name,makeNormalize(relName)):name=normalize(name,relName):(name=normalize(name,relName),parts=splitPrefix(name),prefix=parts[0],name=parts[1],prefix&&(plugin=callDep(prefix))),{f:prefix?prefix+"!"+name:name,n:name,pr:prefix,p:plugin}},handlers={require:function(name){return makeRequire(name)},exports:function(name){var e=defined[name];return typeof e!="undefined"?e:defined[name]={}},module:function(name){return{id:name,uri:"",exports:defined[name],config:makeConfig(name)}}},main=function(name,deps,callback,relName){var cjsModule,depName,ret,map,i,args=[],callbackType=typeof callback,usingExports;relName=relName||name;if(callbackType==="undefined"||callbackType==="function"){deps=!deps.length&&callback.length?["require","exports","module"]:deps;for(i=0;i<deps.length;i+=1){map=makeMap(deps[i],relName),depName=map.f;if(depName==="require")args[i]=handlers.require(name);else if(depName==="exports")args[i]=handlers.exports(name),usingExports=!0;else if(depName==="module")cjsModule=args[i]=handlers.module(name);else if(hasProp(defined,depName)||hasProp(waiting,depName)||hasProp(defining,depName))args[i]=callDep(depName);else{if(!map.p)throw new Error(name+" missing "+depName);map.p.load(map.n,makeRequire(relName,!0),makeLoad(depName),{}),args[i]=defined[depName]}}ret=callback?callback.apply(defined[name],args):undefined;if(name)if(cjsModule&&cjsModule.exports!==undef&&cjsModule.exports!==defined[name])defined[name]=cjsModule.exports;else if(ret!==undef||!usingExports)defined[name]=ret}else name&&(defined[name]=callback)},requirejs=require=req=function(deps,callback,relName,forceSync,alt){return typeof deps=="string"?handlers[deps]?handlers[deps](callback):callDep(makeMap(deps,callback).f):(deps.splice||(config=deps,callback.splice?(deps=callback,callback=relName,relName=null):deps=undef),callback=callback||function(){},typeof relName=="function"&&(relName=forceSync,forceSync=alt),forceSync?main(undef,deps,callback,relName):setTimeout(function(){main(undef,deps,callback,relName)},4),req)},req.config=function(cfg){return config=cfg,config.deps&&req(config.deps,config.callback),req},requirejs._defined=defined,define=function(name,deps,callback){deps.splice||(callback=deps,deps=[]),!hasProp(defined,name)&&!hasProp(waiting,name)&&(waiting[name]=[name,deps,callback])},define.amd={jQuery:!0}})(),define("almond",function(){}),function(){function InvalidCharacterError(message){this.message=message}var object=typeof exports!="undefined"?exports:this,chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";InvalidCharacterError.prototype=new Error,InvalidCharacterError.prototype.name="InvalidCharacterError",object.btoa||(object.btoa=function(input){for(var block,charCode,idx=0,map=chars,output="";input.charAt(idx|0)||(map="=",idx%1);output+=map.charAt(63&block>>8-idx%1*8)){charCode=input.charCodeAt(idx+=.75);if(charCode>255)throw new InvalidCharacterError("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");block=block<<8|charCode}return output}),object.atob||(object.atob=function(input){input=input.replace(/=+$/,"");if(input.length%4==1)throw new InvalidCharacterError("'atob' failed: The string to be decoded is not correctly encoded.");for(var bc=0,bs,buffer,idx=0,output="";buffer=input.charAt(idx++);~buffer&&(bs=bc%4?bs*64+buffer:buffer,bc++%4)?output+=String.fromCharCode(255&bs>>(-2*bc&6)):0)buffer=chars.indexOf(buffer);return output})}(),define("base64",function(){}),function(undefined){String.prototype.trim===undefined&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")}),Array.prototype.reduce===undefined&&(Array.prototype.reduce=function(fun){if(this===void 0||this===null)throw new TypeError;var t=Object(this),len=t.length>>>0,k=0,accumulator;if(typeof fun!="function")throw new TypeError;if(len==0&&arguments.length==1)throw new TypeError;if(arguments.length>=2)accumulator=arguments[1];else do{if(k in t){accumulator=t[k++];break}if(++k>=len)throw new TypeError}while(!0);while(k<len)k in t&&(accumulator=fun.call(undefined,accumulator,t[k],k,t)),k++;return accumulator})}();var Zepto=function(){function type(obj){return obj==null?String(obj):class2type[toString.call(obj)]||"object"}function isFunction(value){return type(value)=="function"}function isWindow(obj){return obj!=null&&obj==obj.window}function isDocument(obj){return obj!=null&&obj.nodeType==obj.DOCUMENT_NODE}function isObject(obj){return type(obj)=="object"}function isPlainObject(obj){return isObject(obj)&&!isWindow(obj)&&obj.__proto__==Object.prototype}function isArray(value){return value instanceof Array}function likeArray(obj){return typeof obj.length=="number"}function compact(array){return filter.call(array,function(item){return item!=null})}function flatten(array){return array.length>0?$.fn.concat.apply([],array):array}function dasherize(str){return str.replace(/::/g,"/").replace(/([A-Z]+)([A-Z][a-z])/g,"$1_$2").replace(/([a-z\d])([A-Z])/g,"$1_$2").replace(/_/g,"-").toLowerCase()}function classRE(name){return name in classCache?classCache[name]:classCache[name]=new RegExp("(^|\\s)"+name+"(\\s|$)")}function maybeAddPx(name,value){return typeof value=="number"&&!cssNumber[dasherize(name)]?value+"px":value}function defaultDisplay(nodeName){var element,display;return elementDisplay[nodeName]||(element=document.createElement(nodeName),document.body.appendChild(element),display=getComputedStyle(element,"").getPropertyValue("display"),element.parentNode.removeChild(element),display=="none"&&(display="block"),elementDisplay[nodeName]=display),elementDisplay[nodeName]}function children(element){return"children"in element?slice.call(element.children):$.map(element.childNodes,function(node){if(node.nodeType==1)return node})}function extend(target,source,deep){for(key in source)deep&&(isPlainObject(source[key])||isArray(source[key]))?(isPlainObject(source[key])&&!isPlainObject(target[key])&&(target[key]={}),isArray(source[key])&&!isArray(target[key])&&(target[key]=[]),extend(target[key],source[key],deep)):source[key]!==undefined&&(target[key]=source[key])}function filtered(nodes,selector){return selector===undefined?$(nodes):$(nodes).filter(selector)}function funcArg(context,arg,idx,payload){return isFunction(arg)?arg.call(context,idx,payload):arg}function setAttribute(node,name,value){value==null?node.removeAttribute(name):node.setAttribute(name,value)}function className(node,value){var klass=node.className,svg=klass&&klass.baseVal!==undefined;if(value===undefined)return svg?klass.baseVal:klass;svg?klass.baseVal=value:node.className=value}function deserializeValue(value){var num;try{return value?value=="true"||(value=="false"?!1:value=="null"?null:isNaN(num=Number(value))?/^[\[\{]/.test(value)?$.parseJSON(value):value:num):value}catch(e){return value}}function traverseNode(node,fun){fun(node);for(var key in node.childNodes)traverseNode(node.childNodes[key],fun)}var undefined,key,$,classList,emptyArray=[],slice=emptyArray.slice,filter=emptyArray.filter,document=window.document,elementDisplay={},classCache={},getComputedStyle=document.defaultView.getComputedStyle,cssNumber={"column-count":1,columns:1,"font-weight":1,"line-height":1,opacity:1,"z-index":1,zoom:1},fragmentRE=/^\s*<(\w+|!)[^>]*>/,tagExpanderRE=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,rootNodeRE=/^(?:body|html)$/i,methodAttributes=["val","css","html","text","data","width","height","offset"],adjacencyOperators=["after","prepend","before","append"],table=document.createElement("table"),tableRow=document.createElement("tr"),containers={tr:document.createElement("tbody"),tbody:table,thead:table,tfoot:table,td:tableRow,th:tableRow,"*":document.createElement("div")},readyRE=/complete|loaded|interactive/,classSelectorRE=/^\.([\w-]+)$/,idSelectorRE=/^#([\w-]*)$/,tagSelectorRE=/^[\w-]+$/,class2type={},toString=class2type.toString,zepto={},camelize,uniq,tempParent=document.createElement("div");return zepto.matches=function(element,selector){if(!element||element.nodeType!==1)return!1;var matchesSelector=element.webkitMatchesSelector||element.mozMatchesSelector||element.oMatchesSelector||element.matchesSelector;if(matchesSelector)return matchesSelector.call(element,selector);var match,parent=element.parentNode,temp=!parent;return temp&&(parent=tempParent).appendChild(element),match=~zepto.qsa(parent,selector).indexOf(element),temp&&tempParent.removeChild(element),match},camelize=function(str){return str.replace(/-+(.)?/g,function(match,chr){return chr?chr.toUpperCase():""})},uniq=function(array){return filter.call(array,function(item,idx){return array.indexOf(item)==idx})},zepto.fragment=function(html,name,properties){html.replace&&(html=html.replace(tagExpanderRE,"<$1></$2>")),name===undefined&&(name=fragmentRE.test(html)&&RegExp.$1),name in containers||(name="*");var nodes,dom,container=containers[name];return container.innerHTML=""+html,dom=$.each(slice.call(container.childNodes),function(){container.removeChild(this)}),isPlainObject(properties)&&(nodes=$(dom),$.each(properties,function(key,value){methodAttributes.indexOf(key)>-1?nodes[key](value):nodes.attr(key,value)})),dom},zepto.Z=function(dom,selector){return dom=dom||[],dom.__proto__=$.fn,dom.selector=selector||"",dom},zepto.isZ=function(object){return object instanceof zepto.Z},zepto.init=function(selector,context){if(!selector)return zepto.Z();if(isFunction(selector))return $(document).ready(selector);if(zepto.isZ(selector))return selector;var dom;if(isArray(selector))dom=compact(selector);else if(isObject(selector))dom=[isPlainObject(selector)?$.extend({},selector):selector],selector=null;else if(fragmentRE.test(selector))dom=zepto.fragment(selector.trim(),RegExp.$1,context),selector=null;else{if(context!==undefined)return $(context).find(selector);dom=zepto.qsa(document,selector)}return zepto.Z(dom,selector)},$=function(selector,context){return zepto.init(selector,context)},$.extend=function(target){var deep,args=slice.call(arguments,1);return typeof target=="boolean"&&(deep=target,target=args.shift()),args.forEach(function(arg){extend(target,arg,deep)}),target},zepto.qsa=function(element,selector){var found;return isDocument(element)&&idSelectorRE.test(selector)?(found=element.getElementById(RegExp.$1))?[found]:[]:element.nodeType!==1&&element.nodeType!==9?[]:slice.call(classSelectorRE.test(selector)?element.getElementsByClassName(RegExp.$1):tagSelectorRE.test(selector)?element.getElementsByTagName(selector):element.querySelectorAll(selector))},$.contains=function(parent,node){return parent!==node&&parent.contains(node)},$.type=type,$.isFunction=isFunction,$.isWindow=isWindow,$.isArray=isArray,$.isPlainObject=isPlainObject,$.isEmptyObject=function(obj){var name;for(name in obj)return!1;return!0},$.inArray=function(elem,array,i){return emptyArray.indexOf.call(array,elem,i)},$.camelCase=camelize,$.trim=function(str){return str.trim()},$.uuid=0,$.support={},$.expr={},$.map=function(elements,callback){var value,values=[],i,key;if(likeArray(elements))for(i=0;i<elements.length;i++)value=callback(elements[i],i),value!=null&&values.push(value);else for(key in elements)value=callback(elements[key],key),value!=null&&values.push(value);return flatten(values)},$.each=function(elements,callback){var i,key;if(likeArray(elements)){for(i=0;i<elements.length;i++)if(callback.call(elements[i],i,elements[i])===!1)return elements}else for(key in elements)if(callback.call(elements[key],key,elements[key])===!1)return elements;return elements},$.grep=function(elements,callback){return filter.call(elements,callback)},window.JSON&&($.parseJSON=JSON.parse),$.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(i,name){class2type["[object "+name+"]"]=name.toLowerCase()}),$.fn={forEach:emptyArray.forEach,reduce:emptyArray.reduce,push:emptyArray.push,sort:emptyArray.sort,indexOf:emptyArray.indexOf,concat:emptyArray.concat,map:function(fn){return $($.map(this,function(el,i){return fn.call(el,i,el)}))},slice:function(){return $(slice.apply(this,arguments))},ready:function(callback){return readyRE.test(document.readyState)?callback($):document.addEventListener("DOMContentLoaded",function(){callback($)},!1),this},get:function(idx){return idx===undefined?slice.call(this):this[idx>=0?idx:idx+this.length]},toArray:function(){return this.get()},size:function(){return this.length},remove:function(){return this.each(function(){this.parentNode!=null&&this.parentNode.removeChild(this)})},each:function(callback){return emptyArray.every.call(this,function(el,idx){return callback.call(el,idx,el)!==!1}),this},filter:function(selector){return isFunction(selector)?this.not(this.not(selector)):$(filter.call(this,function(element){return zepto.matches(element,selector)}))},add:function(selector,context){return $(uniq(this.concat($(selector,context))))},is:function(selector){return this.length>0&&zepto.matches(this[0],selector)},not:function(selector){var nodes=[];if(isFunction(selector)&&selector.call!==undefined)this.each(function(idx){selector.call(this,idx)||nodes.push(this)});else{var excludes=typeof selector=="string"?this.filter(selector):likeArray(selector)&&isFunction(selector.item)?slice.call(selector):$(selector);this.forEach(function(el){excludes.indexOf(el)<0&&nodes.push(el)})}return $(nodes)},has:function(selector){return this.filter(function(){return isObject(selector)?$.contains(this,selector):$(this).find(selector).size()})},eq:function(idx){return idx===-1?this.slice(idx):this.slice(idx,+idx+1)},first:function(){var el=this[0];return el&&!isObject(el)?el:$(el)},last:function(){var el=this[this.length-1];return el&&!isObject(el)?el:$(el)},find:function(selector){var result,$this=this;return typeof selector=="object"?result=$(selector).filter(function(){var node=this;return emptyArray.some.call($this,function(parent){return $.contains(parent,node)})}):this.length==1?result=$(zepto.qsa(this[0],selector)):result=this.map(function(){return zepto.qsa(this,selector)}),result},closest:function(selector,context){var node=this[0],collection=!1;typeof selector=="object"&&(collection=$(selector));while(node&&!(collection?collection.indexOf(node)>=0:zepto.matches(node,selector)))node=node!==context&&!isDocument(node)&&node.parentNode;return $(node)},parents:function(selector){var ancestors=[],nodes=this;while(nodes.length>0)nodes=$.map(nodes,function(node){if((node=node.parentNode)&&!isDocument(node)&&ancestors.indexOf(node)<0)return ancestors.push(node),node});return filtered(ancestors,selector)},parent:function(selector){return filtered(uniq(this.pluck("parentNode")),selector)},children:function(selector){return filtered(this.map(function(){return children(this)}),selector)},contents:function(){return this.map(function(){return slice.call(this.childNodes)})},siblings:function(selector){return filtered(this.map(function(i,el){return filter.call(children(el.parentNode),function(child){return child!==el})}),selector)},empty:function(){return this.each(function(){this.innerHTML=""})},pluck:function(property){return $.map(this,function(el){return el[property]})},show:function(){return this.each(function(){this.style.display=="none"&&(this.style.display=null),getComputedStyle(this,"").getPropertyValue("display")=="none"&&(this.style.display=defaultDisplay(this.nodeName))})},replaceWith:function(newContent){return this.before(newContent).remove()},wrap:function(structure){var func=isFunction(structure);if(this[0]&&!func)var dom=$(structure).get(0),clone=dom.parentNode||this.length>1;return this.each(function(index){$(this).wrapAll(func?structure.call(this,index):clone?dom.cloneNode(!0):dom)})},wrapAll:function(structure){if(this[0]){$(this[0]).before(structure=$(structure));var children;while((children=structure.children()).length)structure=children.first();$(structure).append(this)}return this},wrapInner:function(structure){var func=isFunction(structure);return this.each(function(index){var self=$(this),contents=self.contents(),dom=func?structure.call(this,index):structure;contents.length?contents.wrapAll(dom):self.append(dom)})},unwrap:function(){return this.parent().each(function(){$(this).replaceWith($(this).children())}),this},clone:function(){return this.map(function(){return this.cloneNode(!0)})},hide:function(){return this.css("display","none")},toggle:function(setting){return this.each(function(){var el=$(this);(setting===undefined?el.css("display")=="none":setting)?el.show():el.hide()})},prev:function(selector){return $(this.pluck("previousElementSibling")).filter(selector||"*")},next:function(selector){return $(this.pluck("nextElementSibling")).filter(selector||"*")},html:function(html){return html===undefined?this.length>0?this[0].innerHTML:null:this.each(function(idx){var originHtml=this.innerHTML;$(this).empty().append(funcArg(this,html,idx,originHtml))})},text:function(text){return text===undefined?this.length>0?this[0].textContent:null:this.each(function(){this.textContent=text})},attr:function(name,value){var result;return typeof name=="string"&&value===undefined?this.length==0||this[0].nodeType!==1?undefined:name=="value"&&this[0].nodeName=="INPUT"?this.val():!(result=this[0].getAttribute(name))&&name in this[0]?this[0][name]:result:this.each(function(idx){if(this.nodeType!==1)return;if(isObject(name))for(key in name)setAttribute(this,key,name[key]);else setAttribute(this,name,funcArg(this,value,idx,this.getAttribute(name)))})},removeAttr:function(name){return this.each(function(){this.nodeType===1&&setAttribute(this,name)})},prop:function(name,value){return value===undefined?this[0]&&this[0][name]:this.each(function(idx){this[name]=funcArg(this,value,idx,this[name])})},data:function(name,value){var data=this.attr("data-"+dasherize(name),value);return data!==null?deserializeValue(data):undefined},val:function(value){return value===undefined?this[0]&&(this[0].multiple?$(this[0]).find("option").filter(function(o){return this.selected}).pluck("value"):this[0].value):this.each(function(idx){this.value=funcArg(this,value,idx,this.value)})},offset:function(coordinates){if(coordinates)return this.each(function(index){var $this=$(this),coords=funcArg(this,coordinates,index,$this.offset()),parentOffset=$this.offsetParent().offset(),props={top:coords.top-parentOffset.top,left:coords.left-parentOffset.left};$this.css("position")=="static"&&(props.position="relative"),$this.css(props)});if(this.length==0)return null;var obj=this[0].getBoundingClientRect();return{left:obj.left+window.pageXOffset,top:obj.top+window.pageYOffset,width:Math.round(obj.width),height:Math.round(obj.height)}},css:function(property,value){if(arguments.length<2&&typeof property=="string")return this[0]&&(this[0].style[camelize(property)]||getComputedStyle(this[0],"").getPropertyValue(property));var css="";if(type(property)=="string")!value&&value!==0?this.each(function(){this.style.removeProperty(dasherize(property))}):css=dasherize(property)+":"+maybeAddPx(property,value);else for(key in property)!property[key]&&property[key]!==0?this.each(function(){this.style.removeProperty(dasherize(key))}):css+=dasherize(key)+":"+maybeAddPx(key,property[key])+";";return this.each(function(){this.style.cssText+=";"+css})},index:function(element){return element?this.indexOf($(element)[0]):this.parent().children().indexOf(this[0])},hasClass:function(name){return emptyArray.some.call(this,function(el){return this.test(className(el))},classRE(name))},addClass:function(name){return this.each(function(idx){classList=[];var cls=className(this),newName=funcArg(this,name,idx,cls);newName.split(/\s+/g).forEach(function(klass){$(this).hasClass(klass)||classList.push(klass)},this),classList.length&&className(this,cls+(cls?" ":"")+classList.join(" "))})},removeClass:function(name){return this.each(function(idx){if(name===undefined)return className(this,"");classList=className(this),funcArg(this,name,idx,classList).split(/\s+/g).forEach(function(klass){classList=classList.replace(classRE(klass)," ")}),className(this,classList.trim())})},toggleClass:function(name,when){return this.each(function(idx){var $this=$(this),names=funcArg(this,name,idx,className(this));names.split(/\s+/g).forEach(function(klass){(when===undefined?!$this.hasClass(klass):when)?$this.addClass(klass):$this.removeClass(klass)})})},scrollTop:function(){if(!this.length)return;return"scrollTop"in this[0]?this[0].scrollTop:this[0].scrollY},position:function(){if(!this.length)return;var elem=this[0],offsetParent=this.offsetParent(),offset=this.offset(),parentOffset=rootNodeRE.test(offsetParent[0].nodeName)?{top:0,left:0}:offsetParent.offset();return offset.top-=parseFloat($(elem).css("margin-top"))||0,offset.left-=parseFloat($(elem).css("margin-left"))||0,parentOffset.top+=parseFloat($(offsetParent[0]).css("border-top-width"))||0,parentOffset.left+=parseFloat($(offsetParent[0]).css("border-left-width"))||0,{top:offset.top-parentOffset.top,left:offset.left-parentOffset.left}},offsetParent:function(){return this.map(function(){var parent=this.offsetParent||document.body;while(parent&&!rootNodeRE.test(parent.nodeName)&&$(parent).css("position")=="static")parent=parent.offsetParent;return parent})}},$.fn.detach=$.fn.remove,["width","height"].forEach(function(dimension){$.fn[dimension]=function(value){var offset,el=this[0],Dimension=dimension.replace(/./,function(m){return m[0].toUpperCase()});return value===undefined?isWindow(el)?el["inner"+Dimension]:isDocument(el)?el.documentElement["offset"+Dimension]:(offset=this.offset())&&offset[dimension]:this.each(function(idx){el=$(this),el.css(dimension,funcArg(this,value,idx,el[dimension]()))})}}),adjacencyOperators.forEach(function(operator,operatorIndex){var inside=operatorIndex%2;$.fn[operator]=function(){var argType,nodes=$.map(arguments,function(arg){return argType=type(arg),argType=="object"||argType=="array"||arg==null?arg:zepto.fragment(arg)}),parent,copyByClone=this.length>1;return nodes.length<1?this:this.each(function(_,target){parent=inside?target:target.parentNode,target=operatorIndex==0?target.nextSibling:operatorIndex==1?target.firstChild:operatorIndex==2?target:null,nodes.forEach(function(node){if(copyByClone)node=node.cloneNode(!0);else if(!parent)return $(node).remove();traverseNode(parent.insertBefore(node,target),function(el){el.nodeName!=null&&el.nodeName.toUpperCase()==="SCRIPT"&&(!el.type||el.type==="text/javascript")&&!el.src&&window.eval.call(window,el.innerHTML)})})})},$.fn[inside?operator+"To":"insert"+(operatorIndex?"Before":"After")]=function(html){return $(html)[operator](this),this}}),zepto.Z.prototype=$.fn,zepto.uniq=uniq,zepto.deserializeValue=deserializeValue,$.zepto=zepto,$}();window.Zepto=Zepto,"$"in window||(window.$=Zepto),function($){function detect(ua){var os=this.os={},browser=this.browser={},webkit=ua.match(/WebKit\/([\d.]+)/),android=ua.match(/(Android)\s+([\d.]+)/),ipad=ua.match(/(iPad).*OS\s([\d_]+)/),iphone=!ipad&&ua.match(/(iPhone\sOS)\s([\d_]+)/),webos=ua.match(/(webOS|hpwOS)[\s\/]([\d.]+)/),touchpad=webos&&ua.match(/TouchPad/),kindle=ua.match(/Kindle\/([\d.]+)/),silk=ua.match(/Silk\/([\d._]+)/),blackberry=ua.match(/(BlackBerry).*Version\/([\d.]+)/),bb10=ua.match(/(BB10).*Version\/([\d.]+)/),rimtabletos=ua.match(/(RIM\sTablet\sOS)\s([\d.]+)/),playbook=ua.match(/PlayBook/),chrome=ua.match(/Chrome\/([\d.]+)/)||ua.match(/CriOS\/([\d.]+)/),firefox=ua.match(/Firefox\/([\d.]+)/);if(browser.webkit=!!webkit)browser.version=webkit[1];android&&(os.android=!0,os.version=android[2]),iphone&&(os.ios=os.iphone=!0,os.version=iphone[2].replace(/_/g,".")),ipad&&(os.ios=os.ipad=!0,os.version=ipad[2].replace(/_/g,".")),webos&&(os.webos=!0,os.version=webos[2]),touchpad&&(os.touchpad=!0),blackberry&&(os.blackberry=!0,os.version=blackberry[2]),bb10&&(os.bb10=!0,os.version=bb10[2]),rimtabletos&&(os.rimtabletos=!0,os.version=rimtabletos[2]),playbook&&(browser.playbook=!0),kindle&&(os.kindle=!0,os.version=kindle[1]),silk&&(browser.silk=!0,browser.version=silk[1]),!silk&&os.android&&ua.match(/Kindle Fire/)&&(browser.silk=!0),chrome&&(browser.chrome=!0,browser.version=chrome[1]),firefox&&(browser.firefox=!0,browser.version=firefox[1]),os.tablet=!!(ipad||playbook||android&&!ua.match(/Mobile/)||firefox&&ua.match(/Tablet/)),os.phone=!os.tablet&&!!(android||iphone||webos||blackberry||bb10||chrome&&ua.match(/Android/)||chrome&&ua.match(/CriOS\/([\d.]+)/)||firefox&&ua.match(/Mobile/))}detect.call($,navigator.userAgent),$.__detect=detect}(Zepto),function($){function zid(element){return element._zid||(element._zid=_zid++)}function findHandlers(element,event,fn,selector){event=parse(event);if(event.ns)var matcher=matcherFor(event.ns);return(handlers[zid(element)]||[]).filter(function(handler){return handler&&(!event.e||handler.e==event.e)&&(!event.ns||matcher.test(handler.ns))&&(!fn||zid(handler.fn)===zid(fn))&&(!selector||handler.sel==selector)})}function parse(event){var parts=(""+event).split(".");return{e:parts[0],ns:parts.slice(1).sort().join(" ")}}function matcherFor(ns){return new RegExp("(?:^| )"+ns.replace(" "," .* ?")+"(?: |$)")}function eachEvent(events,fn,iterator){$.type(events)!="string"?$.each(events,iterator):events.split(/\s/).forEach(function(type){iterator(type,fn)})}function eventCapture(handler,captureSetting){return handler.del&&(handler.e=="focus"||handler.e=="blur")||!!captureSetting}function realEvent(type){return hover[type]||type}function add(element,events,fn,selector,getDelegate,capture){var id=zid(element),set=handlers[id]||(handlers[id]=[]);eachEvent(events,fn,function(event,fn){var handler=parse(event);handler.fn=fn,handler.sel=selector,handler.e in hover&&(fn=function(e){var related=e.relatedTarget;if(!related||related!==this&&!$.contains(this,related))return handler.fn.apply(this,arguments)}),handler.del=getDelegate&&getDelegate(fn,event);var callback=handler.del||fn;handler.proxy=function(e){var result=callback.apply(element,[e].concat(e.data));return result===!1&&(e.preventDefault(),e.stopPropagation()),result},handler.i=set.length,set.push(handler),element.addEventListener(realEvent(handler.e),handler.proxy,eventCapture(handler,capture))})}function remove(element,events,fn,selector,capture){var id=zid(element);eachEvent(events||"",fn,function(event,fn){findHandlers(element,event,fn,selector).forEach(function(handler){delete handlers[id][handler.i],element.removeEventListener(realEvent(handler.e),handler.proxy,eventCapture(handler,capture))})})}function createProxy(event){var key,proxy={originalEvent:event};for(key in event)!ignoreProperties.test(key)&&event[key]!==undefined&&(proxy[key]=event[key]);return $.each(eventMethods,function(name,predicate){proxy[name]=function(){return this[predicate]=returnTrue,event[name].apply(event,arguments)},proxy[predicate]=returnFalse}),proxy}function fix(event){if(!("defaultPrevented"in event)){event.defaultPrevented=!1;var prevent=event.preventDefault;event.preventDefault=function(){this.defaultPrevented=!0,prevent.call(this)}}}var $$=$.zepto.qsa,handlers={},_zid=1,specialEvents={},hover={mouseenter:"mouseover",mouseleave:"mouseout"};specialEvents.click=specialEvents.mousedown=specialEvents.mouseup=specialEvents.mousemove="MouseEvents",$.event={add:add,remove:remove},$.proxy=function(fn,context){if($.isFunction(fn)){var proxyFn=function(){return fn.apply(context,arguments)};return proxyFn._zid=zid(fn),proxyFn}if(typeof context=="string")return $.proxy(fn[context],fn);throw new TypeError("expected function")},$.fn.bind=function(event,callback){return this.each(function(){add(this,event,callback)})},$.fn.unbind=function(event,callback){return this.each(function(){remove(this,event,callback)})},$.fn.one=function(event,callback){return this.each(function(i,element){add(this,event,callback,null,function(fn,type){return function(){var result=fn.apply(element,arguments);return remove(element,type,fn),result}})})};var returnTrue=function(){return!0},returnFalse=function(){return!1},ignoreProperties=/^([A-Z]|layer[XY]$)/,eventMethods={preventDefault:"isDefaultPrevented",stopImmediatePropagation:"isImmediatePropagationStopped",stopPropagation:"isPropagationStopped"};$.fn.delegate=function(selector,event,callback){return this.each(function(i,element){add(element,event,callback,selector,function(fn){return function(e){var evt,match=$(e.target).closest(selector,element).get(0);if(match)return evt=$.extend(createProxy(e),{currentTarget:match,liveFired:element}),fn.apply(match,[evt].concat([].slice.call(arguments,1)))}})})},$.fn.undelegate=function(selector,event,callback){return this.each(function(){remove(this,event,callback,selector)})},$.fn.live=function(event,callback){return $(document.body).delegate(this.selector,event,callback),this},$.fn.die=function(event,callback){return $(document.body).undelegate(this.selector,event,callback),this},$.fn.on=function(event,selector,callback){return!selector||$.isFunction(selector)?this.bind(event,selector||callback):this.delegate(selector,event,callback)},$.fn.off=function(event,selector,callback){return!selector||$.isFunction(selector)?this.unbind(event,selector||callback):this.undelegate(selector,event,callback)},$.fn.trigger=function(event,data){if(typeof event=="string"||$.isPlainObject(event))event=$.Event(event);return fix(event),event.data=data,this.each(function(){"dispatchEvent"in this&&this.dispatchEvent(event)})},$.fn.triggerHandler=function(event,data){var e,result;return this.each(function(i,element){e=createProxy(typeof event=="string"?$.Event(event):event),e.data=data,e.target=element,$.each(findHandlers(element,event.type||event),function(i,handler){result=handler.proxy(e);if(e.isImmediatePropagationStopped())return!1})}),result},"focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select keydown keypress keyup error".split(" ").forEach(function(event){$.fn[event]=function(callback){return callback?this.bind(event,callback):this.trigger(event)}}),["focus","blur"].forEach(function(name){$.fn[name]=function(callback){return callback?this.bind(name,callback):this.each(function(){try{this[name]()}catch(e){}}),this}}),$.Event=function(type,props){typeof type!="string"&&(props=type,type=props.type);var event=document.createEvent(specialEvents[type]||"Events"),bubbles=!0;if(props)for(var name in props)name=="bubbles"?bubbles=!!props[name]:event[name]=props[name];return event.initEvent(type,bubbles,!0,null,null,null,null,null,null,null,null,null,null,null,null),event.isDefaultPrevented=function(){return this.defaultPrevented},event}}(Zepto),function($){function triggerAndReturn(context,eventName,data){var event=$.Event(eventName);return $(context).trigger(event,data),!event.defaultPrevented}function triggerGlobal(settings,context,eventName,data){if(settings.global)return triggerAndReturn(context||document,eventName,data)}function ajaxStart(settings){settings.global&&$.active++===0&&triggerGlobal(settings,null,"ajaxStart")}function ajaxStop(settings){settings.global&&!--$.active&&triggerGlobal(settings,null,"ajaxStop")}function ajaxBeforeSend(xhr,settings){var context=settings.context;if(settings.beforeSend.call(context,xhr,settings)===!1||triggerGlobal(settings,context,"ajaxBeforeSend",[xhr,settings])===!1)return!1;triggerGlobal(settings,context,"ajaxSend",[xhr,settings])}function ajaxSuccess(data,xhr,settings){var context=settings.context,status="success";settings.success.call(context,data,status,xhr),triggerGlobal(settings,context,"ajaxSuccess",[xhr,settings,data]),ajaxComplete(status,xhr,settings)}function ajaxError(error,type,xhr,settings){var context=settings.context;settings.error.call(context,xhr,type,error),triggerGlobal(settings,context,"ajaxError",[xhr,settings,error]),ajaxComplete(type,xhr,settings)}function ajaxComplete(status,xhr,settings){var context=settings.context;settings.complete.call(context,xhr,status),triggerGlobal(settings,context,"ajaxComplete",[xhr,settings]),ajaxStop(settings)}function empty(){}function mimeToDataType(mime){return mime&&(mime=mime.split(";",2)[0]),mime&&(mime==htmlType?"html":mime==jsonType?"json":scriptTypeRE.test(mime)?"script":xmlTypeRE.test(mime)&&"xml")||"text"}function appendQuery(url,query){return(url+"&"+query).replace(/[&?]{1,2}/,"?")}function serializeData(options){options.processData&&options.data&&$.type(options.data)!="string"&&(options.data=$.param(options.data,options.traditional)),options.data&&(!options.type||options.type.toUpperCase()=="GET")&&(options.url=appendQuery(options.url,options.data))}function parseArguments(url,data,success,dataType){var hasData=!$.isFunction(data);return{url:url,data:hasData?data:undefined,success:hasData?$.isFunction(success)?success:undefined:data,dataType:hasData?dataType||success:success}}function serialize(params,obj,traditional,scope){var type,array=$.isArray(obj);$.each(obj,function(key,value){type=$.type(value),scope&&(key=traditional?scope:scope+"["+(array?"":key)+"]"),!scope&&array?params.add(value.name,value.value):type=="array"||!traditional&&type=="object"?serialize(params,value,traditional,key):params.add(key,value)})}var jsonpID=0,document=window.document,key,name,rscript=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,scriptTypeRE=/^(?:text|application)\/javascript/i,xmlTypeRE=/^(?:text|application)\/xml/i,jsonType="application/json",htmlType="text/html",blankRE=/^\s*$/;$.active=0,$.ajaxJSONP=function(options){if("type"in options){var callbackName="jsonp"+ ++jsonpID,script=document.createElement("script"),cleanup=function(){clearTimeout(abortTimeout),$(script).remove(),delete window[callbackName]},abort=function(type){cleanup();if(!type||type=="timeout")window[callbackName]=empty;ajaxError(null,type||"abort",xhr,options)},xhr={abort:abort},abortTimeout;return ajaxBeforeSend(xhr,options)===!1?(abort("abort"),!1):(window[callbackName]=function(data){cleanup(),ajaxSuccess(data,xhr,options)},script.onerror=function(){abort("error")},script.src=options.url.replace(/=\?/,"="+callbackName),$("head").append(script),options.timeout>0&&(abortTimeout=setTimeout(function(){abort("timeout")},options.timeout)),xhr)}return $.ajax(options)},$.ajaxSettings={type:"GET",beforeSend:empty,success:empty,error:empty,complete:empty,context:null,global:!0,xhr:function(){return new window.XMLHttpRequest},accepts:{script:"text/javascript, application/javascript",json:jsonType,xml:"application/xml, text/xml",html:htmlType,text:"text/plain"},crossDomain:!1,timeout:0,processData:!0,cache:!0},$.ajax=function(options){var settings=$.extend({},options||{});for(key in $.ajaxSettings)settings[key]===undefined&&(settings[key]=$.ajaxSettings[key]);ajaxStart(settings),settings.crossDomain||(settings.crossDomain=/^([\w-]+:)?\/\/([^\/]+)/.test(settings.url)&&RegExp.$2!=window.location.host),settings.url||(settings.url=window.location.toString()),serializeData(settings),settings.cache===!1&&(settings.url=appendQuery(settings.url,"_="+Date.now()));var dataType=settings.dataType,hasPlaceholder=/=\?/.test(settings.url);if(dataType=="jsonp"||hasPlaceholder)return hasPlaceholder||(settings.url=appendQuery(settings.url,"callback=?")),$.ajaxJSONP(settings);var mime=settings.accepts[dataType],baseHeaders={},protocol=/^([\w-]+:)\/\//.test(settings.url)?RegExp.$1:window.location.protocol,xhr=settings.xhr(),abortTimeout;settings.crossDomain||(baseHeaders["X-Requested-With"]="XMLHttpRequest"),mime&&(baseHeaders.Accept=mime,mime.indexOf(",")>-1&&(mime=mime.split(",",2)[0]),xhr.overrideMimeType&&xhr.overrideMimeType(mime));if(settings.contentType||settings.contentType!==!1&&settings.data&&settings.type.toUpperCase()!="GET")baseHeaders["Content-Type"]=settings.contentType||"application/x-www-form-urlencoded";settings.headers=$.extend(baseHeaders,settings.headers||{}),xhr.onreadystatechange=function(){if(xhr.readyState==4){xhr.onreadystatechange=empty,clearTimeout(abortTimeout);var result,error=!1;if(xhr.status>=200&&xhr.status<300||xhr.status==304||xhr.status==0&&protocol=="file:"){dataType=dataType||mimeToDataType(xhr.getResponseHeader("content-type")),result=xhr.responseText;try{dataType=="script"?(1,eval)(result):dataType=="xml"?result=xhr.responseXML:dataType=="json"&&(result=blankRE.test(result)?null:$.parseJSON(result))}catch(e){error=e}error?ajaxError(error,"parsererror",xhr,settings):ajaxSuccess(result,xhr,settings)}else ajaxError(null,xhr.status?"error":"abort",xhr,settings)}};var async="async"in settings?settings.async:!0;xhr.open(settings.type,settings.url,async);for(name in settings.headers)xhr.setRequestHeader(name,settings.headers[name]);return ajaxBeforeSend(xhr,settings)===!1?(xhr.abort(),!1):(settings.timeout>0&&(abortTimeout=setTimeout(function(){xhr.onreadystatechange=empty,xhr.abort(),ajaxError(null,"timeout",xhr,settings)},settings.timeout)),xhr.send(settings.data?settings.data:null),xhr)},$.get=function(url,data,success,dataType){return $.ajax(parseArguments.apply(null,arguments))},$.post=function(url,data,success,dataType){var options=parseArguments.apply(null,arguments);return options.type="POST",$.ajax(options)},$.getJSON=function(url,data,success){var options=parseArguments.apply(null,arguments);return options.dataType="json",$.ajax(options)},$.fn.load=function(url,data,success){if(!this.length)return this;var self=this,parts=url.split(/\s/),selector,options=parseArguments(url,data,success),callback=options.success;return parts.length>1&&(options.url=parts[0],selector=parts[1]),options.success=function(response){self.html(selector?$("<div>").html(response.replace(rscript,"")).find(selector):response),callback&&callback.apply(self,arguments)},$.ajax(options),this};var escape=encodeURIComponent;$.param=function(obj,traditional){var params=[];return params.add=function(k,v){this.push(escape(k)+"="+escape(v))},serialize(params,obj,traditional),params.join("&").replace(/%20/g,"+")}}(Zepto),function($){$.fn.serializeArray=function(){var result=[],el;return $(Array.prototype.slice.call(this.get(0).elements)).each(function(){el=$(this);var type=el.attr("type");this.nodeName.toLowerCase()!="fieldset"&&!this.disabled&&type!="submit"&&type!="reset"&&type!="button"&&(type!="radio"&&type!="checkbox"||this.checked)&&result.push({name:el.attr("name"),value:el.val()})}),result},$.fn.serialize=function(){var result=[];return this.serializeArray().forEach(function(elm){result.push(encodeURIComponent(elm.name)+"="+encodeURIComponent(elm.value))}),result.join("&")},$.fn.submit=function(callback){if(callback)this.bind("submit",callback);else if(this.length){var event=$.Event("submit");this.eq(0).trigger(event),event.defaultPrevented||this.get(0).submit()}return this}}(Zepto),function($,undefined){function dasherize(str){return downcase(str.replace(/([a-z])([A-Z])/,"$1-$2"))}function downcase(str){return str.toLowerCase()}function normalizeEvent(name){return eventPrefix?eventPrefix+name:downcase(name)}var prefix="",eventPrefix,endEventName,endAnimationName,vendors={Webkit:"webkit",Moz:"",O:"o",ms:"MS"},document=window.document,testEl=document.createElement("div"),supportedTransforms=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,transform,transitionProperty,transitionDuration,transitionTiming,animationName,animationDuration,animationTiming,cssReset={};$.each(vendors,function(vendor,event){if(testEl.style[vendor+"TransitionProperty"]!==undefined)return prefix="-"+downcase(vendor)+"-",eventPrefix=event,!1}),transform=prefix+"transform",cssReset[transitionProperty=prefix+"transition-property"]=cssReset[transitionDuration=prefix+"transition-duration"]=cssReset[transitionTiming=prefix+"transition-timing-function"]=cssReset[animationName=prefix+"animation-name"]=cssReset[animationDuration=prefix+"animation-duration"]=cssReset[animationTiming=prefix+"animation-timing-function"]="",$.fx={off:eventPrefix===undefined&&testEl.style.transitionProperty===undefined,speeds:{_default:400,fast:200,slow:600},cssPrefix:prefix,transitionEnd:normalizeEvent("TransitionEnd"),animationEnd:normalizeEvent("AnimationEnd")},$.fn.animate=function(properties,duration,ease,callback){return $.isPlainObject(duration)&&(ease=duration.easing,callback=duration.complete,duration=duration.duration),duration&&(duration=(typeof duration=="number"?duration:$.fx.speeds[duration]||$.fx.speeds._default)/1e3),this.anim(properties,duration,ease,callback)},$.fn.anim=function(properties,duration,ease,callback){var key,cssValues={},cssProperties,transforms="",that=this,wrappedCallback,endEvent=$.fx.transitionEnd;duration===undefined&&(duration=.4),$.fx.off&&(duration=0);if(typeof properties=="string")cssValues[animationName]=properties,cssValues[animationDuration]=duration+"s",cssValues[animationTiming]=ease||"linear",endEvent=$.fx.animationEnd;else{cssProperties=[];for(key in properties)supportedTransforms.test(key)?transforms+=key+"("+properties[key]+") ":(cssValues[key]=properties[key],cssProperties.push(dasherize(key)));transforms&&(cssValues[transform]=transforms,cssProperties.push(transform)),duration>0&&typeof properties=="object"&&(cssValues[transitionProperty]=cssProperties.join(", "),cssValues[transitionDuration]=duration+"s",cssValues[transitionTiming]=ease||"linear")}return wrappedCallback=function(event){if(typeof event!="undefined"){if(event.target!==event.currentTarget)return;$(event.target).unbind(endEvent,wrappedCallback)}$(this).css(cssReset),callback&&callback.call(this)},duration>0&&this.bind(endEvent,wrappedCallback),this.size()&&this.get(0).clientLeft,this.css(cssValues),duration<=0&&setTimeout(function(){that.each(function(){wrappedCallback.call(this)})},0),this},testEl=null}(Zepto),define("zepto",function(global){return function(){var ret,fn;return ret||global.$}}(this)),function(downloadBuilder){downloadBuilder(window,document)}(function(window,document,undefined){var DownloadBuilder=function(obj){this.options={location:obj&&obj.location||"local",author:obj&&obj.author||"",repo:obj&&obj.repo||"",branch:obj&&obj.branch||"",client_id:obj&&obj.client_id||"",client_secret:obj&&obj.client_secret||""},obj&&obj.cache!==undefined?this.options.cache=+obj.cache:this.options.cache=36e5,this._create()};DownloadBuilder.prototype={VERSION:"0.6.0",githubRateLimitUrl:"https://api.github.com/rate_limit",file:"",currentCheckbox:0,checkboxes:[],callback:function(){},_create:function(){return this.supportsFilesystem=this.fileSystemSupport(),this.github=this._isUsingGithub(),this.github.isUsing&&this._checkGithubRateLimit(),this},fileSystemSupport:function(){return window.requestFileSystem=window.requestFileSystem||window.webkitRequestFileSystem||window.mozRequestFileSystem,window.URL=window.URL||window.webkitURL||window.mozURL,window.storageInfo=window.storageInfo||window.webkitStorageInfo||window.mozStorageInfo,!window.requestFileSystem||!window.Blob||!window.URL||!window.storageInfo?!1:!0},_isUsingGithub:function(){var githubSelector=document.querySelectorAll('[data-location="github"]');return githubSelector.length||this.options.location==="github"?{isUsing:!0,length:githubSelector.length}:{isUsing:!1,length:githubSelector.length}},_checkGithubRateLimit:function(){var self=this;return this.JSONP(this.githubRateLimitUrl+"?client_id="+this.options.client_id+"&client_secret="+this.options.client_secret,function(data){self.rateLimit=data.data.rate.remaining}),this},JSONP:function(url,method,callback){url=url||"",method=method||"",callback=callback||function(){};var jsonpScript,generatedFunction;typeof method=="function"&&(callback=method,method="callback"),generatedFunction="jsonp"+Math.round(Math.random()*1000001),window[generatedFunction]=function(json){callback(json);try{delete window[generatedFunction]}catch(e){window[generatedFunction]=undefined}},url.indexOf("?")===-1?url+="?":url+="&",jsonpScript=document.createElement("script"),jsonpScript.setAttribute("src",url+method+"="+generatedFunction),document.getElementsByTagName("head")[0].appendChild(jsonpScript)},buildURL:function(checkboxes,fileName,lang,callback){if(checkboxes.length){var self=this,time=(new Date).getTime(),currentElem,location,repoAuthor,repoName,repoBranch,localPath,x,lastElem;typeof callback=="function"&&(self.callback=callback),self.currentCheckbox===0&&window.sessionStorage&&!window.sessionStorage.getItem("cache-time")&&window.sessionStorage.setItem("cache-time",time),self.checkboxes=checkboxes,lastElem=self.currentCheckbox===checkboxes.length-1||!1,currentElem=checkboxes[self.currentCheckbox],location=currentElem.getAttribute("data-location")||self.options.location||"",repoAuthor=currentElem.getAttribute("data-author")||self.options.author||"",repoName=currentElem.getAttribute("data-repo")||self.options.repo||"",repoBranch=currentElem.getAttribute("data-branch")||self.options.branch||"",localPath=currentElem.getAttribute("data-localpath")||"",window.sessionStorage&&(window.sessionStorage.getItem(currentElem.value)&&window.sessionStorage.getItem("cache-time")?time-window.sessionStorage.getItem("cache-time")>=self.options.cache?(window.sessionStorage.removeItem(currentElem.value),window.sessionStorage.removeItem("cache-time"),self._sendRequest({location:location,repoAuthor:repoAuthor,repoName:repoName,repoBranch:repoBranch,localPath:localPath,currentElem:currentElem,time:time,lastElem:lastElem,fileName:fileName,lang:lang})):(self.file+=window.sessionStorage.getItem(currentElem.value),self._fileStatus({lastElem:lastElem,lang:lang,fileName:fileName})):self._sendRequest({location:location,repoAuthor:repoAuthor,repoName:repoName,repoBranch:repoBranch,localPath:localPath,currentElem:currentElem,time:time,lastElem:lastElem,fileName:fileName,lang:lang}))}else callback.call(window,{content:"",fileName:fileName,lang:lang});return this},_localRequest:function(obj){var self=this,xhr,text;try{xhr=new XMLHttpRequest,xhr.open("GET",obj.url,!0),xhr.onreadystatechange=function(e){this.readyState===4&&this.status===200&&(text=this.responseText||this.response||"",self.file?self.file+="\n"+text:self.file+=text,window.sessionStorage.setItem(obj.elem.value,text||""),self._fileStatus({lastElem:obj.lastElem,lang:obj.lang,fileName:obj.fileName}))},xhr.send()}catch(error){}return this},_thirdPartyRequest:function(obj){var self=this,text;this.JSONP(obj.url,function(data){obj.type==="github"&&(text=self._parseGithubResponse({elem:obj.elem,data:data})||"",self.file?self.file+="\n"+text:self.file+=text,window.sessionStorage.setItem(obj.elem.value,text||""),self._fileStatus({lastElem:obj.lastElem,lang:obj.lang,fileName:obj.fileName}))})},_sendRequest:function(obj){obj.location==="github"?this.rateLimit!==0?(this.rateLimit-=1,this._thirdPartyRequest({type:obj.location,url:"https://api.github.com/repos/"+obj.repoAuthor+"/"+obj.repoName+"/contents/"+obj.currentElem.value+"?client_id="+this.options.client_id+"&client_secret="+this.options.client_secret,elem:obj.currentElem,time:obj.time,lastElem:obj.lastElem,lang:obj.lang,fileName:obj.fileName})):obj.localPath&&this._localRequest({url:obj.localpath,elem:obj.currentElem,time:obj.time,lastElem:obj.lastElem,lang:obj.lang,fileName:obj.fileName}):this._localRequest({url:obj.currentElem.value,elem:obj.currentElem,time:obj.time,lastElem:obj.lastElem,lang:obj.lang,fileName:obj.fileName})},_parseGithubResponse:function(obj){var self=this,base64EncodedContent,content,contentArray,text;return obj.data.data.content!==undefined&&window.atob&&obj.data.data.encoding==="base64"&&(base64EncodedContent=obj.data.data.content,base64EncodedContent=base64EncodedContent.replace(/\n/g,""),content=window.atob(base64EncodedContent),contentArray=content.split("\n"),text=contentArray.slice(0,contentArray.length).join("\n")||""),text},createURL:function(obj){var self=this,blob;return window.storageInfo.requestQuota(window.TEMPORARY,1048576,function(grantedBytes){window.requestFileSystem(self.storageType,grantedBytes,function(fs){fs.root.getFile(obj.fileName,{create:!0},function(fileEntry){fileEntry.createWriter(function(fileWriter){blob=new window.Blob([obj.data],{type:"text/"+obj.lang}),obj.callback.call(window,window.URL.createObjectURL(blob))})})})}),this},_fileStatus:function(obj){var self=this,url;return obj.lastElem?(this.currentCheckbox=0,self.supportsFilesystem?self.createURL({lang:obj.lang,fileName:obj.fileName,data:self.file,callback:function(url){window.sessionStorage.setItem("bloburl",url),self.callback.call(window,{url:url,content:self.file,fileName:obj.fileName,lang:obj.lang}),self.file=""}}):(self.callback.call(window,{content:self.file,fileName:obj.fileName,lang:obj.lang}),self.file="")):(this.currentCheckbox+=1,self.buildURL(self.checkboxes,obj.fileName,obj.lang,self.callback)),this}},window.DownloadBuilder=DownloadBuilder}),define("DownloadBuilder",function(global){return function(){var ret,fn;return ret||global.DownloadBuilder}}(this)),function(exports,global){function array_to_hash(a){var ret=Object.create(null);for(var i=0;i<a.length;++i)ret[a[i]]=!0;return ret}function slice(a,start){return Array.prototype.slice.call(a,start||0)}function characters(str){return str.split("")}function member(name,array){for(var i=array.length;--i>=0;)if(array[i]==name)return!0;return!1}function find_if(func,array){for(var i=0,n=array.length;i<n;++i)if(func(array[i]))return array[i]}function repeat_string(str,i){if(i<=0)return"";if(i==1)return str;var d=repeat_string(str,i>>1);return d+=d,i&1&&(d+=str),d}function DefaultsError(msg,defs){this.msg=msg,this.defs=defs}function defaults(args,defs,croak){args===!0&&(args={});var ret=args||{};if(croak)for(var i in ret)if(ret.hasOwnProperty(i)&&!defs.hasOwnProperty(i))throw new DefaultsError("`"+i+"` is not a supported option",defs);for(var i in defs)defs.hasOwnProperty(i)&&(ret[i]=args&&args.hasOwnProperty(i)?args[i]:defs[i]);return ret}function merge(obj,ext){for(var i in ext)ext.hasOwnProperty(i)&&(obj[i]=ext[i]);return obj}function noop(){}function push_uniq(array,el){array.indexOf(el)<0&&array.push(el)}function string_template(text,props){return text.replace(/\{(.+?)\}/g,function(str,p){return props[p]})}function remove(array,el){for(var i=array.length;--i>=0;)array[i]===el&&array.splice(i,1)}function mergeSort(array,cmp){function merge(a,b){var r=[],ai=0,bi=0,i=0;while(ai<a.length&&bi<b.length)cmp(a[ai],b[bi])<=0?r[i++]=a[ai++]:r[i++]=b[bi++];return ai<a.length&&r.push.apply(r,a.slice(ai)),bi<b.length&&r.push.apply(r,b.slice(bi)),r}function _ms(a){if(a.length<=1)return a;var m=Math.floor(a.length/2),left=a.slice(0,m),right=a.slice(m);return left=_ms(left),right=_ms(right),merge(left,right)}return array.length<2?array.slice():_ms(array)}function set_difference(a,b){return a.filter(function(el){return b.indexOf(el)<0})}function set_intersection(a,b){return a.filter(function(el){return b.indexOf(el)>=0})}function makePredicate(words){function compareTo(arr){if(arr.length==1)return f+="return str === "+JSON.stringify(arr[0])+";";f+="switch(str){";for(var i=0;i<arr.length;++i)f+="case "+JSON.stringify(arr[i])+":";f+="return true}return false;"}words instanceof Array||(words=words.split(" "));var f="",cats=[];e:for(var i=0;i<words.length;++i){for(var j=0;j<cats.length;++j)if(cats[j][0].length==words[i].length){cats[j].push(words[i]);continue e}cats.push([words[i]])}if(cats.length>3){cats.sort(function(a,b){return b.length-a.length}),f+="switch(str.length){";for(var i=0;i<cats.length;++i){var cat=cats[i];f+="case "+cat[0].length+":",compareTo(cat)}f+="}"}else compareTo(words);return new Function("str",f)}function Dictionary(){this._values=Object.create(null),this._size=0}function DEFNODE(type,props,methods,base){arguments.length<4&&(base=AST_Node),props?props=props.split(/\s+/):props=[];var self_props=props;base&&base.PROPS&&(props=props.concat(base.PROPS));var code="return function AST_"+type+"(props){ if (props) { ";for(var i=props.length;--i>=0;)code+="this."+props[i]+" = props."+props[i]+";";var proto=base&&new base;if(proto&&proto.initialize||methods&&methods.initialize)code+="this.initialize();";code+="}}";var ctor=(new Function(code))();proto&&(ctor.prototype=proto,ctor.BASE=base),base&&base.SUBCLASSES.push(ctor),ctor.prototype.CTOR=ctor,ctor.PROPS=props||null,ctor.SELF_PROPS=self_props,ctor.SUBCLASSES=[],type&&(ctor.prototype.TYPE=ctor.TYPE=type);if(methods)for(i in methods)methods.hasOwnProperty(i)&&(/^\$/.test(i)?ctor[i.substr(1)]=methods[i]:ctor.prototype[i]=methods[i]);return ctor.DEFMETHOD=function(name,method){this.prototype[name]=method},ctor}function walk_body(node,visitor){node.body instanceof AST_Statement?node.body._walk(visitor):node.body.forEach(function(stat){stat._walk(visitor)})}function TreeWalker(callback){this.visit=callback,this.stack=[]}function is_letter(code){return code>=97&&code<=122||code>=65&&code<=90||code>=170&&UNICODE.letter.test(String.fromCharCode(code))}function is_digit(code){return code>=48&&code<=57}function is_alphanumeric_char(code){return is_digit(code)||is_letter(code)}function is_unicode_combining_mark(ch){return UNICODE.non_spacing_mark.test(ch)||UNICODE.space_combining_mark.test(ch)}function is_unicode_connector_punctuation(ch){return UNICODE.connector_punctuation.test(ch)}function is_identifier(name){return/^[a-z_$][a-z0-9_$]*$/i.test(name)&&!RESERVED_WORDS(name)}function is_identifier_start(code){return code==36||code==95||is_letter(code)}function is_identifier_char(ch){var code=ch.charCodeAt(0);return is_identifier_start(code)||is_digit(code)||code==8204||code==8205||is_unicode_combining_mark(ch)||is_unicode_connector_punctuation(ch)}function parse_js_number(num){if(RE_HEX_NUMBER.test(num))return parseInt(num.substr(2),16);if(RE_OCT_NUMBER.test(num))return parseInt(num.substr(1),8);if(RE_DEC_NUMBER.test(num))return parseFloat(num)}function JS_Parse_Error(message,line,col,pos){this.message=message,this.line=line,this.col=col,this.pos=pos,this.stack=(new Error).stack}function js_error(message,filename,line,col,pos){throw AST_Node.warn("ERROR: {message} [{file}:{line},{col}]",{message:message,file:filename,line:line,col:col}),new JS_Parse_Error(message,line,col,pos)}function is_token(token,type,val){return token.type==type&&(val==null||token.value==val)}function tokenizer($TEXT,filename){function peek(){return S.text.charAt(S.pos)}function next(signal_eof,in_string){var ch=S.text.charAt(S.pos++);if(signal_eof&&!ch)throw EX_EOF;return ch=="\n"?(S.newline_before=S.newline_before||!in_string,++S.line,S.col=0):++S.col,ch}function find(what,signal_eof){var pos=S.text.indexOf(what,S.pos);if(signal_eof&&pos==-1)throw EX_EOF;return pos}function start_token(){S.tokline=S.line,S.tokcol=S.col,S.tokpos=S.pos}function token(type,value,is_comment){S.regex_allowed=type=="operator"&&!UNARY_POSTFIX[value]||type=="keyword"&&KEYWORDS_BEFORE_EXPRESSION(value)||type=="punc"&&PUNC_BEFORE_EXPRESSION(value);var ret={type:type,value:value,line:S.tokline,col:S.tokcol,pos:S.tokpos,endpos:S.pos,nlb:S.newline_before,file:filename};if(!is_comment){ret.comments_before=S.comments_before,S.comments_before=[];for(var i=0,len=ret.comments_before.length;i<len;i++)ret.nlb=ret.nlb||ret.comments_before[i].nlb}return S.newline_before=!1,new AST_Token(ret)}function skip_whitespace(){while(WHITESPACE_CHARS(peek()))next()}function read_while(pred){var ret="",ch,i=0;while((ch=peek())&&pred(ch,i++))ret+=next();return ret}function parse_error(err){js_error(err,filename,S.tokline,S.tokcol,S.tokpos)}function read_num(prefix){var has_e=!1,after_e=!1,has_x=!1,has_dot=prefix==".",num=read_while(function(ch,i){var code=ch.charCodeAt(0);switch(code){case 120:case 88:return has_x?!1:has_x=!0;case 101:case 69:return has_x?!0:has_e?!1:has_e=after_e=!0;case 45:return after_e||i==0&&!prefix;case 43:return after_e;case after_e=!1,46:return!has_dot&&!has_x&&!has_e?has_dot=!0:!1}return is_alphanumeric_char(code)});prefix&&(num=prefix+num);var valid=parse_js_number(num);if(!isNaN(valid))return token("num",valid);parse_error("Invalid syntax: "+num)}function read_escaped_char(in_string){var ch=next(!0,in_string);switch(ch.charCodeAt(0)){case 110:return"\n";case 114:return"\r";case 116:return"	";case 98:return"\b";case 118:return"";case 102:return"\f";case 48:return"\0";case 120:return String.fromCharCode(hex_bytes(2));case 117:return String.fromCharCode(hex_bytes(4));case 10:return"";default:return ch}}function hex_bytes(n){var num=0;for(;n>0;--n){var digit=parseInt(next(!0),16);isNaN(digit)&&parse_error("Invalid hex-character pattern in string"),num=num<<4|digit}return num}function read_line_comment(){next();var i=find("\n"),ret;return i==-1?(ret=S.text.substr(S.pos),S.pos=S.text.length):(ret=S.text.substring(S.pos,i),S.pos=i),token("comment1",ret,!0)}function read_name(){var backslash=!1,name="",ch,escaped=!1,hex;while((ch=peek())!=null)if(!backslash)if(ch=="\\")escaped=backslash=!0,next();else{if(!is_identifier_char(ch))break;name+=next()}else ch!="u"&&parse_error("Expecting UnicodeEscapeSequence -- uXXXX"),ch=read_escaped_char(),is_identifier_char(ch)||parse_error("Unicode char: "+ch.charCodeAt(0)+" is not valid in identifier"),name+=ch,backslash=!1;return KEYWORDS(name)&&escaped&&(hex=name.charCodeAt(0).toString(16).toUpperCase(),name="\\u"+"0000".substr(hex.length)+hex+name.slice(1)),name}function read_operator(prefix){function grow(op){if(!peek())return op;var bigger=op+peek();return OPERATORS(bigger)?(next(),grow(bigger)):op}return token("operator",grow(prefix||next()))}function handle_slash(){next();var regex_allowed=S.regex_allowed;switch(peek()){case"/":return S.comments_before.push(read_line_comment()),S.regex_allowed=regex_allowed,next_token();case"*":return S.comments_before.push(read_multiline_comment()),S.regex_allowed=regex_allowed,next_token()}return S.regex_allowed?read_regexp(""):read_operator("/")}function handle_dot(){return next(),is_digit(peek().charCodeAt(0))?read_num("."):token("punc",".")}function read_word(){var word=read_name();return KEYWORDS_ATOM(word)?token("atom",word):KEYWORDS(word)?OPERATORS(word)?token("operator",word):token("keyword",word):token("name",word)}function with_eof_error(eof_error,cont){return function(x){try{return cont(x)}catch(ex){if(ex!==EX_EOF)throw ex;parse_error(eof_error)}}}function next_token(force_regexp){if(force_regexp!=null)return read_regexp(force_regexp);skip_whitespace(),start_token();var ch=peek();if(!ch)return token("eof");var code=ch.charCodeAt(0);switch(code){case 34:case 39:return read_string();case 46:return handle_dot();case 47:return handle_slash()}if(is_digit(code))return read_num();if(PUNC_CHARS(ch))return token("punc",next());if(OPERATOR_CHARS(ch))return read_operator();if(code==92||is_identifier_start(code))return read_word();parse_error("Unexpected character '"+ch+"'")}var S={text:$TEXT.replace(/\r\n?|[\n\u2028\u2029]/g,"\n").replace(/\uFEFF/g,""),filename:filename,pos:0,tokpos:0,line:1,tokline:0,col:0,tokcol:0,newline_before:!1,regex_allowed:!1,comments_before:[]},read_string=with_eof_error("Unterminated string constant",function(){var quote=next(),ret="";for(;;){var ch=next(!0);if(ch=="\\"){var octal_len=0,first=null;ch=read_while(function(ch){if(ch>="0"&&ch<="7"){if(!first)return first=ch,++octal_len;if(first<="3"&&octal_len<=2)return++octal_len;if(first>="4"&&octal_len<=1)return++octal_len}return!1}),octal_len>0?ch=String.fromCharCode(parseInt(ch,8)):ch=read_escaped_char(!0)}else if(ch==quote)break;ret+=ch}return token("string",ret)}),read_multiline_comment=with_eof_error("Unterminated multiline comment",function(){next();var i=find("*/",!0),text=S.text.substring(S.pos,i),a=text.split("\n"),n=a.length;return S.pos=i+2,S.line+=n-1,n>1?S.col=a[n-1].length:S.col+=a[n-1].length,S.col+=2,S.newline_before=S.newline_before||text.indexOf("\n")>=0,token("comment2",text,!0)}),read_regexp=with_eof_error("Unterminated regular expression",function(regexp){var prev_backslash=!1,ch,in_class=!1;while(ch=next(!0))if(prev_backslash)regexp+="\\"+ch,prev_backslash=!1;else if(ch=="[")in_class=!0,regexp+=ch;else if(ch=="]"&&in_class)in_class=!1,regexp+=ch;else{if(ch=="/"&&!in_class)break;ch=="\\"?prev_backslash=!0:regexp+=ch}var mods=read_name();return token("regexp",new RegExp(regexp,mods))});return next_token.context=function(nc){return nc&&(S=nc),S},next_token}function parse($TEXT,options){function is(type,value){return is_token(S.token,type,value)}function peek(){return S.peeked||(S.peeked=S.input())}function next(){return S.prev=S.token,S.peeked?(S.token=S.peeked,S.peeked=null):S.token=S.input(),S.in_directives=S.in_directives&&(S.token.type=="string"||is("punc",";")),S.token}function prev(){return S.prev}function croak(msg,line,col,pos){var ctx=S.input.context();js_error(msg,ctx.filename,line!=null?line:ctx.tokline,col!=null?col:ctx.tokcol,pos!=null?pos:ctx.tokpos)}function token_error(token,msg){croak(msg,token.line,token.col)}function unexpected(token){token==null&&(token=S.token),token_error(token,"Unexpected token: "+token.type+" ("+token.value+")")}function expect_token(type,val){if(is(type,val))return next();token_error(S.token,"Unexpected token "+S.token.type+" «"+S.token.value+"»"+", expected "+type+" «"+val+"»")}function expect(punc){return expect_token("punc",punc)}function can_insert_semicolon(){return!options.strict&&(S.token.nlb||is("eof")||is("punc","}"))}function semicolon(){is("punc",";")?next():can_insert_semicolon()||unexpected()}function parenthesised(){expect("(");var exp=expression(!0);return expect(")"),exp}function embed_tokens(parser){return function(){var start=S.token,expr=parser(),end=prev();return expr.start=start,expr.end=end,expr}}function labeled_statement(){var label=as_symbol(AST_Label);find_if(function(l){return l.name==label.name},S.labels)&&croak("Label "+label.name+" defined twice"),expect(":"),S.labels.push(label);var stat=statement();return S.labels.pop(),new AST_LabeledStatement({body:stat,label:label})}function simple_statement(tmp){return new AST_SimpleStatement({body:(tmp=expression(!0),semicolon(),tmp)})}function break_cont(type){var label=null;return can_insert_semicolon()||(label=as_symbol(AST_LabelRef,!0)),label!=null?find_if(function(l){return l.name==label.name},S.labels)||croak("Undefined label "+label.name):S.in_loop==0&&croak(type.TYPE+" not inside a loop or switch"),semicolon(),new type({label:label})}function for_(){expect("(");var init=null;if(!is("punc",";")){init=is("keyword","var")?(next(),var_(!0)):expression(!0,!0);if(is("operator","in"))return init instanceof AST_Var&&init.definitions.length>1&&croak("Only one variable declaration allowed in for..in loop"),next(),for_in(init)}return regular_for(init)}function regular_for(init){expect(";");var test=is("punc",";")?null:expression(!0);expect(";");var step=is("punc",")")?null:expression(!0);return expect(")"),new AST_For({init:init,condition:test,step:step,body:in_loop(statement)})}function for_in(init){var lhs=init instanceof AST_Var?init.definitions[0].name:null,obj=expression(!0);return expect(")"),new AST_ForIn({init:init,name:lhs,object:obj,body:in_loop(statement)})}function if_(){var cond=parenthesised(),body=statement(),belse=null;return is("keyword","else")&&(next(),belse=statement()),new AST_If({condition:cond,body:body,alternative:belse})}function block_(){expect("{");var a=[];while(!is("punc","}"))is("eof")&&unexpected(),a.push(statement());return next(),a}function switch_body_(){expect("{");var a=[],cur=null,branch=null,tmp;while(!is("punc","}"))is("eof")&&unexpected(),is("keyword","case")?(branch&&(branch.end=prev()),cur=[],branch=new AST_Case({start:(tmp=S.token,next(),tmp),expression:expression(!0),body:cur}),a.push(branch),expect(":")):is("keyword","default")?(branch&&(branch.end=prev()),cur=[],branch=new AST_Default({start:(tmp=S.token,next(),expect(":"),tmp),body:cur}),a.push(branch)):(cur||unexpected(),cur.push(statement()));return branch&&(branch.end=prev()),next(),a}function try_(){var body=block_(),bcatch=null,bfinally=null;if(is("keyword","catch")){var start=S.token;next(),expect("(");var name=as_symbol(AST_SymbolCatch);expect(")"),bcatch=new AST_Catch({start:start,argname:name,body:block_(),end:prev()})}if(is("keyword","finally")){var start=S.token;next(),bfinally=new AST_Finally({start:start,body:block_(),end:prev()})}return!bcatch&&!bfinally&&croak("Missing catch/finally blocks"),new AST_Try({body:body,bcatch:bcatch,bfinally:bfinally})}function vardefs(no_in,in_const){var a=[];for(;;){a.push(new AST_VarDef({start:S.token,name:as_symbol(in_const?AST_SymbolConst:AST_SymbolVar),value:is("operator","=")?(next(),expression(!1,no_in)):null,end:prev()}));if(!is("punc",","))break;next()}return a}function as_atom_node(){var tok=S.token,ret;switch(tok.type){case"name":return as_symbol(AST_SymbolRef);case"num":ret=new AST_Number({start:tok,end:tok,value:tok.value});break;case"string":ret=new AST_String({start:tok,end:tok,value:tok.value});break;case"regexp":ret=new AST_RegExp({start:tok,end:tok,value:tok.value});break;case"atom":switch(tok.value){case"false":ret=new AST_False({start:tok,end:tok});break;case"true":ret=new AST_True({start:tok,end:tok});break;case"null":ret=new AST_Null({start:tok,end:tok})}}return next(),ret}function expr_list(closing,allow_trailing_comma,allow_empty){var first=!0,a=[];while(!is("punc",closing)){first?first=!1:expect(",");if(allow_trailing_comma&&is("punc",closing))break;is("punc",",")&&allow_empty?a.push(new AST_Hole({start:S.token,end:S.token})):a.push(expression(!1))}return next(),a}function as_property_name(){var tmp=S.token;next();switch(tmp.type){case"num":case"string":case"name":case"operator":case"keyword":case"atom":return tmp.value;default:unexpected()}}function as_name(){var tmp=S.token;next();switch(tmp.type){case"name":case"operator":case"keyword":case"atom":return tmp.value;default:unexpected()}}function as_symbol(type,noerror){if(!is("name"))return noerror||croak("Name expected"),null;var name=S.token.value,sym=new(name=="this"?AST_This:type)({name:String(S.token.value),start:S.token,end:S.token});return next(),sym}function make_unary(ctor,op,expr){return(op=="++"||op=="--")&&!is_assignable(expr)&&croak("Invalid use of "+op+" operator"),new ctor({operator:op,expression:expr})}function expr_ops(no_in){return expr_op(maybe_unary(!0),0,no_in)}function is_assignable(expr){if(!options.strict)return!0;switch(expr[0]+""){case"dot":case"sub":case"new":case"call":return!0;case"name":return expr[1]!="this"}}function in_loop(cont){++S.in_loop;var ret=cont();return--S.in_loop,ret}options=defaults(options,{strict:!1,filename:null,toplevel:null});var S={input:typeof $TEXT=="string"?tokenizer($TEXT,options.filename):$TEXT,token:null,prev:null,peeked:null,in_function:0,in_directives:!0,in_loop:0,labels:[]};S.token=next();var statement=embed_tokens(function(){var tmp;if(is("operator","/")||is("operator","/="))S.peeked=null,S.token=S.input(S.token.value.substr(1));switch(S.token.type){case"string":var dir=S.in_directives,stat=simple_statement();if(dir&&stat.body instanceof AST_String&&!is("punc",","))return new AST_Directive({value:stat.body.value});return stat;case"num":case"regexp":case"operator":case"atom":return simple_statement();case"name":return is_token(peek(),"punc",":")?labeled_statement():simple_statement();case"punc":switch(S.token.value){case"{":return new AST_BlockStatement({start:S.token,body:block_(),end:prev()});case"[":case"(":return simple_statement();case";":return next(),new AST_EmptyStatement;default:unexpected()};case"keyword":switch(tmp=S.token.value,next(),tmp){case"break":return break_cont(AST_Break);case"continue":return break_cont(AST_Continue);case"debugger":return semicolon(),new AST_Debugger;case"do":return new AST_Do({body:in_loop(statement),condition:(expect_token("keyword","while"),tmp=parenthesised(),semicolon(),tmp)});case"while":return new AST_While({condition:parenthesised(),body:in_loop(statement)});case"for":return for_();case"function":return function_(!0);case"if":return if_();case"return":return S.in_function==0&&croak("'return' outside of function"),new AST_Return({value:is("punc",";")?(next(),null):can_insert_semicolon()?null:(tmp=expression(!0),semicolon(),tmp)});case"switch":return new AST_Switch({expression:parenthesised(),body:in_loop(switch_body_)});case"throw":return S.token.nlb&&croak("Illegal newline after 'throw'"),new AST_Throw({value:(tmp=expression(!0),semicolon(),tmp)});case"try":return try_();case"var":return tmp=var_(),semicolon(),tmp;case"const":return tmp=const_(),semicolon(),tmp;case"with":return new AST_With({expression:parenthesised(),body:statement()});default:unexpected()}}}),function_=function(in_statement,ctor){var is_accessor=ctor===AST_Accessor,name=is("name")?as_symbol(in_statement?AST_SymbolDefun:is_accessor?AST_SymbolAccessor:AST_SymbolLambda):is_accessor&&(is("string")||is("num"))?as_atom_node():null;return in_statement&&!name&&unexpected(),expect("("),ctor||(ctor=in_statement?AST_Defun:AST_Function),new ctor({name:name,argnames:function(first,a){while(!is("punc",")"))first?first=!1:expect(","),a.push(as_symbol(AST_SymbolFunarg));return next(),a}(!0,[]),body:function(loop,labels){++S.in_function,S.in_directives=!0,S.in_loop=0,S.labels=[];var a=block_();return--S.in_function,S.in_loop=loop,S.labels=labels,a}(S.in_loop,S.labels)})},var_=function(no_in){return new AST_Var({start:prev(),definitions:vardefs(no_in,!1),end:prev()})},const_=function(){return new AST_Const({start:prev(),definitions:vardefs(!1,!0),end:prev()})},new_=function(){var start=S.token;expect_token("operator","new");var newexp=expr_atom(!1),args;return is("punc","(")?(next(),args=expr_list(")")):args=[],subscripts(new AST_New({start:start,expression:newexp,args:args,end:prev()}),!0)},expr_atom=function(allow_calls){if(is("operator","new"))return new_();var start=S.token;if(is("punc")){switch(start.value){case"(":next();var ex=expression(!0);return ex.start=start,ex.end=S.token,expect(")"),subscripts(ex,allow_calls);case"[":return subscripts(array_(),allow_calls);case"{":return subscripts(object_(),allow_calls)}unexpected()}if(is("keyword","function")){next();var func=function_(!1);return func.start=start,func.end=prev(),subscripts(func,allow_calls)}if(ATOMIC_START_TOKEN[S.token.type])return subscripts(as_atom_node(),allow_calls);unexpected()},array_=embed_tokens(function(){return expect("["),new AST_Array({elements:expr_list("]",!options.strict,!0)})}),object_=embed_tokens(function(){expect("{");var first=!0,a=[];while(!is("punc","}")){first?first=!1:expect(",");if(!options.strict&&is("punc","}"))break;var start=S.token,type=start.type,name=as_property_name();if(type=="name"&&!is("punc",":")){if(name=="get"){a.push(new AST_ObjectGetter({start:start,key:name,value:function_(!1,AST_Accessor),end:prev()}));continue}if(name=="set"){a.push(new AST_ObjectSetter({start:start,key:name,value:function_(!1,AST_Accessor),end:prev()}));continue}}expect(":"),a.push(new AST_ObjectKeyVal({start:start,key:name,value:expression(!1),end:prev()}))}return next(),new AST_Object({properties:a})}),subscripts=function(expr,allow_calls){var start=expr.start;if(is("punc","."))return next(),subscripts(new AST_Dot({start:start,expression:expr,property:as_name(),end:prev()}),allow_calls);if(is("punc","[")){next();var prop=expression(!0);return expect("]"),subscripts(new AST_Sub({start:start,expression:expr,property:prop,end:prev()}),allow_calls)}return allow_calls&&is("punc","(")?(next(),subscripts(new AST_Call({start:start,expression:expr,args:expr_list(")"),end:prev()}),!0)):expr},maybe_unary=function(allow_calls){var start=S.token;if(is("operator")&&UNARY_PREFIX(start.value)){next();var ex=make_unary(AST_UnaryPrefix,start.value,maybe_unary(allow_calls));return ex.start=start,ex.end=prev(),ex}var val=expr_atom(allow_calls);while(is("operator")&&UNARY_POSTFIX(S.token.value)&&!S.token.nlb)val=make_unary(AST_UnaryPostfix,S.token.value,val),val.start=start,val.end=S.token,next();return val},expr_op=function(left,min_prec,no_in){var op=is("operator")?S.token.value:null;op=="in"&&no_in&&(op=null);var prec=op!=null?PRECEDENCE[op]:null;if(prec!=null&&prec>min_prec){next();var right=expr_op(maybe_unary(!0),prec,no_in);return expr_op(new AST_Binary({start:left.start,left:left,operator:op,right:right,end:right.end}),min_prec,no_in)}return left},maybe_conditional=function(no_in){var start=S.token,expr=expr_ops(no_in);if(is("operator","?")){next();var yes=expression(!1);return expect(":"),new AST_Conditional({start:start,condition:expr,consequent:yes,alternative:expression(!1,no_in),end:peek()})}return expr},maybe_assign=function(no_in){var start=S.token,left=maybe_conditional(no_in),val=S.token.value;if(is("operator")&&ASSIGNMENT(val)){if(is_assignable(left))return next(),new AST_Assign({start:start,left:left,operator:val,right:maybe_assign(no_in),end:prev()});croak("Invalid assignment")}return left},expression=function(commas,no_in){var start=S.token,expr=maybe_assign(no_in);return commas&&is("punc",",")?(next(),new AST_Seq({start:start,car:expr,cdr:expression(!0,no_in),end:peek()})):expr};return function(){var start=S.token,body=[];while(!is("eof"))body.push(statement());var end=prev(),toplevel=options.toplevel;return toplevel?(toplevel.body=toplevel.body.concat(body),toplevel.end=end):toplevel=new AST_Toplevel({start:start,body:body,end:end}),toplevel}()}function TreeTransformer(before,after){TreeWalker.call(this),this.before=before,this.after=after}function SymbolDef(scope,index,orig){this.name=orig.name,this.orig=[orig],this.scope=scope,this.references=[],this.global=!1,this.mangled_name=null,this.undeclared=!1,this.constant=!1,this.index=index}function OutputStream(options){function to_ascii(str){return str.replace(/[\u0080-\uffff]/g,function(ch){var code=ch.charCodeAt(0).toString(16);while(code.length<4)code="0"+code;return"\\u"+code})}function make_string(str){var dq=0,sq=0;return str=str.replace(/[\\\b\f\n\r\t\x22\x27\u2028\u2029\0]/g,function(s){switch(s){case"\\":return"\\\\";case"\b":return"\\b";case"\f":return"\\f";case"\n":return"\\n";case"\r":return"\\r";case"\u2028":return"\\u2028";case"\u2029":return"\\u2029";case'"':return++dq,'"';case"'":return++sq,"'";case"\0":return"\\0"}return s}),options.ascii_only&&(str=to_ascii(str)),dq>sq?"'"+str.replace(/\x27/g,"\\'")+"'":'"'+str.replace(/\x22/g,'\\"')+'"'}function encode_string(str){var ret=make_string(str);return options.inline_script&&(ret=ret.replace(/<\x2fscript([>\/\t\n\f\r ])/gi,"<\\/script$1")),ret}function make_name(name){return name=name.toString(),options.ascii_only&&(name=to_ascii(name)),name}function make_indent(back){return repeat_string(" ",options.indent_start+indentation-back*options.indent_level)}function last_char(){return last.charAt(last.length-1)}function maybe_newline(){options.max_line_len&&current_col>options.max_line_len&&print("\n")}function print(str){str=String(str);var ch=str.charAt(0);might_need_semicolon&&((!ch||";}".indexOf(ch)<0)&&!/[;]$/.test(last)&&(options.semicolons||requireSemicolonChars(ch)?(OUTPUT+=";",current_col++,current_pos++):(OUTPUT+="\n",current_pos++,current_line++,current_col=0),options.beautify||(might_need_space=!1)),might_need_semicolon=!1,maybe_newline());if(!options.beautify&&options.preserve_line&&stack[stack.length-1]){var target_line=stack[stack.length-1].start.line;while(current_line<target_line)OUTPUT+="\n",current_pos++,current_line++,current_col=0,might_need_space=!1}if(might_need_space){var prev=last_char();if(is_identifier_char(prev)&&(is_identifier_char(ch)||ch=="\\")||/^[\+\-\/]$/.test(ch)&&ch==prev)OUTPUT+=" ",current_col++,current_pos++;might_need_space=!1}var a=str.split(/\r?\n/),n=a.length-1;current_line+=n,n==0?current_col+=a[n].length:current_col=a[n].length,current_pos+=str.length,last=str,OUTPUT+=str}function force_semicolon(){might_need_semicolon=!1,print(";")}function next_indent(){return indentation+options.indent_level}function with_block(cont){var ret;return print("{"),newline(),with_indent(next_indent(),function(){ret=cont()}),indent(),print("}"),ret}function with_parens(cont){print("(");var ret=cont();return print(")"),ret}function with_square(cont){print("[");var ret=cont();return print("]"),ret}function comma(){print(","),space()}function colon(){print(":"),options.space_colon&&space()}function get(){return OUTPUT}options=defaults(options,{indent_start:0,indent_level:4,quote_keys:!1,space_colon:!0,ascii_only:!1,inline_script:!1,width:80,max_line_len:32e3,ie_proof:!0,beautify:!1,source_map:null,bracketize:!1,semicolons:!0,comments:!1,preserve_line:!1},!0);var indentation=0,current_col=0,current_line=1,current_pos=0,OUTPUT="",might_need_space=!1,might_need_semicolon=!1,last=null,requireSemicolonChars=makePredicate("( [ + * / - , ."),space=options.beautify?function(){print(" ")}:function(){might_need_space=!0},indent=options.beautify?function(half){options.beautify&&print(make_indent(half?.5:0))}:noop,with_indent=options.beautify?function(col,cont){col===!0&&(col=next_indent());var save_indentation=indentation;indentation=col;var ret=cont();return indentation=save_indentation,ret}:function(col,cont){return cont()},newline=options.beautify?function(){print("\n")}:noop,semicolon=options.beautify?function(){print(";")}:function(){might_need_semicolon=!0},add_mapping=options.source_map?function(token,name){try{token&&options.source_map.add(token.file||"?",current_line,current_col,token.line,token.col,!name&&token.type=="name"?token.value:name)}catch(ex){AST_Node.warn("Couldn't figure out mapping for {file}:{line},{col} → {cline},{ccol} [{name}]",{file:token.file,line:token.line,col:token.col,cline:current_line,ccol:current_col,name:name||""})}}:noop,stack=[];return{get:get,toString:get,indent:indent,indentation:function(){return indentation},current_width:function(){return current_col-indentation},should_break:function(){return options.width&&this.current_width()>=options.width},newline:newline,print:print,space:space,comma:comma,colon:colon,last:function(){return last},semicolon:semicolon,force_semicolon:force_semicolon,to_ascii:to_ascii,print_name:function(name){print(make_name(name))},print_string:function(str){print(encode_string(str))},next_indent:next_indent,with_indent:with_indent,with_block:with_block,with_parens:with_parens,with_square:with_square,add_mapping:add_mapping,option:function(opt){return options[opt]},line:function(){return current_line},col:function(){return current_col},pos:function(){return current_pos},push_node:function(node){stack.push(node)},pop_node:function(){return stack.pop()},stack:function(){return stack},parent:function(n){return stack[stack.length-2-(n||0)]}}}function Compressor(options,false_by_default){if(!(this instanceof Compressor))return new Compressor(options,false_by_default);TreeTransformer.call(this,this.before,this.after),this.options=defaults(options,{sequences:!false_by_default,properties:!false_by_default,dead_code:!false_by_default,drop_debugger:!false_by_default,unsafe:!false_by_default,unsafe_comps:!1,conditionals:!false_by_default,comparisons:!false_by_default,evaluate:!false_by_default,booleans:!false_by_default,loops:!false_by_default,unused:!false_by_default,hoist_funs:!false_by_default,hoist_vars:!1,if_return:!false_by_default,join_vars:!false_by_default,cascade:!false_by_default,side_effects:!false_by_default,warnings:!0,global_defs:{}},!0)}function SourceMap(options){function add(source,gen_line,gen_col,orig_line,orig_col,name){if(orig_map){var info=orig_map.originalPositionFor({line:orig_line,column:orig_col});source=info.source,orig_line=info.line,orig_col=info.column,name=info.name}generator.addMapping({generated:{line:gen_line,column:gen_col},original:{line:orig_line,column:orig_col},source:source,name:name})}options=defaults(options,{file:null,root:null,orig:null});var generator=new MOZ_SourceMap.SourceMapGenerator({file:options.file,sourceRoot:options.root}),orig_map=options.orig&&new MOZ_SourceMap.SourceMapConsumer(options.orig);return{add:add,get:function(){return generator},toString:function(){return generator.toString()}}}global.UglifyJS=exports;var MAP=function(){function MAP(a,f,backwards){function doit(){var val=f(a[i],i),is_last=val instanceof Last;return is_last&&(val=val.v),val instanceof AtTop?(val=val.v,val instanceof Splice?top.push.apply(top,backwards?val.v.slice().reverse():val.v):top.push(val)):val!==skip&&(val instanceof Splice?ret.push.apply(ret,backwards?val.v.slice().reverse():val.v):ret.push(val)),is_last}var ret=[],top=[],i;if(a instanceof Array){if(backwards){for(i=a.length;--i>=0;)if(doit())break;ret.reverse(),top.reverse()}else for(i=0;i<a.length;++i)if(doit())break}else for(i in a)if(a.hasOwnProperty(i)&&doit())break;return top.concat(ret)}function AtTop(val){this.v=val}function Splice(val){this.v=val}function Last(val){this.v=val}MAP.at_top=function(val){return new AtTop(val)},MAP.splice=function(val){return new Splice(val)},MAP.last=function(val){return new Last(val)};var skip=MAP.skip={};return MAP}();Dictionary.prototype={set:function(key,val){return this.has(key)||++this._size,this._values["$"+key]=val,this},add:function(key,val){return this.has(key)?this.get(key).push(val):this.set(key,[val]),this},get:function(key){return this._values["$"+key]},del:function(key){return this.has(key)&&(--this._size,delete this._values["$"+key]),this},has:function(key){return"$"+key in this._values},each:function(f){for(var i in this._values)f(this._values[i],i.substr(1))},size:function(){return this._size},map:function(f){var ret=[];for(var i in this._values)ret.push(f(this._values[i],i.substr(1)));return ret}};var AST_Token=DEFNODE("Token","type value line col pos endpos nlb comments_before file",{},null),AST_Node=DEFNODE("Node","start end",{clone:function(){return new this.CTOR(this)},$documentation:"Base class of all AST nodes",$propdoc:{start:"[AST_Token] The first token of this node",end:"[AST_Token] The last token of this node"},_walk:function(visitor){return visitor._visit(this)},walk:function(visitor){return this._walk(visitor)}},null);AST_Node.warn_function=null,AST_Node.warn=function(txt,props){AST_Node.warn_function&&AST_Node.warn_function(string_template(txt,props))};var AST_Statement=DEFNODE("Statement",null,{$documentation:"Base class of all statements"}),AST_Debugger=DEFNODE("Debugger",null,{$documentation:"Represents a debugger statement"},AST_Statement),AST_Directive=DEFNODE("Directive","value scope",{$documentation:"Represents a directive, like ",$propdoc:{value:"[string] The value of this directive as a plain string (it's not an AST_String!)",scope:"[AST_Scope/S] The scope that this directive affects"}},AST_Statement),AST_SimpleStatement=DEFNODE("SimpleStatement","body",{$documentation:"A statement consisting of an expression, i.e. a = 1 + 2",$propdoc:{body:"[AST_Node] an expression node (should not be instanceof AST_Statement)"},_walk:function(visitor){return visitor._visit(this,function(){this.body._walk(visitor)})}},AST_Statement),AST_Block=DEFNODE("Block","body",{$documentation:"A body of statements (usually bracketed)",$propdoc:{body:"[AST_Statement*] an array of statements"},_walk:function(visitor){return visitor._visit(this,function(){walk_body(this,visitor)})}},AST_Statement),AST_BlockStatement=DEFNODE("BlockStatement",null,{$documentation:"A block statement"},AST_Block),AST_EmptyStatement=DEFNODE("EmptyStatement",null,{$documentation:"The empty statement (empty block or simply a semicolon)",_walk:function(visitor){return visitor._visit(this)}},AST_Statement),AST_StatementWithBody=DEFNODE("StatementWithBody","body",{$documentation:"Base class for all statements that contain one nested body: `For`, `ForIn`, `Do`, `While`, `With`",$propdoc:{body:"[AST_Statement] the body; this should always be present, even if it's an AST_EmptyStatement"},_walk:function(visitor){return visitor._visit(this,function(){this.body._walk(visitor)})}},AST_Statement),AST_LabeledStatement=DEFNODE("LabeledStatement","label",{$documentation:"Statement with a label",$propdoc:{label:"[AST_Label] a label definition"},_walk:function(visitor){return visitor._visit(this,function(){this.label._walk(visitor),this.body._walk(visitor)})}},AST_StatementWithBody),AST_DWLoop=DEFNODE("DWLoop","condition",{$documentation:"Base class for do/while statements",$propdoc:{condition:"[AST_Node] the loop condition.  Should not be instanceof AST_Statement"},_walk:function(visitor){return visitor._visit(this,function(){this.condition._walk(visitor),this.body._walk(visitor)})}},AST_StatementWithBody),AST_Do=DEFNODE("Do",null,{$documentation:"A `do` statement"},AST_DWLoop),AST_While=DEFNODE("While",null,{$documentation:"A `while` statement"},AST_DWLoop),AST_For=DEFNODE("For","init condition step",{$documentation:"A `for` statement",$propdoc:{init:"[AST_Node?] the `for` initialization code, or null if empty",condition:"[AST_Node?] the `for` termination clause, or null if empty",step:"[AST_Node?] the `for` update clause, or null if empty"},_walk:function(visitor){return visitor._visit(this,function(){this.init&&this.init._walk(visitor),this.condition&&this.condition._walk(visitor),this.step&&this.step._walk(visitor),this.body._walk(visitor)})}},AST_StatementWithBody),AST_ForIn=DEFNODE("ForIn","init name object",{$documentation:"A `for ... in` statement",$propdoc:{init:"[AST_Node] the `for/in` initialization code",name:"[AST_SymbolRef?] the loop variable, only if `init` is AST_Var",object:"[AST_Node] the object that we're looping through"},_walk:function(visitor){return visitor._visit(this,function(){this.init._walk(visitor),this.object._walk(visitor),this.body._walk(visitor)})}},AST_StatementWithBody),AST_With=DEFNODE("With","expression",{$documentation:"A `with` statement",$propdoc:{expression:"[AST_Node] the `with` expression"},_walk:function(visitor){return visitor._visit(this,function(){this.expression._walk(visitor),this.body._walk(visitor)})}},AST_StatementWithBody),AST_Scope=DEFNODE("Scope","directives variables functions uses_with uses_eval parent_scope enclosed cname",{$documentation:"Base class for all statements introducing a lexical scope",$propdoc:{directives:"[string*/S] an array of directives declared in this scope",variables:"[Object/S] a map of name -> SymbolDef for all variables/functions defined in this scope",functions:"[Object/S] like `variables`, but only lists function declarations",uses_with:"[boolean/S] tells whether this scope uses the `with` statement",uses_eval:"[boolean/S] tells whether this scope contains a direct call to the global `eval`",parent_scope:"[AST_Scope?/S] link to the parent scope",enclosed:"[SymbolDef*/S] a list of all symbol definitions that are accessed from this scope or any subscopes",cname:"[integer/S] current index for mangling variables (used internally by the mangler)"}},AST_Block),AST_Toplevel=DEFNODE("Toplevel","globals",{$documentation:"The toplevel scope",$propdoc:{globals:"[Object/S] a map of name -> SymbolDef for all undeclared names"},wrap_commonjs:function(name,export_all){var self=this,to_export=[];export_all&&(self.figure_out_scope(),self.walk(new TreeWalker(function(node){node instanceof AST_SymbolDeclaration&&node.definition().global&&(find_if(function(n){return n.name==node.name},to_export)||to_export.push(node))})));var wrapped_tl="(function(exports, global){ global['"+name+"'] = exports; '$ORIG'; '$EXPORTS'; }({}, (function(){return this}())))";return wrapped_tl=parse(wrapped_tl),wrapped_tl=wrapped_tl.transform(new TreeTransformer(function before(node){if(node instanceof AST_SimpleStatement){node=node.body;if(node instanceof AST_String)switch(node.getValue()){case"$ORIG":return MAP.splice(self.body);case"$EXPORTS":var body=[];return to_export.forEach(function(sym){body.push(new AST_SimpleStatement({body:new AST_Assign({left:new AST_Sub({expression:new AST_SymbolRef({name:"exports"}),property:new AST_String({value:sym.name})}),operator:"=",right:new AST_SymbolRef(sym)})}))}),MAP.splice(body)}}})),wrapped_tl}},AST_Scope),AST_Lambda=DEFNODE("Lambda","name argnames uses_arguments",{$documentation:"Base class for functions",$propdoc:{name:"[AST_SymbolDeclaration?] the name of this function",argnames:"[AST_SymbolFunarg*] array of function arguments",uses_arguments:"[boolean/S] tells whether this function accesses the arguments array"},_walk:function(visitor){return visitor._visit(this,function(){this.name&&this.name._walk(visitor),this.argnames.forEach(function(arg){arg._walk(visitor)}),walk_body(this,visitor)})}},AST_Scope),AST_Accessor=DEFNODE("Accessor",null,{$documentation:"A setter/getter function"},AST_Lambda),AST_Function=DEFNODE("Function",null,{$documentation:"A function expression"},AST_Lambda),AST_Defun=DEFNODE("Defun",null,{$documentation:"A function definition"},AST_Lambda),AST_Jump=DEFNODE("Jump",null,{$documentation:"Base class for “jumps” (for now that's `return`, `throw`, `break` and `continue`)"},AST_Statement),AST_Exit=DEFNODE("Exit","value",{$documentation:"Base class for “exits” (`return` and `throw`)",$propdoc:{value:"[AST_Node?] the value returned or thrown by this statement; could be null for AST_Return"},_walk:function(visitor){return visitor._visit(this,this.value&&function(){this.value._walk(visitor)})}},AST_Jump),AST_Return=DEFNODE("Return",null,{$documentation:"A `return` statement"},AST_Exit),AST_Throw=DEFNODE("Throw",null,{$documentation:"A `throw` statement"},AST_Exit),AST_LoopControl=DEFNODE("LoopControl","label",{$documentation:"Base class for loop control statements (`break` and `continue`)",$propdoc:{label:"[AST_LabelRef?] the label, or null if none"},_walk:function(visitor){return visitor._visit(this,this.label&&function(){this.label._walk(visitor)})}},AST_Jump),AST_Break=DEFNODE("Break",null,{$documentation:"A `break` statement"},AST_LoopControl),AST_Continue=DEFNODE("Continue",null,{$documentation:"A `continue` statement"},AST_LoopControl),AST_If=DEFNODE("If","condition alternative",{$documentation:"A `if` statement",$propdoc:{condition:"[AST_Node] the `if` condition",alternative:"[AST_Statement?] the `else` part, or null if not present"},_walk:function(visitor){return visitor._visit(this,function(){this.condition._walk(visitor),this.body._walk(visitor),this.alternative&&this.alternative._walk(visitor)})}},AST_StatementWithBody),AST_Switch=DEFNODE("Switch","expression",{$documentation:"A `switch` statement",$propdoc:{expression:"[AST_Node] the `switch` “discriminant”"},_walk:function(visitor){return visitor._visit(this,function(){this.expression._walk(visitor),walk_body(this,visitor)})}},AST_Block),AST_SwitchBranch=DEFNODE("SwitchBranch",null,{$documentation:"Base class for `switch` branches"},AST_Block),AST_Default=DEFNODE("Default",null,{$documentation:"A `default` switch branch"},AST_SwitchBranch),AST_Case=DEFNODE("Case","expression",{$documentation:"A `case` switch branch",$propdoc:{expression:"[AST_Node] the `case` expression"},_walk:function(visitor){return visitor._visit(this,function(){this.expression._walk(visitor),walk_body(this,visitor)})}},AST_SwitchBranch),AST_Try=DEFNODE("Try","bcatch bfinally",{$documentation:"A `try` statement",$propdoc:{bcatch:"[AST_Catch?] the catch block, or null if not present",bfinally:"[AST_Finally?] the finally block, or null if not present"},_walk:function(visitor){return visitor._visit(this,function(){walk_body(this,visitor),this.bcatch&&this.bcatch._walk(visitor),this.bfinally&&this.bfinally._walk(visitor)})}},AST_Block),AST_Catch=DEFNODE("Catch","argname",{$documentation:"A `catch` node; only makes sense as part of a `try` statement",$propdoc:{argname:"[AST_SymbolCatch] symbol for the exception"},_walk:function(visitor){return visitor._visit(this,function(){this.argname._walk(visitor),walk_body(this,visitor)})}},AST_Block),AST_Finally=DEFNODE("Finally",null,{$documentation:"A `finally` node; only makes sense as part of a `try` statement"},AST_Block),AST_Definitions=DEFNODE("Definitions","definitions",{$documentation:"Base class for `var` or `const` nodes (variable declarations/initializations)",$propdoc:{definitions:"[AST_VarDef*] array of variable definitions"},_walk:function(visitor){return visitor._visit(this,function(){this.definitions.forEach(function(def){def._walk(visitor)})})}},AST_Statement),AST_Var=DEFNODE("Var",null,{$documentation:"A `var` statement"},AST_Definitions),AST_Const=DEFNODE("Const",null,{$documentation:"A `const` statement"},AST_Definitions),AST_VarDef=DEFNODE("VarDef","name value",{$documentation:"A variable declaration; only appears in a AST_Definitions node",$propdoc:{name:"[AST_SymbolVar|AST_SymbolConst] name of the variable",value:"[AST_Node?] initializer, or null of there's no initializer"},_walk:function(visitor){return visitor._visit(this,function(){this.name._walk(visitor),this.value&&this.value._walk(visitor)})}}),AST_Call=DEFNODE("Call","expression args",{$documentation:"A function call expression",$propdoc:{expression:"[AST_Node] expression to invoke as function",args:"[AST_Node*] array of arguments"},_walk:function(visitor){return visitor._visit(this,function(){this.expression._walk(visitor),this.args.forEach(function(arg){arg._walk(visitor)})})}}),AST_New=DEFNODE("New",null,{$documentation:"An object instantiation.  Derives from a function call since it has exactly the same properties"},AST_Call),AST_Seq=DEFNODE("Seq","car cdr",{$documentation:"A sequence expression (two comma-separated expressions)",$propdoc:{car:"[AST_Node] first element in sequence",cdr:"[AST_Node] second element in sequence"},$cons:function(x,y){var seq=new AST_Seq(x);return seq.car=x,seq.cdr=y,seq},$from_array:function(array){if(array.length==0)return null;if(array.length==1)return array[0].clone();var list=null;for(var i=array.length;--i>=0;)list=AST_Seq.cons(array[i],list);var p=list;while(p){if(p.cdr&&!p.cdr.cdr){p.cdr=p.cdr.car;break}p=p.cdr}return list},to_array:function(){var p=this,a=[];while(p){a.push(p.car);if(!(!p.cdr||p.cdr instanceof AST_Seq)){a.push(p.cdr);break}p=p.cdr}return a},add:function(node){var p=this;while(p){if(!(p.cdr instanceof AST_Seq)){var cell=AST_Seq.cons(p.cdr,node);return p.cdr=cell}p=p.cdr}},_walk:function(visitor){return visitor._visit(this,function(){this.car._walk(visitor),this.cdr&&this.cdr._walk(visitor)})}}),AST_PropAccess=DEFNODE("PropAccess","expression property",{$documentation:'Base class for property access expressions, i.e. `a.foo` or `a["foo"]`',$propdoc:{expression:"[AST_Node] the “container” expression",property:"[AST_Node|string] the property to access.  For AST_Dot this is always a plain string, while for AST_Sub it's an arbitrary AST_Node"}}),AST_Dot=DEFNODE("Dot",null,{$documentation:"A dotted property access expression",_walk:function(visitor){return visitor._visit(this,function(){this.expression._walk(visitor)})}},AST_PropAccess),AST_Sub=DEFNODE("Sub",null,{$documentation:'Index-style property access, i.e. `a["foo"]`',_walk:function(visitor){return visitor._visit(this,function(){this.expression._walk(visitor),this.property._walk(visitor)})}},AST_PropAccess),AST_Unary=DEFNODE("Unary","operator expression",{$documentation:"Base class for unary expressions",$propdoc:{operator:"[string] the operator",expression:"[AST_Node] expression that this unary operator applies to"},_walk:function(visitor){return visitor._visit(this,function(){this.expression._walk(visitor)})}}),AST_UnaryPrefix=DEFNODE("UnaryPrefix",null,{$documentation:"Unary prefix expression, i.e. `typeof i` or `++i`"},AST_Unary),AST_UnaryPostfix=DEFNODE("UnaryPostfix",null,{$documentation:"Unary postfix expression, i.e. `i++`"},AST_Unary),AST_Binary=DEFNODE("Binary","left operator right",{$documentation:"Binary expression, i.e. `a + b`",$propdoc:{left:"[AST_Node] left-hand side expression",operator:"[string] the operator",right:"[AST_Node] right-hand side expression"},_walk:function(visitor){return visitor._visit(this,function(){this.left._walk(visitor),this.right._walk(visitor)})}}),AST_Conditional=DEFNODE("Conditional","condition consequent alternative",{$documentation:"Conditional expression using the ternary operator, i.e. `a ? b : c`",$propdoc:{condition:"[AST_Node]",consequent:"[AST_Node]",alternative:"[AST_Node]"},_walk:function(visitor){return visitor._visit(this,function(){this.condition._walk(visitor),this.consequent._walk(visitor),this.alternative._walk(visitor)})}}),AST_Assign=DEFNODE("Assign",null,{$documentation:"An assignment expression — `a = b + 5`"},AST_Binary),AST_Array=DEFNODE("Array","elements",{$documentation:"An array literal",$propdoc:{elements:"[AST_Node*] array of elements"},_walk:function(visitor){return visitor._visit(this,function(){this.elements.forEach(function(el){el._walk(visitor)})})}}),AST_Object=DEFNODE("Object","properties",{$documentation:"An object literal",$propdoc:{properties:"[AST_ObjectProperty*] array of properties"},_walk:function(visitor){return visitor._visit(this,function(){this.properties.forEach(function(prop){prop._walk(visitor)})})}}),AST_ObjectProperty=DEFNODE("ObjectProperty","key value",{$documentation:"Base class for literal object properties",$propdoc:{key:"[string] the property name; it's always a plain string in our AST, no matter if it was a string, number or identifier in original code",value:"[AST_Node] property value.  For setters and getters this is an AST_Function."},_walk:function(visitor){return visitor._visit(this,function(){this.value._walk(visitor)})}}),AST_ObjectKeyVal=DEFNODE("ObjectKeyVal",null,{$documentation:"A key: value object property"},AST_ObjectProperty),AST_ObjectSetter=DEFNODE("ObjectSetter",null,{$documentation:"An object setter property"},AST_ObjectProperty),AST_ObjectGetter=DEFNODE("ObjectGetter",null,{$documentation:"An object getter property"},AST_ObjectProperty),AST_Symbol=DEFNODE("Symbol","scope name thedef",{$propdoc:{name:"[string] name of this symbol",scope:"[AST_Scope/S] the current scope (not necessarily the definition scope)",thedef:"[SymbolDef/S] the definition of this symbol"},$documentation:"Base class for all symbols"}),AST_SymbolAccessor=DEFNODE("SymbolAccessor",null,{$documentation:"The name of a property accessor (setter/getter function)"},AST_Symbol),AST_SymbolDeclaration=DEFNODE("SymbolDeclaration","init",{$documentation:"A declaration symbol (symbol in var/const, function name or argument, symbol in catch)",$propdoc:{init:"[AST_Node*/S] array of initializers for this declaration."}},AST_Symbol),AST_SymbolVar=DEFNODE("SymbolVar",null,{$documentation:"Symbol defining a variable"},AST_SymbolDeclaration),AST_SymbolConst=DEFNODE("SymbolConst",null,{$documentation:"A constant declaration"},AST_SymbolDeclaration),AST_SymbolFunarg=DEFNODE("SymbolFunarg",null,{$documentation:"Symbol naming a function argument"},AST_SymbolVar),AST_SymbolDefun=DEFNODE("SymbolDefun",null,{$documentation:"Symbol defining a function"},AST_SymbolDeclaration),AST_SymbolLambda=DEFNODE("SymbolLambda",null,{$documentation:"Symbol naming a function expression"},AST_SymbolDeclaration),AST_SymbolCatch=DEFNODE("SymbolCatch",null,{$documentation:"Symbol naming the exception in catch"},AST_SymbolDeclaration),AST_Label=DEFNODE("Label","references",{$documentation:"Symbol naming a label (declaration)",$propdoc:{references:"[AST_LabelRef*] a list of nodes referring to this label"}},AST_Symbol),AST_SymbolRef=DEFNODE("SymbolRef",null,{$documentation:"Reference to some symbol (not definition/declaration)"},AST_Symbol),AST_LabelRef=DEFNODE("LabelRef",null,{$documentation:"Reference to a label symbol"},AST_Symbol),AST_This=DEFNODE("This",null,{$documentation:"The `this` symbol"},AST_Symbol),AST_Constant=DEFNODE("Constant",null,{$documentation:"Base class for all constants",getValue:function(){return this.value}}),AST_String=DEFNODE("String","value",{$documentation:"A string literal",$propdoc:{value:"[string] the contents of this string"}},AST_Constant),AST_Number=DEFNODE("Number","value",{$documentation:"A number literal",$propdoc:{value:"[number] the numeric value"}},AST_Constant),AST_RegExp=DEFNODE("RegExp","value",{$documentation:"A regexp literal",$propdoc:{value:"[RegExp] the actual regexp"}},AST_Constant),AST_Atom=DEFNODE("Atom",null,{$documentation:"Base class for atoms"},AST_Constant),AST_Null=DEFNODE("Null",null,{$documentation:"The `null` atom",value:null},AST_Atom),AST_NaN=DEFNODE("NaN",null,{$documentation:"The impossible value",value:0/0},AST_Atom),AST_Undefined=DEFNODE("Undefined",null,{$documentation:"The `undefined` value",value:function(){}()},AST_Atom),AST_Hole=DEFNODE("Hole",null,{$documentation:"A hole in an array",value:function(){}()},AST_Atom),AST_Infinity=DEFNODE("Infinity",null,{$documentation:"The `Infinity` value",value:1/0},AST_Atom),AST_Boolean=DEFNODE("Boolean",null,{$documentation:"Base class for booleans"},AST_Atom),AST_False=DEFNODE("False",null,{$documentation:"The `false` atom",value:!1},AST_Boolean),AST_True=DEFNODE("True",null,{$documentation:"The `true` atom",value:!0},AST_Boolean);TreeWalker.prototype={_visit:function(node,descend){this.stack.push(node);var ret=this.visit(node,descend?function(){descend.call(node)}:noop);return!ret&&descend&&descend.call(node),this.stack.pop(),ret},parent:function(n){return this.stack[this.stack.length-2-(n||0)]},push:function(node){this.stack.push(node)},pop:function(){return this.stack.pop()},self:function(){return this.stack[this.stack.length-1]},find_parent:function(type){var stack=this.stack;for(var i=stack.length;--i>=0;){var x=stack[i];if(x instanceof type)return x}},in_boolean_context:function(){var stack=this.stack,i=stack.length,self=stack[--i];while(i>0){var p=stack[--i];if(p instanceof AST_If&&p.condition===self||p instanceof AST_Conditional&&p.condition===self||p instanceof AST_DWLoop&&p.condition===self||p instanceof AST_For&&p.condition===self||p instanceof AST_UnaryPrefix&&p.operator=="!"&&p.expression===self)return!0;if(!(p instanceof AST_Binary)||p.operator!="&&"&&p.operator!="||")return!1;self=p}},loopcontrol_target:function(label){var stack=this.stack;if(label)for(var i=stack.length;--i>=0;){var x=stack[i];if(x instanceof AST_LabeledStatement&&x.label.name==label.name)return x.body}else for(var i=stack.length;--i>=0;){var x=stack[i];if(x instanceof AST_Switch||x instanceof AST_For||x instanceof AST_ForIn||x instanceof AST_DWLoop)return x}}};var KEYWORDS="break case catch const continue debugger default delete do else finally for function if in instanceof new return switch throw try typeof var void while with",KEYWORDS_ATOM="false null true",RESERVED_WORDS="abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized this throws transient volatile "+KEYWORDS_ATOM+" "+KEYWORDS,KEYWORDS_BEFORE_EXPRESSION="return new delete throw else case";KEYWORDS=makePredicate(KEYWORDS),RESERVED_WORDS=makePredicate(RESERVED_WORDS),KEYWORDS_BEFORE_EXPRESSION=makePredicate(KEYWORDS_BEFORE_EXPRESSION),KEYWORDS_ATOM=makePredicate(KEYWORDS_ATOM);var OPERATOR_CHARS=makePredicate(characters("+-*&%=<>!?|~^")),RE_HEX_NUMBER=/^0x[0-9a-f]+$/i,RE_OCT_NUMBER=/^0[0-7]+$/,RE_DEC_NUMBER=/^\d*\.?\d*(?:e[+-]?\d*(?:\d\.?|\.?\d)\d*)?$/i,OPERATORS=makePredicate(["in","instanceof","typeof","new","void","delete","++","--","+","-","!","~","&","|","^","*","/","%",">>","<<",">>>","<",">","<=",">=","==","===","!=","!==","?","=","+=","-=","/=","*=","%=",">>=","<<=",">>>=","|=","^=","&=","&&","||"]),WHITESPACE_CHARS=makePredicate(characters("  \n\r	\f​᠎             　")),PUNC_BEFORE_EXPRESSION=makePredicate(characters("[{(,.;:")),PUNC_CHARS=makePredicate(characters("[]{}(),;:")),REGEXP_MODIFIERS=makePredicate(characters("gmsiy")),UNICODE={letter:new RegExp("[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0523\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971\\u0972\\u097B-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3D\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8B\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10D0-\\u10FA\\u10FC\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u1676\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19A9\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u2094\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2C6F\\u2C71-\\u2C7D\\u2C80-\\u2CE4\\u2D00-\\u2D25\\u2D30-\\u2D65\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31B7\\u31F0-\\u31FF\\u3400\\u4DB5\\u4E00\\u9FC3\\uA000-\\uA48C\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA65F\\uA662-\\uA66E\\uA67F-\\uA697\\uA717-\\uA71F\\uA722-\\uA788\\uA78B\\uA78C\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA90A-\\uA925\\uA930-\\uA946\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAC00\\uD7A3\\uF900-\\uFA2D\\uFA30-\\uFA6A\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]"),non_spacing_mark:new RegExp("[\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065E\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0900-\\u0902\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0955\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F90-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1DC0-\\u1DE6\\u1DFD-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F\\uA67C\\uA67D\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE26]"),space_combining_mark:new RegExp("[\\u0903\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A19-\\u1A1B\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF2\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BD-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC]"),connector_punctuation:new RegExp("[\\u005F\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F]")};JS_Parse_Error.prototype.toString=function(){return this.message+" (line: "+this.line+", col: "+this.col+", pos: "+this.pos+")"+"\n\n"+this.stack};var EX_EOF={},UNARY_PREFIX=makePredicate(["typeof","void","delete","--","++","!","~","-","+"]),UNARY_POSTFIX=makePredicate(["--","++"]),ASSIGNMENT=makePredicate(["=","+=","-=","/=","*=","%=",">>=","<<=",">>>=","|=","^=","&="]),PRECEDENCE=function(a,ret){for(var i=0,n=1;i<a.length;++i,++n){var b=a[i];for(var j=0;j<b.length;++j)ret[b[j]]=n}return ret}([["||"],["&&"],["|"],["^"],["&"],["==","===","!=","!=="],["<",">","<=",">=","in","instanceof"],[">>","<<",">>>"],["+","-"],["*","/","%"]],{}),STATEMENTS_WITH_LABELS=array_to_hash(["for","do","while","switch"]),ATOMIC_START_TOKEN=array_to_hash(["atom","num","string","regexp","name"]);TreeTransformer.prototype=new TreeWalker,function(undefined){function _(node,descend){node.DEFMETHOD("transform",function(tw,in_list){var x,y;return tw.push(this),tw.before&&(x=tw.before(this,descend,in_list)),x===undefined&&(tw.after?(tw.stack[tw.stack.length-1]=x=this.clone(),descend(x,tw),y=tw.after(x,in_list),y!==undefined&&(x=y)):(x=this,descend(x,tw))),tw.pop(),x})}function do_list(list,tw){return MAP(list,function(node){return node.transform(tw,!0)})}_(AST_Node,noop),_(AST_LabeledStatement,function(self,tw){self.label=self.label.transform(tw),self.body=self.body.transform(tw)}),_(AST_SimpleStatement,function(self,tw){self.body=self.body.transform(tw)}),_(AST_Block,function(self,tw){self.body=do_list(self.body,tw)}),_(AST_DWLoop,function(self,tw){self.condition=self.condition.transform(tw),self.body=self.body.transform(tw)}),_(AST_For,function(self,tw){self.init&&(self.init=self.init.transform(tw)),self.condition&&(self.condition=self.condition.transform(tw)),self.step&&(self.step=self.step.transform(tw)),self.body=self.body.transform(tw)}),_(AST_ForIn,function(self,tw){self.init=self.init.transform(tw),self.object=self.object.transform(tw),self.body=self.body.transform(tw)}),_(AST_With,function(self,tw){self.expression=self.expression.transform(tw),self.body=self.body.transform(tw)}),_(AST_Exit,function(self,tw){self.value&&(self.value=self.value.transform(tw))}),_(AST_LoopControl,function(self,tw){self.label&&(self.label=self.label.transform(tw))}),_(AST_If,function(self,tw){self.condition=self.condition.transform(tw),self.body=self.body.transform(tw),self.alternative&&(self.alternative=self.alternative.transform(tw))}),_(AST_Switch,function(self,tw){self.expression=self.expression.transform(tw),self.body=do_list(self.body,tw)}),_(AST_Case,function(self,tw){self.expression=self.expression.transform(tw),self.body=do_list(self.body,tw)}),_(AST_Try,function(self,tw){self.body=do_list(self.body,tw),self.bcatch&&(self.bcatch=self.bcatch.transform(tw)),self.bfinally&&(self.bfinally=self.bfinally.transform(tw))}),_(AST_Catch,function(self,tw){self.argname=self.argname.transform(tw),self.body=do_list(self.body,tw)}),_(AST_Definitions,function(self,tw){self.definitions=do_list(self.definitions,tw)}),_(AST_VarDef,function(self,tw){self.value&&(self.value=self.value.transform(tw))}),_(AST_Lambda,function(self,tw){self.name&&(self.name=self.name.transform(tw)),self.argnames=do_list(self.argnames,tw),self.body=do_list(self.body,tw)}),_(AST_Call,function(self,tw){self.expression=self.expression.transform(tw),self.args=do_list(self.args,tw)}),_(AST_Seq,function(self,tw){self.car=self.car.transform(tw),self.cdr=self.cdr.transform(tw)}),_(AST_Dot,function(self,tw){self.expression=self.expression.transform(tw)}),_(AST_Sub,function(self,tw){self.expression=self.expression.transform(tw),self.property=self.property.transform(tw)}),_(AST_Unary,function(self,tw){self.expression=self.expression.transform(tw)}),_(AST_Binary,function(self,tw){self.left=self.left.transform(tw),self.right=self.right.transform(tw)}),_(AST_Conditional,function(self,tw){self.condition=self.condition.transform(tw),self.consequent=self.consequent.transform(tw),self.alternative=self.alternative.transform(tw)}),_(AST_Array,function(self,tw){self.elements=do_list(self.elements,tw)}),_(AST_Object,function(self,tw){self.properties=do_list(self.properties,tw)}),_(AST_ObjectProperty,function(self,tw){self.value=self.value.transform(tw)})}(),SymbolDef.prototype={unmangleable:function(options){return this.global||this.undeclared||(!options||!options.eval)&&(this.scope.uses_eval||this.scope.uses_with)},mangle:function(options){!this.mangled_name&&!this.unmangleable(options)&&(this.mangled_name=this.scope.next_mangled(options))}},AST_Toplevel.DEFMETHOD("figure_out_scope",function(){var self=this,scope=self.parent_scope=null,labels=new Dictionary,nesting=0,tw=new TreeWalker(function(node,descend){if(node instanceof AST_Scope){node.init_scope_vars(nesting);var save_scope=node.parent_scope=scope,save_labels=labels;return++nesting,scope=node,labels=new Dictionary,descend(),labels=save_labels,scope=save_scope,--nesting,!0}if(node instanceof AST_Directive)return node.scope=scope,push_uniq(scope.directives,node.value),!0;if(node instanceof AST_With){for(var s=scope;s;s=s.parent_scope)s.uses_with=!0;return}if(node instanceof AST_LabeledStatement){var l=node.label;if(labels.has(l.name))throw new Error(string_template("Label {name} defined twice",l));return labels.set(l.name,l),descend(),labels.del(l.name),!0}node instanceof AST_Symbol&&(node.scope=scope),node instanceof AST_Label&&(node.thedef=node,node.init_scope_vars());if(node instanceof AST_SymbolLambda)(node.scope=scope.parent_scope).def_function(node);else if(node instanceof AST_SymbolDefun)(node.scope=scope.parent_scope).def_function(node);else if(node instanceof AST_SymbolVar||node instanceof AST_SymbolConst){var def=scope.def_variable(node);def.constant=node instanceof AST_SymbolConst,def.init=tw.parent().value}else node instanceof AST_SymbolCatch&&scope.def_variable(node);if(node instanceof AST_LabelRef){var sym=labels.get(node.name);if(!sym)throw new Error(string_template("Undefined label {name} [{line},{col}]",{name:node.name,line:node.start.line,col:node.start.col}));node.thedef=sym}});self.walk(tw);var func=null,globals=self.globals=new Dictionary,tw=new TreeWalker(function(node,descend){if(node instanceof AST_Lambda){var prev_func=func;return func=node,descend(),func=prev_func,!0}if(node instanceof AST_LabelRef)return node.reference(),!0;if(node instanceof AST_SymbolRef){var name=node.name,sym=node.scope.find_variable(name);if(!sym){var g;globals.has(name)?g=globals.get(name):(g=new SymbolDef(self,globals.size(),node),g.undeclared=!0,globals.set(name,g)),node.thedef=g;if(name=="eval"&&tw.parent()instanceof AST_Call)for(var s=node.scope;s&&!s.uses_eval;s=s.parent_scope)s.uses_eval=!0;name=="arguments"&&(func.uses_arguments=!0)}else node.thedef=sym;return node.reference(),!0}});self.walk(tw)}),AST_Scope.DEFMETHOD("init_scope_vars",function(nesting){this.directives=[],this.variables=new Dictionary,this.functions=new Dictionary,this.uses_with=!1,this.uses_eval=!1,this.parent_scope=null,this.enclosed=[],this.cname=-1,this.nesting=nesting}),AST_Scope.DEFMETHOD("strict",function(){return this.has_directive("use strict")}),AST_Lambda.DEFMETHOD("init_scope_vars",function(){AST_Scope.prototype.init_scope_vars.apply(this,arguments),this.uses_arguments=!1}),AST_SymbolRef.DEFMETHOD("reference",function(){var def=this.definition();def.references.push(this);var s=this.scope;while(s){push_uniq(s.enclosed,def);if(s===def.scope)break;s=s.parent_scope}this.frame=this.scope.nesting-def.scope.nesting}),AST_Label.DEFMETHOD("init_scope_vars",function(){this.references=[]}),AST_LabelRef.DEFMETHOD("reference",function(){this.thedef.references.push(this)}),AST_Scope.DEFMETHOD("find_variable",function(name){return name instanceof AST_Symbol&&(name=name.name),this.variables.get(name)||this.parent_scope&&this.parent_scope.find_variable(name)}),AST_Scope.DEFMETHOD("has_directive",function(value){return this.parent_scope&&this.parent_scope.has_directive(value)||(this.directives.indexOf(value)>=0?this:null)}),AST_Scope.DEFMETHOD("def_function",function(symbol){this.functions.set(symbol.name,this.def_variable(symbol))}),AST_Scope.DEFMETHOD("def_variable",function(symbol){var def;return this.variables.has(symbol.name)?(def=this.variables.get(symbol.name),def.orig.push(symbol)):(def=new SymbolDef(this,this.variables.size(),symbol),this.variables.set(symbol.name,def),def.global=!this.parent_scope),symbol.thedef=def}),AST_Scope.DEFMETHOD("next_mangled",function(options){var ext=this.enclosed,n=ext.length;e:for(;;){var m=base54(++this.cname);if(!is_identifier(m))continue;for(var i=n;--i>=0;){var sym=ext[i],name=sym.mangled_name||sym.unmangleable(options)&&sym.name;if(m==name)continue e}return m}}),AST_Scope.DEFMETHOD("references",function(sym){return sym instanceof AST_Symbol&&(sym=sym.definition()),this.enclosed.indexOf(sym)<0?null:sym}),AST_Symbol.DEFMETHOD("unmangleable",function(options){return this.definition().unmangleable(options)}),AST_SymbolAccessor.DEFMETHOD("unmangleable",function(){return!0}),AST_Label.DEFMETHOD("unmangleable",function(){return!1}),AST_Symbol.DEFMETHOD("unreferenced",function(){return this.definition().references.length==0&&!this.scope.uses_eval&&!this.scope.uses_with}),AST_Symbol.DEFMETHOD("undeclared",function(){return this.definition().undeclared}),AST_LabelRef.DEFMETHOD("undeclared",function(){return!1}),AST_Label.DEFMETHOD("undeclared",function(){return!1}),AST_Symbol.DEFMETHOD("definition",function(){return this.thedef}),AST_Symbol.DEFMETHOD("global",function(){return this.definition().global}),AST_Toplevel.DEFMETHOD("_default_mangler_options",function(options){return defaults(options,{except:[],eval:!1,sort:!1})}),AST_Toplevel.DEFMETHOD("mangle_names",function(options){options=this._default_mangler_options(options);var lname=-1,to_mangle=[],tw=new TreeWalker(function(node,descend){if(node instanceof AST_LabeledStatement){var save_nesting=lname;return descend(),lname=save_nesting,!0}if(node instanceof AST_Scope){var p=tw.parent(),a=[];node.variables.each(function(symbol){options.except.indexOf(symbol.name)<0&&a.push(symbol)}),options.sort&&a.sort(function(a,b){return b.references.length-a.references.length}),to_mangle.push.apply(to_mangle,a);return}if(node instanceof AST_Label){var name;do name=base54(++lname);while(!is_identifier(name));return node.mangled_name=name,!0}});this.walk(tw),to_mangle.forEach(function(def){def.mangle(options)})}),AST_Toplevel.DEFMETHOD("compute_char_frequency",function(options){options=this._default_mangler_options(options);var tw=new TreeWalker(function(node){node instanceof AST_Constant?base54.consider(node.print_to_string()):node instanceof AST_Return?base54.consider("return"):node instanceof AST_Throw?base54.consider("throw"):node instanceof AST_Continue?base54.consider("continue"):node instanceof AST_Break?base54.consider("break"):node instanceof AST_Debugger?base54.consider("debugger"):node instanceof AST_Directive?base54.consider(node.value):node instanceof AST_While?base54.consider("while"):node instanceof AST_Do?base54.consider("do while"):node instanceof AST_If?(base54.consider("if"),node.alternative&&base54.consider("else")):node instanceof AST_Var?base54.consider("var"):node instanceof AST_Const?base54.consider("const"):node instanceof AST_Lambda?base54.consider("function"):node instanceof AST_For?base54.consider("for"):node instanceof AST_ForIn?base54.consider("for in"):node instanceof AST_Switch?base54.consider("switch"):node instanceof AST_Case?base54.consider("case"):node instanceof AST_Default?base54.consider("default"):node instanceof AST_With?base54.consider("with"):node instanceof AST_ObjectSetter?base54.consider("set"+node.key):node instanceof AST_ObjectGetter?base54.consider("get"+node.key):node instanceof AST_ObjectKeyVal?base54.consider(node.key):node instanceof AST_New?base54.consider("new"):node instanceof AST_This?base54.consider("this"):node instanceof AST_Try?base54.consider("try"):node instanceof AST_Catch?base54.consider("catch"):node instanceof AST_Finally?base54.consider("finally"):node instanceof AST_Symbol&&node.unmangleable(options)?base54.consider(node.name):node instanceof AST_Unary||node instanceof AST_Binary?base54.consider(node.operator):node instanceof AST_Dot&&base54.consider(node.property)});this.walk(tw),base54.sort()});var base54=function(){function reset(){frequency=Object.create(null),chars=string.split("").map(function(ch){return ch.charCodeAt(0)}),chars.forEach(function(ch){frequency[ch]=0})}function base54(num){var ret="",base=54;do ret+=String.fromCharCode(chars[num%base]),num=Math.floor(num/base),base=64;while(num>0);return ret}var string="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_0123456789",chars,frequency;return base54.consider=function(str){for(var i=str.length;--i>=0;){var code=str.charCodeAt(i);code in frequency&&++frequency[code]}},base54.sort=function(){chars=mergeSort(chars,function(a,b){return is_digit(a)&&!is_digit(b)?1:is_digit(b)&&!is_digit(a)?-1:frequency[b]-frequency[a]})},base54.reset=reset,reset(),base54.get=function(){return chars},base54.freq=function(){return frequency},base54}();AST_Toplevel.DEFMETHOD("scope_warnings",function(options){options=defaults(options,{undeclared:!1,unreferenced:!0,assign_to_global:!0,func_arguments:!0,nested_defuns:!0,eval:!0});var tw=new TreeWalker(function(node){options.undeclared&&node instanceof AST_SymbolRef&&node.undeclared()&&AST_Node.warn("Undeclared symbol: {name} [{file}:{line},{col}]",{name:node.name,file:node.start.file,line:node.start.line,col:node.start.col});if(options.assign_to_global){var sym=null;node instanceof AST_Assign&&node.left instanceof AST_SymbolRef?sym=node.left:node instanceof AST_ForIn&&node.init instanceof AST_SymbolRef&&(sym=node.init),sym&&(sym.undeclared()||sym.global()&&sym.scope!==sym.definition().scope)&&AST_Node.warn("{msg}: {name} [{file}:{line},{col}]",{msg:sym.undeclared()?"Accidental global?":"Assignment to global",name:sym.name,file:sym.start.file,line:sym.start.line,col:sym.start.col})}options.eval&&node instanceof AST_SymbolRef&&node.undeclared()&&node.name=="eval"&&AST_Node.warn("Eval is used [{file}:{line},{col}]",node.start),options.unreferenced&&(node instanceof AST_SymbolDeclaration||node instanceof AST_Label)&&node.unreferenced()&&AST_Node.warn("{type} {name} is declared but not referenced [{file}:{line},{col}]",{type:node instanceof AST_Label?"Label":"Symbol",name:node.name,file:node.start.file,line:node.start.line,col:node.start.col}),options.func_arguments&&node instanceof AST_Lambda&&node.uses_arguments&&AST_Node.warn("arguments used in function {name} [{file}:{line},{col}]",{name:node.name?node.name.name:"anonymous",file:node.start.file,line:node.start.line,col:node.start.col}),options.nested_defuns&&node instanceof AST_Defun&&!(tw.parent()instanceof AST_Scope)&&AST_Node.warn('Function {name} declared in nested statement "{type}" [{file}:{line},{col}]',{name:node.name.name,type:tw.parent().TYPE,file:node.start.file,line:node.start.line,col:node.start.col})});this.walk(tw)}),function(){function DEFPRINT(nodetype,generator){nodetype.DEFMETHOD("_codegen",generator)}function PARENS(nodetype,func){nodetype.DEFMETHOD("needs_parens",func)}function assign_and_conditional_paren_rules(output){var p=output.parent();if(p instanceof AST_Unary)return!0;if(p instanceof AST_Binary&&!(p instanceof AST_Assign))return!0;if(p instanceof AST_Call&&p.expression===this)return!0;if(p instanceof AST_Conditional&&p.condition===this)return!0;if(p instanceof AST_PropAccess&&p.expression===this)return!0}function display_body(body,is_toplevel,output){var last=body.length-1;body.forEach(function(stmt,i){if(!(stmt instanceof AST_EmptyStatement)){output.indent(),stmt.print(output);if(i!=last||!is_toplevel)output.newline(),is_toplevel&&output.newline()}})}function print_bracketed(body,output){body.length>0?output.with_block(function(){display_body(body,!1,output)}):output.print("{}")}function make_then(self,output){if(output.option("bracketize")){make_block(self.body,output);return}if(!self.body)return output.force_semicolon();if(self.body instanceof AST_Do&&output.option("ie_proof")){make_block(self.body,output);return}var b=self.body;for(;;)if(b instanceof AST_If){if(!b.alternative){make_block(self.body,output);return}b=b.alternative}else{if(!(b instanceof AST_StatementWithBody))break;b=b.body}force_statement(self.body,output)}function parenthesize_for_noin(node,output,noin){if(!noin)node.print(output);else try{node.walk(new TreeWalker(function(node){if(node instanceof AST_Binary&&node.operator=="in")throw output})),node.print(output)}catch(ex){if(ex!==output)throw ex;node.print(output,!0)}}function force_statement(stat,output){output.option("bracketize")?!stat||stat instanceof AST_EmptyStatement?output.print("{}"):stat instanceof AST_BlockStatement?stat.print(output):output.with_block(function(){output.indent(),stat.print(output),output.newline()}):!stat||stat instanceof AST_EmptyStatement?output.force_semicolon():stat.print(output)}function first_in_statement(output){var a=output.stack(),i=a.length,node=a[--i],p=a[--i];while(i>0){if(p instanceof AST_Statement&&p.body===node)return!0;if(!(p instanceof AST_Seq&&p.car===node||p instanceof AST_Call&&p.expression===node||p instanceof AST_Dot&&p.expression===node||p instanceof AST_Sub&&p.expression===node||p instanceof AST_Conditional&&p.condition===node||p instanceof AST_Binary&&p.left===node||p instanceof AST_UnaryPostfix&&p.expression===node))return!1;node=p,p=a[--i]}}function no_constructor_parens(self,output){return self.args.length==0&&!output.option("beautify")}function best_of(a){var best=a[0],len=best.length;for(var i=1;i<a.length;++i)a[i].length<len&&(best=a[i],len=best.length);return best}function make_num(num){var str=num.toString(10),a=[str.replace(/^0\./,".").replace("e+","e")],m;return Math.floor(num)===num?(num>=0?a.push("0x"+num.toString(16).toLowerCase(),"0"+num.toString(8)):a.push("-0x"+(-num).toString(16).toLowerCase(),"-0"+(-num).toString(8)),(m=/^(.*?)(0+)$/.exec(num))&&a.push(m[1]+"e"+m[2].length)):(m=/^0?\.(0+)(.*)$/.exec(num))&&a.push(m[2]+"e-"+(m[1].length+m[2].length),str.substr(str.indexOf("."))),best_of(a)}function make_block(stmt,output){if(stmt instanceof AST_BlockStatement){stmt.print(output);return}output.with_block(function(){output.indent(),stmt.print(output),output.newline()})}function DEFMAP(nodetype,generator){nodetype.DEFMETHOD("add_source_map",function(stream){generator(this,stream)})}function basic_sourcemap_gen(self,output){output.add_mapping(self.start)}AST_Node.DEFMETHOD("print",function(stream,force_parens){var self=this,generator=self._codegen;stream.push_node(self),force_parens||self.needs_parens(stream)?stream.with_parens(function(){self.add_comments(stream),self.add_source_map(stream),generator(self,stream)}):(self.add_comments(stream),self.add_source_map(stream),generator(self,stream)),stream.pop_node()}),AST_Node.DEFMETHOD("print_to_string",function(options){var s=OutputStream(options);return this.print(s),s.get()}),AST_Node.DEFMETHOD("add_comments",function(output){var c=output.option("comments"),self=this;if(c){var start=self.start;if(start&&!start._comments_dumped){start._comments_dumped=!0;var comments=start.comments_before;self instanceof AST_Exit&&self.value&&self.value.start.comments_before.length>0&&(comments=(comments||[]).concat(self.value.start.comments_before),self.value.start.comments_before=[]),c.test?comments=comments.filter(function(comment){return c.test(comment.value)}):typeof c=="function"&&(comments=comments.filter(function(comment){return c(self,comment)})),comments.forEach(function(c){c.type=="comment1"?(output.print("//"+c.value+"\n"),output.indent()):c.type=="comment2"&&(output.print("/*"+c.value+"*/"),start.nlb?(output.print("\n"),output.indent()):output.space())})}}}),PARENS(AST_Node,function(){return!1}),PARENS(AST_Function,function(output){return first_in_statement(output)}),PARENS(AST_Object,function(output){return first_in_statement(output)}),PARENS(AST_Unary,function(output){var p=output.parent();return p instanceof AST_PropAccess&&p.expression===this}),PARENS(AST_Seq,function(output){var p=output.parent();return p instanceof AST_Call||p instanceof AST_Unary||p instanceof AST_Binary||p instanceof AST_VarDef||p instanceof AST_Dot||p instanceof AST_Array||p instanceof AST_ObjectProperty||p instanceof AST_Conditional}),PARENS(AST_Binary,function(output){var p=output.parent();if(p instanceof AST_Call&&p.expression===this)return!0;if(p instanceof AST_Unary)return!0;if(p instanceof AST_PropAccess&&p.expression===this)return!0;if(p instanceof AST_Binary){var po=p.operator,pp=PRECEDENCE[po],so=this.operator,sp=PRECEDENCE[so];if(pp>sp||pp==sp&&this===p.right&&(so!=po||so!="*"&&so!="&&"&&so!="||"))return!0}}),PARENS(AST_PropAccess,function(output){var p=output.parent();if(p instanceof AST_New&&p.expression===this)try{this.walk(new TreeWalker(function(node){if(node instanceof AST_Call)throw p}))}catch(ex){if(ex!==p)throw ex;return!0}}),PARENS(AST_Call,function(output){var p=output.parent();return p instanceof AST_New&&p.expression===this}),PARENS(AST_New,function(output){var p=output.parent();if(no_constructor_parens(this,output)&&(p instanceof AST_PropAccess||p instanceof AST_Call&&p.expression===this))return!0}),PARENS(AST_Number,function(output){var p=output.parent();if(this.getValue()<0&&p instanceof AST_PropAccess&&p.expression===this)return!0}),PARENS(AST_NaN,function(output){var p=output.parent();if(p instanceof AST_PropAccess&&p.expression===this)return!0}),PARENS(AST_Assign,assign_and_conditional_paren_rules),PARENS(AST_Conditional,assign_and_conditional_paren_rules),DEFPRINT(AST_Directive,function(self,output){output.print_string(self.value),output.semicolon()}),DEFPRINT(AST_Debugger,function(self,output){output.print("debugger"),output.semicolon()}),AST_StatementWithBody.DEFMETHOD("_do_print_body",function(output){force_statement(this.body,output)}),DEFPRINT(AST_Statement,function(self,output){self.body.print(output),output.semicolon()}),DEFPRINT(AST_Toplevel,function(self,output){display_body(self.body,!0,output),output.print("")}),DEFPRINT(AST_LabeledStatement,function(self,output){self.label.print(output),output.colon(),self.body.print(output)}),DEFPRINT(AST_SimpleStatement,function(self,output){self.body.print(output),output.semicolon()}),DEFPRINT(AST_BlockStatement,function(self,output){print_bracketed(self.body,output)}),DEFPRINT(AST_EmptyStatement,function(self,output){output.semicolon()}),DEFPRINT(AST_Do,function(self,output){output.print("do"),output.space(),self._do_print_body(output),output.space(),output.print("while"),output.space(),output.with_parens(function(){self.condition.print(output)}),output.semicolon()}),DEFPRINT(AST_While,function(self,output){output.print("while"),output.space(),output.with_parens(function(){self.condition.print(output)}),output.space(),self._do_print_body(output)}),DEFPRINT(AST_For,function(self,output){output.print("for"),output.space(),output.with_parens(function(){self.init?(self.init instanceof AST_Definitions?self.init.print(output):parenthesize_for_noin(self.init,output,!0),output.print(";"),output.space()):output.print(";"),self.condition?(self.condition.print(output),output.print(";"),output.space()):output.print(";"),self.step&&self.step.print(output)}),output.space(),self._do_print_body(output)}),DEFPRINT(AST_ForIn,function(self,output){output.print("for"),output.space(),output.with_parens(function(){self.init.print(output),output.space(),output.print("in"),output.space(),self.object.print(output)}),output.space(),self._do_print_body(output)}),DEFPRINT(AST_With,function(self,output){output.print("with"),output.space(),output.with_parens(function(){self.expression.print(output)}),output.space(),self._do_print_body(output)}),AST_Lambda.DEFMETHOD("_do_print",function(output,nokeyword){var self=this;nokeyword||output.print("function"),self.name&&(output.space(),self.name.print(output)),output.with_parens(function(){self.argnames.forEach(function(arg,i){i&&output.comma(),arg.print(output)})}),output.space(),print_bracketed(self.body,output)}),DEFPRINT(AST_Lambda,function(self,output){self._do_print(output)}),AST_Exit.DEFMETHOD("_do_print",function(output,kind){output.print(kind),this.value&&(output.space(),this.value.print(output)),output.semicolon()}),DEFPRINT(AST_Return,function(self,output){self._do_print(output,"return")}),DEFPRINT(AST_Throw,function(self,output){self._do_print(output,"throw")}),AST_LoopControl.DEFMETHOD("_do_print",function(output,kind){output.print(kind),this.label&&(output.space(),this.label.print(output)),output.semicolon()}),DEFPRINT(AST_Break,function(self,output){self._do_print(output,"break")}),DEFPRINT(AST_Continue,function(self,output){self._do_print(output,"continue")}),DEFPRINT(AST_If,function(self,output){output.print("if"),output.space(),output.with_parens(function(){self.condition.print(output)}),output.space(),self.alternative?(make_then(self,output),output.space(),output.print("else"),output.space(),force_statement(self.alternative,output)):self._do_print_body(output)}),DEFPRINT(AST_Switch,function(self,output){output.print("switch"),output.space(),output.with_parens(function(){self.expression.print(output)}),output.space(),self.body.length>0?output.with_block(function(){self.body.forEach(function(stmt,i){i&&output.newline(),output.indent(!0),stmt.print(output)})}):output.print("{}")}),AST_SwitchBranch.DEFMETHOD("_do_print_body",function(output){this.body.length>0&&(output.newline(),this.body.forEach(function(stmt){output.indent(),stmt.print(output),output.newline()}))}),DEFPRINT(AST_Default,function(self,output){output.print("default:"),self._do_print_body(output)}),DEFPRINT(AST_Case,function(self,output){output.print("case"),output.space(),self.expression.print(output),output.print(":"),self._do_print_body(output)}),DEFPRINT(AST_Try,function(self,output){output.print("try"),output.space(),print_bracketed(self.body,output),self.bcatch&&(output.space(),self.bcatch.print(output)),self.bfinally&&(output.space(),self.bfinally.print(output))}),DEFPRINT(AST_Catch,function(self,output){output.print("catch"),output.space(),output.with_parens(function(){self.argname.print(output)}),output.space(),print_bracketed(self.body,output)}),DEFPRINT(AST_Finally,function(self,output){output.print("finally"),output.space(),print_bracketed(self.body,output)}),AST_Definitions.DEFMETHOD("_do_print",function(output,kind){output.print(kind),output.space(),this.definitions.forEach(function(def,i){i&&output.comma(),def.print(output)});var p=output.parent(),in_for=p instanceof AST_For||p instanceof AST_ForIn,avoid_semicolon=in_for&&p.init===this;avoid_semicolon||output.semicolon()}),DEFPRINT(AST_Var,function(self,output){self._do_print(output,"var")}),DEFPRINT(AST_Const,function(self,output){self._do_print(output,"const")}),DEFPRINT(AST_VarDef,function(self,output){self.name.print(output);if(self.value){output.space(),output.print("="),output.space();var p=output.parent(1),noin=p instanceof AST_For||p instanceof AST_ForIn;parenthesize_for_noin(self.value,output,noin)}}),DEFPRINT(AST_Call,function(self,output){self.expression.print(output);if(self instanceof AST_New&&no_constructor_parens(self,output))return;output.with_parens(function(){self.args.forEach(function(expr,i){i&&output.comma(),expr.print(output)})})}),DEFPRINT(AST_New,function(self,output){output.print("new"),output.space(),AST_Call.prototype._codegen(self,output)}),AST_Seq.DEFMETHOD("_do_print",function(output){this.car.print(output),this.cdr&&(output.comma(),output.should_break()&&(output.newline(),output.indent()),this.cdr.print(output))}),DEFPRINT(AST_Seq,function(self,output){self._do_print(output)}),DEFPRINT(AST_Dot,function(self,output){var expr=self.expression;expr.print(output),expr instanceof AST_Number&&expr.getValue()>=0&&(/[xa-f.]/i.test(output.last())||output.print(".")),output.print("."),output.add_mapping(self.end),output.print_name(self.property)}),DEFPRINT(AST_Sub,function(self,output){self.expression.print(output),output.print("["),self.property.print(output),output.print("]")}),DEFPRINT(AST_UnaryPrefix,function(self,output){var op=self.operator;output.print(op),/^[a-z]/i.test(op)&&output.space(),self.expression.print(output)}),DEFPRINT(AST_UnaryPostfix,function(self,output){self.expression.print(output),output.print(self.operator)}),DEFPRINT(AST_Binary,function(self,output){self.left.print(output),output.space(),output.print(self.operator),output.space(),self.right.print(output)}),DEFPRINT(AST_Conditional,function(self,output){self.condition.print(output),output.space(),output.print("?"),output.space(),self.consequent.print(output),output.space(),output.colon(),self.alternative.print(output)}),DEFPRINT(AST_Array,function(self,output){output.with_square(function(){var a=self.elements,len=a.length;len>0&&output.space(),a.forEach(function(exp,i){i&&output.comma(),exp.print(output)}),len>0&&output.space()})}),DEFPRINT(AST_Object,function(self,output){self.properties.length>0?output.with_block(function(){self.properties.forEach(function(prop,i){i&&(output.print(","),output.newline()),output.indent(),prop.print(output)}),output.newline()}):output.print("{}")}),DEFPRINT(AST_ObjectKeyVal,function(self,output){var key=self.key;output.option("quote_keys")?output.print_string(key):(typeof key=="number"||!output.option("beautify")&&+key+""==key)&&parseFloat(key)>=0?output.print(make_num(key)):is_identifier(key)?output.print_name(key):output.print_string(key),output.colon(),self.value.print(output)}),DEFPRINT(AST_ObjectSetter,function(self,output){output.print("set"),self.value._do_print(output,!0)}),DEFPRINT(AST_ObjectGetter,function(self,output){output.print("get"),self.value._do_print(output,!0)}),DEFPRINT(AST_Symbol,function(self,output){var def=self.definition();output.print_name(def?def.mangled_name||def.name:self.name)}),DEFPRINT(AST_Undefined,function(self,output){output.print("void 0")}),DEFPRINT(AST_Hole,noop),DEFPRINT(AST_Infinity,function(self,output){output.print("1/0")}),DEFPRINT(AST_NaN,function(self,output){output.print("0/0")}),DEFPRINT(AST_This,function(self,output){output.print("this")}),DEFPRINT(AST_Constant,function(self,output){output.print(self.getValue())}),DEFPRINT(AST_String,function(self,output){output.print_string(self.getValue())}),DEFPRINT(AST_Number,function(self,output){output.print(make_num(self.getValue()))}),DEFPRINT(AST_RegExp,function(self,output){var str=self.getValue().toString();output.option("ascii_only")&&(str=output.to_ascii(str)),output.print(str);var p=output.parent();p instanceof AST_Binary&&/^in/.test(p.operator)&&p.left===self&&output.print(" ")}),DEFMAP(AST_Node,noop),DEFMAP(AST_Directive,basic_sourcemap_gen),DEFMAP(AST_Debugger,basic_sourcemap_gen),DEFMAP(AST_Symbol,basic_sourcemap_gen),DEFMAP(AST_Jump,basic_sourcemap_gen),DEFMAP(AST_StatementWithBody,basic_sourcemap_gen),DEFMAP(AST_LabeledStatement,noop),DEFMAP(AST_Lambda,basic_sourcemap_gen),DEFMAP(AST_Switch,basic_sourcemap_gen),DEFMAP(AST_SwitchBranch,basic_sourcemap_gen),DEFMAP(AST_BlockStatement,basic_sourcemap_gen),DEFMAP(AST_Toplevel,noop),DEFMAP(AST_New,basic_sourcemap_gen),DEFMAP(AST_Try,basic_sourcemap_gen),DEFMAP(AST_Catch,basic_sourcemap_gen),DEFMAP(AST_Finally,basic_sourcemap_gen),DEFMAP(AST_Definitions,basic_sourcemap_gen),DEFMAP(AST_Constant,basic_sourcemap_gen),DEFMAP(AST_ObjectProperty,function(self,output){output.add_mapping(self.start,self.key)})}(),Compressor.prototype=new TreeTransformer,merge(Compressor.prototype,{option:function(key){return this.options[key]},warn:function(){this.options.warnings&&AST_Node.warn.apply(AST_Node,arguments)},before:function(node,descend,in_list){if(node._squeezed)return node;node instanceof AST_Scope&&(node.drop_unused(this),node=node.hoist_declarations(this)),descend(node,this),node=node.optimize(this);if(node instanceof AST_Scope){var save_warnings=this.options.warnings;this.options.warnings=!1,node.drop_unused(this),this.options.warnings=save_warnings}return node._squeezed=!0,node}}),function(){function OPT(node,optimizer){node.DEFMETHOD("optimize",function(compressor){var self=this;if(self._optimized)return self;var opt=optimizer(self,compressor);return opt._optimized=!0,opt===self?opt:opt.transform(compressor)})}function make_node(ctor,orig,props){return props||(props={}),orig&&(props.start||(props.start=orig.start),props.end||(props.end=orig.end)),new ctor(props)}function make_node_from_constant(compressor,val,orig){if(val instanceof AST_Node)return val.transform(compressor);switch(typeof val){case"string":return make_node(AST_String,orig,{value:val}).optimize(compressor);case"number":return make_node(isNaN(val)?AST_NaN:AST_Number,orig,{value:val}).optimize(compressor);case"boolean":return make_node(val?AST_True:AST_False,orig);case"undefined":return make_node(AST_Undefined,orig).optimize(compressor);default:if(val===null)return make_node(AST_Null,orig).optimize(compressor);if(val instanceof RegExp)return make_node(AST_RegExp,orig).optimize(compressor);throw new Error(string_template("Can't handle constant of type: {type}",{type:typeof val}))}}function as_statement_array(thing){if(thing===null)return[];if(thing instanceof AST_BlockStatement)return thing.body;if(thing instanceof AST_EmptyStatement)return[];if(thing instanceof AST_Statement)return[thing];throw new Error("Can't convert thing to statement array")}function is_empty(thing){return thing===null?!0:thing instanceof AST_EmptyStatement?!0:thing instanceof AST_BlockStatement?thing.body.length==0:!1}function loop_body(x){return x instanceof AST_Switch?x:x instanceof AST_For||x instanceof AST_ForIn||x instanceof AST_DWLoop?x.body instanceof AST_BlockStatement?x.body:x:x}function tighten_body(statements,compressor){function eliminate_spurious_blocks(statements){var seen_dirs=[];return statements.reduce(function(a,stat){return stat instanceof AST_BlockStatement?(CHANGED=!0,a.push.apply(a,eliminate_spurious_blocks(stat.body))):stat instanceof AST_EmptyStatement?CHANGED=!0:stat instanceof AST_Directive?seen_dirs.indexOf(stat.value)<0?(a.push(stat),seen_dirs.push(stat.value)):CHANGED=!0:a.push(stat),a},[])}function handle_if_return(statements,compressor){var self=compressor.self(),in_lambda=self instanceof AST_Lambda,ret=[];e:for(var i=statements.length;--i>=0;){var stat=statements[i];switch(!0){case in_lambda&&stat instanceof AST_Return&&!stat.value&&ret.length==0:CHANGED=!0;continue e;case stat instanceof AST_If:if(stat.body instanceof AST_Return){if((in_lambda&&ret.length==0||ret[0]instanceof AST_Return&&!ret[0].value)&&!stat.body.value&&!stat.alternative){CHANGED=!0;var cond=make_node(AST_SimpleStatement,stat.condition,{body:stat.condition});ret.unshift(cond);continue e}if(ret[0]instanceof AST_Return&&stat.body.value&&ret[0].value&&!stat.alternative){CHANGED=!0,stat=stat.clone(),stat.alternative=ret[0],ret[0]=stat.transform(compressor);continue e}if((ret.length==0||ret[0]instanceof AST_Return)&&stat.body.value&&!stat.alternative&&in_lambda){CHANGED=!0,stat=stat.clone(),stat.alternative=ret[0]||make_node(AST_Return,stat,{value:make_node(AST_Undefined,stat)}),ret[0]=stat.transform(compressor);continue e}if(!stat.body.value&&in_lambda){CHANGED=!0,stat=stat.clone(),stat.condition=stat.condition.negate(compressor),stat.body=make_node(AST_BlockStatement,stat,{body:as_statement_array(stat.alternative).concat(ret)}),stat.alternative=null,ret=[stat.transform(compressor)];continue e}if(ret.length==1&&in_lambda&&ret[0]instanceof AST_SimpleStatement&&(!stat.alternative||stat.alternative instanceof AST_SimpleStatement)){CHANGED=!0,ret.push(make_node(AST_Return,ret[0],{value:make_node(AST_Undefined,ret[0])}).transform(compressor)),ret=as_statement_array(stat.alternative).concat(ret),ret.unshift(stat);continue e}}var ab=aborts(stat.body),lct=ab instanceof AST_LoopControl?compressor.loopcontrol_target(ab.label):null;if(ab&&(ab instanceof AST_Return&&!ab.value&&in_lambda||ab instanceof AST_Continue&&self===loop_body(lct)||ab instanceof AST_Break&&lct instanceof AST_BlockStatement&&self===lct)){ab.label&&remove(ab.label.thedef.references,ab.label),CHANGED=!0;var body=as_statement_array(stat.body).slice(0,-1);stat=stat.clone(),stat.condition=stat.condition.negate(compressor),stat.body=make_node(AST_BlockStatement,stat,{body:ret}),stat.alternative=make_node(AST_BlockStatement,stat,{body:body}),ret=[stat.transform(compressor)];continue e}var ab=aborts(stat.alternative),lct=ab instanceof AST_LoopControl?compressor.loopcontrol_target(ab.label):null;if(ab&&(ab instanceof AST_Return&&!ab.value&&in_lambda||ab instanceof AST_Continue&&self===loop_body(lct)||ab instanceof AST_Break&&lct instanceof AST_BlockStatement&&self===lct)){ab.label&&remove(ab.label.thedef.references,ab.label),CHANGED=!0,stat=stat.clone(),stat.body=make_node(AST_BlockStatement,stat.body,{body:as_statement_array(stat.body).concat(ret)}),stat.alternative=make_node(AST_BlockStatement,stat.alternative,{body:as_statement_array(stat.alternative).slice(0,-1)}),ret=[stat.transform(compressor)];continue e}ret.unshift(stat);break;default:ret.unshift(stat)}}return ret}function eliminate_dead_code(statements,compressor){var has_quit=!1,orig=statements.length,self=compressor.self();return statements=statements.reduce(function(a,stat){if(has_quit)extract_declarations_from_unreachable_code(compressor,stat,a);else{if(stat instanceof AST_LoopControl){var lct=compressor.loopcontrol_target(stat.label);stat instanceof AST_Break&&lct instanceof AST_BlockStatement&&loop_body(lct)===self||stat instanceof AST_Continue&&loop_body(lct)===self?stat.label&&remove(stat.label.thedef.references,stat.label):a.push(stat)}else a.push(stat);aborts(stat)&&(has_quit=!0)}return a},[]),CHANGED=statements.length!=orig,statements}function sequencesize(statements,compressor){function push_seq(){seq=AST_Seq.from_array(seq),seq&&ret.push(make_node(AST_SimpleStatement,seq,{body:seq})),seq=[]}if(statements.length<2)return statements;var seq=[],ret=[];return statements.forEach(function(stat){stat instanceof AST_SimpleStatement?seq.push(stat.body):(push_seq(),ret.push(stat))}),push_seq(),ret=sequencesize_2(ret,compressor),CHANGED=ret.length!=statements.length,ret}function sequencesize_2(statements,compressor){function cons_seq(right){ret.pop();var left=prev.body;return left instanceof AST_Seq?left.add(right):left=AST_Seq.cons(left,right),left.transform(compressor)}var ret=[],prev=null;return statements.forEach(function(stat){if(prev)if(stat instanceof AST_For){var opera={};try{prev.body.walk(new TreeWalker(function(node){if(node instanceof AST_Binary&&node.operator=="in")throw opera})),!stat.init||stat.init instanceof AST_Definitions?stat.init||(stat.init=prev.body,ret.pop()):stat.init=cons_seq(stat.init)}catch(ex){if(ex!==opera)throw ex}}else stat instanceof AST_If?stat.condition=cons_seq(stat.condition):stat instanceof AST_With?stat.expression=cons_seq(stat.expression):stat instanceof AST_Exit&&stat.value?stat.value=cons_seq(stat.value):stat instanceof AST_Exit?stat.value=cons_seq(make_node(AST_Undefined,stat)):stat instanceof AST_Switch&&(stat.expression=cons_seq(stat.expression));ret.push(stat),prev=stat instanceof AST_SimpleStatement?stat:null}),ret}function join_consecutive_vars(statements,compressor){var prev=null;return statements.reduce(function(a,stat){return stat instanceof AST_Definitions&&prev&&prev.TYPE==stat.TYPE?(prev.definitions=prev.definitions.concat(stat.definitions),CHANGED=!0):stat instanceof AST_For&&prev instanceof AST_Definitions&&(!stat.init||stat.init.TYPE==prev.TYPE)?(CHANGED=!0,a.pop(),stat.init?stat.init.definitions=prev.definitions.concat(stat.init.definitions):stat.init=prev,a.push(stat),prev=stat):(prev=stat,a.push(stat)),a},[])}var CHANGED;do CHANGED=!1,statements=eliminate_spurious_blocks(statements),compressor.option("dead_code")&&(statements=eliminate_dead_code(statements,compressor)),compressor.option("if_return")&&(statements=handle_if_return(statements,compressor)),compressor.option("sequences")&&(statements=sequencesize(statements,compressor)),compressor.option("join_vars")&&(statements=join_consecutive_vars(statements,compressor));while(CHANGED);return statements}function extract_declarations_from_unreachable_code(compressor,stat,target){compressor.warn("Dropping unreachable code [{file}:{line},{col}]",stat.start),stat.walk(new TreeWalker(function(node){if(node instanceof AST_Definitions)return compressor.warn("Declarations in unreachable code! [{file}:{line},{col}]",node.start),node.remove_initializers(),target.push(node),!0;if(node instanceof AST_Defun)return target.push(node),!0;if(node instanceof AST_Scope)return!0}))}function best_of(ast1,ast2){return ast1.print_to_string().length>ast2.print_to_string().length?ast2:ast1}function aborts(thing){return thing&&thing.aborts()}function if_break_in_loop(self,compressor){function drop_it(rest){rest=as_statement_array(rest),self.body instanceof AST_BlockStatement?(self.body=self.body.clone(),self.body.body=rest.concat(self.body.body.slice(1)),self.body=self.body.transform(compressor)):self.body=make_node(AST_BlockStatement,self.body,{body:rest}).transform(compressor),if_break_in_loop(self,compressor)}var first=self.body instanceof AST_BlockStatement?self.body.body[0]:self.body;first instanceof AST_If&&(first.body instanceof AST_Break&&compressor.loopcontrol_target(first.body.label)===self?(self.condition?self.condition=make_node(AST_Binary,self.condition,{left:self.condition,operator:"&&",right:first.condition.negate(compressor)}):self.condition=first.condition.negate(compressor),drop_it(first.alternative)):first.alternative instanceof AST_Break&&compressor.loopcontrol_target(first.alternative.label)===self&&(self.condition?self.condition=make_node(AST_Binary,self.condition,{left:self.condition,operator:"&&",right:first.condition}):self.condition=first.condition,drop_it(first.body)))}function literals_in_boolean_context(self,compressor){return compressor.option("booleans")&&compressor.in_boolean_context()?make_node(AST_True,self):self}OPT(AST_Node,function(self,compressor){return self}),AST_Node.DEFMETHOD("equivalent_to",function(node){return this.print_to_string()==node.print_to_string()}),function(def){var unary_bool=["!","delete"],binary_bool=["in","instanceof","==","!=","===","!==","<","<=",">=",">"];def(AST_Node,function(){return!1}),def(AST_UnaryPrefix,function(){return member(this.operator,unary_bool)}),def(AST_Binary,function(){return member(this.operator,binary_bool)||(this.operator=="&&"||this.operator=="||")&&this.left.is_boolean()&&this.right.is_boolean()}),def(AST_Conditional,function(){return this.consequent.is_boolean()&&this.alternative.is_boolean()}),def(AST_Assign,function(){return this.operator=="="&&this.right.is_boolean()}),def(AST_Seq,function(){return this.cdr.is_boolean()}),def(AST_True,function(){return!0}),def(AST_False,function(){return!0})}(function(node,func){node.DEFMETHOD("is_boolean",func)}),function(def){def(AST_Node,function(){return!1}),def(AST_String,function(){return!0}),def(AST_UnaryPrefix,function(){return this.operator=="typeof"}),def(AST_Binary,function(compressor){return this.operator=="+"&&(this.left.is_string(compressor)||this.right.is_string(compressor))}),def(AST_Assign,function(compressor){return(this.operator=="="||this.operator=="+=")&&this.right.is_string(compressor)}),def(AST_Seq,function(compressor){return this.cdr.is_string(compressor)}),def(AST_Conditional,function(compressor){return this.consequent.is_string(compressor)&&this.alternative.is_string(compressor)}),def(AST_Call,function(compressor){return compressor.option("unsafe")&&this.expression instanceof AST_SymbolRef&&this.expression.name=="String"&&this.expression.undeclared()})}(function(node,func){node.DEFMETHOD("is_string",func)}),function(def){function ev(node){return node._eval()}AST_Node.DEFMETHOD("evaluate",function(compressor){if(!compressor.option("evaluate"))return[this];try{var val=this._eval(),ast=make_node_from_constant(compressor,val,this);return[best_of(ast,this),val]}catch(ex){if(ex!==def)throw ex;return[this]}}),def(AST_Statement,function(){throw new Error(string_template("Cannot evaluate a statement [{file}:{line},{col}]",this.start))}),def(AST_Function,function(){return[this]}),def(AST_Node,function(){throw def}),def(AST_Constant,function(){return this.getValue()}),def(AST_UnaryPrefix,function(){var e=this.expression;switch(this.operator){case"!":return!ev(e);case"typeof":return typeof ev(e);case"void":return void ev(e);case"~":return~ev(e);case"-":e=ev(e);if(e===0)throw def;return-e;case"+":return+ev(e)}throw def}),def(AST_Binary,function(){var left=this.left,right=this.right;switch(this.operator){case"&&":return ev(left)&&ev(right);case"||":return ev(left)||ev(right);case"|":return ev(left)|ev(right);case"&":return ev(left)&ev(right);case"^":return ev(left)^ev(right);case"+":return ev(left)+ev(right);case"*":return ev(left)*ev(right);case"/":return ev(left)/ev(right);case"%":return ev(left)%ev(right);case"-":return ev(left)-ev(right);case"<<":return ev(left)<<ev(right);case">>":return ev(left)>>ev(right);case">>>":return ev(left)>>>ev(right);case"==":return ev(left)==ev(right);case"===":return ev(left)===ev(right);case"!=":return ev(left)!=ev(right);case"!==":return ev(left)!==ev(right);case"<":return ev(left)<ev(right);case"<=":return ev(left)<=ev(right);case">":return ev(left)>ev(right);case">=":return ev(left)>=ev(right);case"in":return ev(left)in ev(right);case"instanceof":return ev(left)instanceof ev(right)}throw def}),def(AST_Conditional,function(){return ev(this.condition)?ev(this.consequent):ev(this.alternative)}),def(AST_SymbolRef,function(){var d=this.definition();if(d&&d.constant&&d.init)return ev(d.init);throw def})}(function(node,func){node.DEFMETHOD("_eval",func)}),function(def){function basic_negation(exp){return make_node(AST_UnaryPrefix,exp,{operator:"!",expression:exp})}def(AST_Node,function(){return basic_negation(this)}),def(AST_Statement,function(){throw new Error("Cannot negate a statement")}),def(AST_Function,function(){return basic_negation(this)}),def(AST_UnaryPrefix,function(){return this.operator=="!"?this.expression:basic_negation(this)}),def(AST_Seq,function(compressor){var self=this.clone();return self.cdr=self.cdr.negate(compressor),self}),def(AST_Conditional,function(compressor){var self=this.clone();return self.consequent=self.consequent.negate(compressor),self.alternative=self.alternative.negate(compressor),best_of(basic_negation(this),self)}),def(AST_Binary,function(compressor){var self=this.clone(),op=this.operator;if(compressor.option("unsafe_comps"))switch(op){case"<=":return self.operator=">",self;case"<":return self.operator=">=",self;case">=":return self.operator="<",self;case">":return self.operator="<=",self}switch(op){case"==":return self.operator="!=",self;case"!=":return self.operator="==",self;case"===":return self.operator="!==",self;case"!==":return self.operator="===",self;case"&&":return self.operator="||",self.left=self.left.negate(compressor),self.right=self.right.negate(compressor),best_of(basic_negation(this),self);case"||":return self.operator="&&",self.left=self.left.negate(compressor),self.right=self.right.negate(compressor),best_of(basic_negation(this),self)}return basic_negation(this)})}(function(node,func){node.DEFMETHOD("negate",function(compressor){return func.call(this,compressor)})}),function(def){def(AST_Node,function(){return!0}),def(AST_EmptyStatement,function(){return!1}),def(AST_Constant,function(){return!1}),def(AST_This,function(){return!1}),def(AST_Block,function(){for(var i=this.body.length;--i>=0;)if(this.body[i].has_side_effects())return!0;return!1}),def(AST_SimpleStatement,function(){return this.body.has_side_effects()}),def(AST_Defun,function(){return!0}),def(AST_Function,function(){return!1}),def(AST_Binary,function(){return this.left.has_side_effects()||this.right.has_side_effects()}),def(AST_Assign,function(){return!0}),def(AST_Conditional,function(){return this.condition.has_side_effects()||this.consequent.has_side_effects()||this.alternative.has_side_effects()}),def(AST_Unary,function(){return this.operator=="delete"||this.operator=="++"||this.operator=="--"||this.expression.has_side_effects()}),def(AST_SymbolRef,function(){return!1}),def(AST_Object,function(){for(var i=this.properties.length;--i>=0;)if(this.properties[i].has_side_effects())return!0;return!1}),def(AST_ObjectProperty,function(){return this.value.has_side_effects()}),def(AST_Array,function(){for(var i=this.elements.length;--i>=0;)if(this.elements[i].has_side_effects())return!0;return!1}),def(AST_PropAccess,function(){return!0}),def(AST_Seq,function(){return this.car.has_side_effects()||this.cdr.has_side_effects()})}(function(node,func){node.DEFMETHOD("has_side_effects",func)}),function(def){function block_aborts(){var n=this.body.length;return n>0&&aborts(this.body[n-1])}def(AST_Statement,function(){return null}),def(AST_Jump,function(){return this}),def(AST_BlockStatement,block_aborts),def(AST_SwitchBranch,block_aborts),def(AST_If,function(){return this.alternative&&aborts(this.body)&&aborts(this.alternative)})}(function(node,func){node.DEFMETHOD("aborts",func)}),OPT(AST_Directive,function(self,compressor){return self.scope.has_directive(self.value)!==self.scope?make_node(AST_EmptyStatement,self):self}),OPT(AST_Debugger,function(self,compressor){return compressor.option("drop_debugger")?make_node(AST_EmptyStatement,self):self}),OPT(AST_LabeledStatement,function(self,compressor){return self.body instanceof AST_Break&&compressor.loopcontrol_target(self.body.label)===self.body?make_node(AST_EmptyStatement,self):self.label.references.length==0?self.body:self}),OPT(AST_Block,function(self,compressor){return self.body=tighten_body(self.body,compressor),self}),OPT(AST_BlockStatement,function(self,compressor){self.body=tighten_body(self.body,compressor);switch(self.body.length){case 1:return self.body[0];case 0:return make_node(AST_EmptyStatement,self)}return self}),AST_Scope.DEFMETHOD("drop_unused",function(compressor){var self=this;if(compressor.option("unused")&&!(self instanceof AST_Toplevel)&&!self.uses_eval){var in_use=[],initializations=new Dictionary,scope=this,tw=new TreeWalker(function(node,descend){if(node!==self){if(node instanceof AST_Defun)return initializations.add(node.name.name,node),!0;if(node instanceof AST_Definitions&&scope===self)return node.definitions.forEach(function(def){def.value&&(initializations.add(def.name.name,def.value),def.value.has_side_effects()&&def.value.walk(tw))}),!0;if(node instanceof AST_SymbolRef)return push_uniq(in_use,node.definition()),!0;if(node instanceof AST_Scope){var save_scope=scope;return scope=node,descend(),scope=save_scope,!0}}});self.walk(tw);for(var i=0;i<in_use.length;++i)in_use[i].orig.forEach(function(decl){var init=initializations.get(decl.name);init&&init.forEach(function(init){var tw=new TreeWalker(function(node){node instanceof AST_SymbolRef&&push_uniq(in_use,node.definition())});init.walk(tw)})});var tt=new TreeTransformer(function before(node,descend,in_list){if(node instanceof AST_Lambda)for(var a=node.argnames,i=a.length;--i>=0;){var sym=a[i];if(!sym.unreferenced())break;a.pop(),compressor.warn("Dropping unused function argument {name} [{file}:{line},{col}]",{name:sym.name,file:sym.start.file,line:sym.start.line,col:sym.start.col})}if(node instanceof AST_Defun&&node!==self)return member(node.name.definition(),in_use)?node:(compressor.warn("Dropping unused function {name} [{file}:{line},{col}]",{name:node.name.name,file:node.name.start.file,line:node.name.start.line,col:node.name.start.col}),make_node(AST_EmptyStatement,node));if(node instanceof AST_Definitions&&!(tt.parent()instanceof AST_ForIn)){var def=node.definitions.filter(function(def){if(member(def.name.definition(),in_use))return!0;var w={name:def.name.name,file:def.name.start.file,line:def.name.start.line,col:def.name.start.col};return def.value&&def.value.has_side_effects()?(def._unused_side_effects=!0,compressor.warn("Side effects in initialization of unused variable {name} [{file}:{line},{col}]",w),!0):(compressor.warn("Dropping unused variable {name} [{file}:{line},{col}]",w),!1)});def=mergeSort(def,function(a,b){return!a.value&&b.value?-1:!b.value&&a.value?1:0});var side_effects=[];for(var i=0;i<def.length;){var x=def[i];x._unused_side_effects?(side_effects.push(x.value),def.splice(i,1)):(side_effects.length>0&&(side_effects.push(x.value),x.value=AST_Seq.from_array(side_effects),side_effects=[]),++i)}return side_effects.length>0?side_effects=make_node(AST_BlockStatement,node,{body:[make_node(AST_SimpleStatement,node,{body:AST_Seq.from_array(side_effects)})]}):side_effects=null,def.length==0&&!side_effects?make_node(AST_EmptyStatement,node):def.length==0?side_effects:(node.definitions=def,side_effects&&(side_effects.body.unshift(node),node=side_effects),node)}if(node instanceof AST_For&&node.init instanceof AST_BlockStatement){descend(node,this);var body=node.init.body.slice(0,-1);return node.init=node.init.body.slice(-1)[0].body,body.push(node),in_list?MAP.splice(body):make_node(AST_BlockStatement,node,{body:body})}if(node instanceof AST_Scope&&node!==self)return node});self.transform(tt)}}),AST_Scope.DEFMETHOD("hoist_declarations",function(compressor){var hoist_funs=compressor.option("hoist_funs"),hoist_vars=compressor.option("hoist_vars"),self=this;if(hoist_funs||hoist_vars){var dirs=[],hoisted=[],vars=new Dictionary,vars_found=0,var_decl=0;self.walk(new TreeWalker(function(node){if(node instanceof AST_Scope&&node!==self)return!0;if(node instanceof AST_Var)return++var_decl,!0})),hoist_vars=hoist_vars&&var_decl>1;var tt=new TreeTransformer(function before(node){if(node!==self){if(node instanceof AST_Directive)return dirs.push(node),make_node(AST_EmptyStatement,node);if(node instanceof AST_Defun&&hoist_funs)return hoisted.push(node),make_node(AST_EmptyStatement,node);if(node instanceof AST_Var&&hoist_vars){node.definitions.forEach(function(def){vars.set(def.name.name,def),++vars_found});var seq=node.to_assignments(),p=tt.parent();return p instanceof AST_ForIn&&p.init===node?seq==null?node.definitions[0].name:seq:p instanceof AST_For&&p.init===node?seq:seq?make_node(AST_SimpleStatement,node,{body:seq}):make_node(AST_EmptyStatement,node)}if(node instanceof AST_Scope)return node}});self=self.transform(tt);if(vars_found>0){var defs=[];vars.each(function(def,name){self instanceof AST_Lambda&&find_if(function(x){return x.name==def.name.name},self.argnames)?vars.del(name):(def=def.clone(),def.value=null,defs.push(def),vars.set(name,def))});if(defs.length>0){for(var i=0;i<self.body.length;){if(self.body[i]instanceof AST_SimpleStatement){var expr=self.body[i].body,sym,assign;if(expr instanceof AST_Assign&&expr.operator=="="&&(sym=expr.left)instanceof AST_Symbol&&vars.has(sym.name)){var def=vars.get(sym.name);if(def.value)break;def.value=expr.right,remove(defs,def),defs.push(def),self.body.splice(i,1);continue}if(expr instanceof AST_Seq&&(assign=expr.car)instanceof AST_Assign&&assign.operator=="="&&(sym=assign.left)instanceof AST_Symbol&&vars.has(sym.name)){var def=vars.get(sym.name);if(def.value)break;def.value=assign.right,remove(defs,def),defs.push(def),self.body[i].body=expr.cdr;continue}}if(self.body[i]instanceof AST_EmptyStatement){self.body.splice(i,1);continue}if(self.body[i]instanceof AST_BlockStatement){var tmp=[i,1].concat(self.body[i].body);self.body.splice.apply(self.body,tmp);continue}break}defs=make_node(AST_Var,self,{definitions:defs}),hoisted.push(defs)}}self.body=dirs.concat(hoisted,self.body)}return self}),OPT(AST_SimpleStatement,function(self,compressor){return compressor.option("side_effects")&&!self.body.has_side_effects()?(compressor.warn("Dropping side-effect-free statement [{file}:{line},{col}]",self.start),make_node(AST_EmptyStatement,self)):self}),OPT(AST_DWLoop,function(self,compressor){var cond=self.condition.evaluate(compressor);self.condition=cond[0];if(!compressor.option("loops"))return self;if(cond.length>1){if(cond[1])return make_node(AST_For,self,{body:self.body});if(!(self instanceof AST_While))return self.body;if(compressor.option("dead_code")){var a=[];return extract_declarations_from_unreachable_code(compressor,self.body,a),make_node(AST_BlockStatement,self,{body:a})}}return self}),OPT(AST_While,function(self,compressor){return compressor.option("loops")?(self=AST_DWLoop.prototype.optimize.call(self,compressor),self instanceof AST_While&&(if_break_in_loop(self,compressor),self=make_node(AST_For,self,self).transform(compressor)),self):self}),OPT(AST_For,function(self,compressor){var cond=self.condition;cond&&(cond=cond.evaluate(compressor),self.condition=cond[0]);if(!compressor.option("loops"))return self;if(cond&&cond.length>1&&!cond[1]&&compressor.option("dead_code")){var a=[];return self.init instanceof AST_Statement?a.push(self.init):self.init&&a.push(make_node(AST_SimpleStatement,self.init,{body:self.init})),extract_declarations_from_unreachable_code(compressor,self.body,a),make_node(AST_BlockStatement,self,{body:a})}return if_break_in_loop(self,compressor),self}),OPT(AST_If,function(self,compressor){if(!compressor.option("conditionals"))return self;var cond=self.condition.evaluate(compressor);self.condition=cond[0];if(cond.length>1)if(cond[1]){compressor.warn("Condition always true [{file}:{line},{col}]",self.condition.start);if(compressor.option("dead_code")){var a=[];return self.alternative&&extract_declarations_from_unreachable_code(compressor,self.alternative,a),a.push(self.body),make_node(AST_BlockStatement,self,{body:a}).transform(compressor)}}else{compressor.warn("Condition always false [{file}:{line},{col}]",self.condition.start);if(compressor.option("dead_code")){var a=[];return extract_declarations_from_unreachable_code(compressor,self.body,a),self.alternative&&a.push(self.alternative),make_node(AST_BlockStatement,self,{body:a}).transform(compressor)}}is_empty(self.alternative)&&(self.alternative=null);var negated=self.condition.negate(compressor),negated_is_best=best_of(self.condition,negated)===negated;if(self.alternative&&negated_is_best){negated_is_best=!1,self.condition=negated;var tmp=self.body;self.body=self.alternative||make_node(AST_EmptyStatement),self.alternative=tmp}if(is_empty(self.body)&&is_empty(self.alternative))return make_node(AST_SimpleStatement,self.condition,{body:self.condition}).transform(compressor);if(self.body instanceof AST_SimpleStatement&&self.alternative instanceof AST_SimpleStatement)return make_node(AST_SimpleStatement,self,{body:make_node(AST_Conditional,self,{condition:self.condition,consequent:self.body.body,alternative:self.alternative.body})}).transform(compressor);if(is_empty(self.alternative)&&self.body instanceof AST_SimpleStatement)return negated_is_best?make_node(AST_SimpleStatement,self,{body:make_node(AST_Binary,self,{operator:"||",left:negated,right:self.body.body})}).transform(compressor):make_node(AST_SimpleStatement,self,{body:make_node(AST_Binary,self,{operator:"&&",left:self.condition,right:self.body.body})}).transform(compressor);if(self.body instanceof AST_EmptyStatement&&self.alternative&&self.alternative instanceof AST_SimpleStatement)return make_node(AST_SimpleStatement,self,{body:make_node(AST_Binary,self,{operator:"||",left:self.condition,right:self.alternative.body})}).transform(compressor);if(self.body instanceof AST_Exit&&self.alternative instanceof AST_Exit&&self.body.TYPE==self.alternative.TYPE)return make_node(self.body.CTOR,self,{value:make_node(AST_Conditional,self,{condition:self.condition,consequent:self.body.value||make_node(AST_Undefined,self.body).optimize(compressor),alternative:self.alternative.value||make_node(AST_Undefined,self.alternative).optimize(compressor)})}).transform(compressor);self.body instanceof AST_If&&!self.body.alternative&&!self.alternative&&(self.condition=make_node(AST_Binary,self.condition,{operator:"&&",left:self.condition,right:self.body.condition}).transform(compressor),self.body=self.body.body);if(aborts(self.body)&&self.alternative){var alt=self.alternative;return self.alternative=null,make_node(AST_BlockStatement,self,{body:[self,alt]}).transform(compressor)}if(aborts(self.alternative)){var body=self.body;return self.body=self.alternative,self.condition=negated_is_best?negated:self.condition.negate(compressor),self.alternative=null,make_node(AST_BlockStatement,self,{body:[self,body]}).transform(compressor)}return self}),OPT(AST_Switch,function(self,compressor){if(self.body.length==0&&compressor.option("conditionals"))return make_node(AST_SimpleStatement,self,{body:self.expression}).transform(compressor);var last_branch=self.body[self.body.length-1];if(last_branch){var stat=last_branch.body[last_branch.body.length-1];stat instanceof AST_Break&&loop_body(compressor.loopcontrol_target(stat.label))===self&&last_branch.body.pop()}var exp=self.expression.evaluate(compressor);e:if(exp.length==2)try{self.expression=exp[0];if(!compressor.option("dead_code"))break e;var value=exp[1],in_if=!1,in_block=!1,started=!1,stopped=!1,ruined=!1,tt=new TreeTransformer(function(node,descend,in_list){if(node instanceof AST_Lambda||node instanceof AST_SimpleStatement)return node;if(node instanceof AST_Switch&&node===self)return node=node.clone(),descend(node,this),ruined?node:make_node(AST_BlockStatement,node,{body:node.body.reduce(function(a,branch){return a.concat(branch.body)},[])}).transform(compressor);if(node instanceof AST_If||node instanceof AST_Try){var save=in_if;return in_if=!in_block,descend(node,this),in_if=save,node}if(node instanceof AST_StatementWithBody||node instanceof AST_Switch){var save=in_block;return in_block=!0,descend(node,this),in_block=save,node}if(node instanceof AST_Break&&this.loopcontrol_target(node.label)===self)return in_if?(ruined=!0,node):in_block?node:(stopped=!0,in_list?MAP.skip:make_node(AST_EmptyStatement,node));if(node instanceof AST_SwitchBranch&&this.parent()===self){if(stopped)return MAP.skip;if(node instanceof AST_Case){var exp=node.expression.evaluate(compressor);if(exp.length<2)throw self;return exp[1]===value||started?(started=!0,aborts(node)&&(stopped=!0),descend(node,this),node):MAP.skip}return descend(node,this),node}});tt.stack=compressor.stack.slice(),self=self.transform(tt)}catch(ex){if(ex!==self)throw ex}return self}),OPT(AST_Case,function(self,compressor){return self.body=tighten_body(self.body,compressor),self}),OPT(AST_Try,function(self,compressor){return self.body=tighten_body(self.body,compressor),self}),AST_Definitions.DEFMETHOD("remove_initializers",function(){this.definitions.forEach(function(def){def.value=null})}),AST_Definitions.DEFMETHOD("to_assignments",function(){var assignments=this.definitions.reduce(function(a,def){if(def.value){var name=make_node(AST_SymbolRef,def.name,def.name);a.push(make_node(AST_Assign,def,{operator:"=",left:name,right:def.value}))}return a},[]);return assignments.length==0?null:AST_Seq.from_array(assignments)}),OPT(AST_Definitions,function(self,compressor){return self.definitions.length==0?make_node(AST_EmptyStatement,self):self}),OPT(AST_Function,function(self,compressor){return self=AST_Lambda.prototype.optimize.call(self,compressor),compressor.option("unused")&&self.name&&self.name.unreferenced()&&(self.name=null),self}),OPT(AST_Call,function(self,compressor){if(compressor.option("unsafe")){var exp=self.expression;if(exp instanceof AST_SymbolRef&&exp.undeclared())switch(exp.name){case"Array":if(self.args.length!=1)return make_node(AST_Array,self,{elements:self.args});break;case"Object":if(self.args.length==0)return make_node(AST_Object,self,{properties:[]});break;case"String":if(self.args.length==0)return make_node(AST_String,self,{value:""});return make_node(AST_Binary,self,{left:self.args[0],operator:"+",right:make_node(AST_String,self,{value:""})})}else if(exp instanceof AST_Dot&&exp.property=="toString"&&self.args.length==0)return make_node(AST_Binary,self,{left:make_node(AST_String,self,{value:""}),operator:"+",right:exp.expression}).transform(compressor)}return compressor.option("side_effects")&&self.expression instanceof AST_Function&&self.args.length==0&&!AST_Block.prototype.has_side_effects.call(self.expression)?make_node(AST_Undefined,self).transform(compressor):self}),OPT(AST_New,function(self,compressor){if(compressor.option("unsafe")){var exp=self.expression;if(exp instanceof AST_SymbolRef&&exp.undeclared())switch(exp.name){case"Object":case"RegExp":case"Function":case"Error":case"Array":return make_node(AST_Call,self,self).transform(compressor)}}return self}),OPT(AST_Seq,function(self,compressor){if(!compressor.option("side_effects"))return self;if(!self.car.has_side_effects()){var p;if(!(self.cdr instanceof AST_SymbolRef&&self.cdr.name=="eval"&&self.cdr.undeclared()&&(p=compressor.parent())instanceof AST_Call&&p.expression===self))return self.cdr}if(compressor.option("cascade")){if(self.car instanceof AST_Assign&&!self.car.left.has_side_effects()&&self.car.left.equivalent_to(self.cdr))return self.car;if(!self.car.has_side_effects()&&!self.cdr.has_side_effects()&&self.car.equivalent_to(self.cdr))return self.car}return self}),AST_Unary.DEFMETHOD("lift_sequences",function(compressor){if(compressor.option("sequences")&&this.expression instanceof AST_Seq){var seq=this.expression,x=seq.to_array();return this.expression=x.pop(),x.push(this),seq=AST_Seq.from_array(x).transform(compressor),seq}return this}),OPT(AST_UnaryPostfix,function(self,compressor){return self.lift_sequences(compressor)}),OPT(AST_UnaryPrefix,function(self,compressor){self=self.lift_sequences(compressor);var e=self.expression;if(compressor.option("booleans")&&compressor.in_boolean_context()){switch(self.operator){case"!":if(e instanceof AST_UnaryPrefix&&e.operator=="!")return e.expression;break;case"typeof":return compressor.warn("Boolean expression always true [{file}:{line},{col}]",self.start),make_node(AST_True,self)}e instanceof AST_Binary&&self.operator=="!"&&(self=best_of(self,e.negate(compressor)))}return self.evaluate(compressor)[0]}),AST_Binary.DEFMETHOD("lift_sequences",function(compressor){if(compressor.option("sequences")){if(this.left instanceof AST_Seq){var seq=this.left,x=seq.to_array();return this.left=x.pop(),x.push(this),seq=AST_Seq.from_array(x).transform(compressor),seq}if(this.right instanceof AST_Seq&&this.operator!="||"&&this.operator!="&&"&&!this.left.has_side_effects()){var seq=this.right,x=seq.to_array();return this.right=x.pop(),x.push(this),seq=AST_Seq.from_array(x).transform(compressor),seq}}return this});var commutativeOperators=makePredicate("== === != !== * & | ^");OPT(AST_Binary,function(self,compressor){function reverse(op){if(!self.left.has_side_effects()||!self.right.has_side_effects()){op&&(self.operator=op);var tmp=self.left;self.left=self.right,self.right=tmp}}commutativeOperators(self.operator)&&self.right instanceof AST_Constant&&!(self.left instanceof AST_Constant)&&reverse(),self=self.lift_sequences(compressor);if(compressor.option("comparisons"))switch(self.operator){case"===":case"!==":if(self.left.is_string(compressor)&&self.right.is_string(compressor)||self.left.is_boolean()&&self.right.is_boolean())self.operator=self.operator.substr(0,2);case"==":case"!=":self.left instanceof AST_String&&self.left.value=="undefined"&&self.right instanceof AST_UnaryPrefix&&self.right.operator=="typeof"&&compressor.option("unsafe")&&(!(self.right.expression instanceof AST_SymbolRef)||!self.right.expression.undeclared())&&(self.left=self.right.expression,self.right=make_node(AST_Undefined,self.left).optimize(compressor),self.operator.length==2&&(self.operator+="="))}if(compressor.option("booleans")&&compressor.in_boolean_context())switch(self.operator){case"&&":var ll=self.left.evaluate(compressor),rr=self.right.evaluate(compressor);if(ll.length>1&&!ll[1]||rr.length>1&&!rr[1])return compressor.warn("Boolean && always false [{file}:{line},{col}]",self.start),make_node(AST_False,self);if(ll.length>1&&ll[1])return rr[0];if(rr.length>1&&rr[1])return ll[0];break;case"||":var ll=self.left.evaluate(compressor),rr=self.right.evaluate(compressor);if(ll.length>1&&ll[1]||rr.length>1&&rr[1])return compressor.warn("Boolean || always true [{file}:{line},{col}]",self.start),make_node(AST_True,self);if(ll.length>1&&!ll[1])return rr[0];if(rr.length>1&&!rr[1])return ll[0];break;case"+":var ll=self.left.evaluate(compressor),rr=self.right.evaluate(compressor);if(ll.length>1&&ll[0]instanceof AST_String&&ll[1]||rr.length>1&&rr[0]instanceof AST_String&&rr[1])return compressor.warn("+ in boolean context always true [{file}:{line},{col}]",self.start),make_node(AST_True,self)}var exp=self.evaluate(compressor);if(exp.length>1&&best_of(exp[0],self)!==self)return exp[0];if(compressor.option("comparisons")){if(!(compressor.parent()instanceof AST_Binary)||compressor.parent()instanceof AST_Assign){var negated=make_node(AST_UnaryPrefix,self,{operator:"!",expression:self.negate(compressor)});self=best_of(self,negated)}switch(self.operator){case"<":reverse(">");break;case"<=":reverse(">=")}}return self.operator=="+"&&self.right instanceof AST_String&&self.right.getValue()===""&&self.left instanceof AST_Binary&&self.left.operator=="+"&&self.left.is_string(compressor)?self.left:self}),OPT(AST_SymbolRef,function(self,compressor){if(self.undeclared()){var defines=compressor.option("global_defs");if(defines&&defines.hasOwnProperty(self.name))return make_node_from_constant(compressor,defines[self.name],self);switch(self.name){case"undefined":return make_node(AST_Undefined,self);case"NaN":return make_node(AST_NaN,self);case"Infinity":return make_node(AST_Infinity,self)}}return self}),OPT(AST_Undefined,function(self,compressor){if(compressor.option("unsafe")){var scope=compressor.find_parent(AST_Scope),undef=scope.find_variable("undefined");if(undef){var ref=make_node(AST_SymbolRef,self,{name:"undefined",scope:scope,thedef:undef});return ref.reference(),ref}}return self});var ASSIGN_OPS=["+","-","/","*","%",">>","<<",">>>","|","^","&"];OPT(AST_Assign,function(self,compressor){return self=self.lift_sequences(compressor),self.operator=="="&&self.left instanceof AST_SymbolRef&&self.right instanceof AST_Binary&&self.right.left instanceof AST_SymbolRef&&self.right.left.name==self.left.name&&member(self.right.operator,ASSIGN_OPS)&&(self.operator=self.right.operator+"=",self.right=self.right.right),self}),OPT(AST_Conditional,function(self,compressor){if(!compressor.option("conditionals"))return self;if(self.condition instanceof AST_Seq){var car=self.condition.car;return self.condition=self.condition.cdr,AST_Seq.cons(car,self)}var cond=self.condition.evaluate(compressor);if(cond.length>1)return cond[1]?(compressor.warn("Condition always true [{file}:{line},{col}]",self.start),self.consequent):(compressor.warn("Condition always false [{file}:{line},{col}]",self.start),self.alternative);var negated=cond[0].negate(compressor);best_of(cond[0],negated)===negated&&(self=make_node(AST_Conditional,self,{condition:negated,consequent:self.alternative,alternative:self.consequent}));var consequent=self.consequent,alternative=self.alternative;return consequent instanceof AST_Assign&&alternative instanceof AST_Assign&&consequent.operator==alternative.operator&&consequent.left.equivalent_to(alternative.left)&&(self=make_node(AST_Assign,self,{operator:consequent.operator,left:consequent.left,right:make_node(AST_Conditional,self,{condition:self.condition,consequent:consequent.right,alternative:alternative.right})})),self}),OPT(AST_Boolean,function(self,compressor){if(compressor.option("booleans")){var p=compressor.parent();return p instanceof AST_Binary&&(p.operator=="=="||p.operator=="!=")?(compressor.warn("Non-strict equality against boolean: {operator} {value} [{file}:{line},{col}]",{operator:p.operator,value:self.value,file:p.start.file,line:p.start.line,col:p.start.col}),make_node(AST_Number,self,{value:+self.value})):make_node(AST_UnaryPrefix,self,{operator:"!",expression:make_node(AST_Number,self,{value:1-self.value})})}return self}),OPT(AST_Sub,function(self,compressor){var prop=self.property;if(prop instanceof AST_String&&compressor.option("properties")){prop=prop.getValue();if(is_identifier(prop))return make_node(AST_Dot,self,{expression:self.expression,property:prop})}return self}),OPT(AST_Array,literals_in_boolean_context),OPT(AST_Object,literals_in_boolean_context),OPT(AST_RegExp,literals_in_boolean_context)}(),function(){function From_Moz_Unary(M){return new(M.prefix?AST_UnaryPrefix:AST_UnaryPostfix)({start:my_start_token(M),end:my_end_token(M),operator:M.operator,expression:from_moz(M.argument)})}function my_start_token(moznode){return new AST_Token({file:moznode.loc&&moznode.loc.source,line:moznode.loc&&moznode.loc.start.line,col:moznode.loc&&moznode.loc.start.column,pos:moznode.start,endpos:moznode.start})}function my_end_token(moznode){return new AST_Token({file:moznode.loc&&moznode.loc.source,line:moznode.loc&&moznode.loc.end.line,col:moznode.loc&&moznode.loc.end.column,pos:moznode.end,endpos:moznode.end})}function map(moztype,mytype,propmap){var moz_to_me="function From_Moz_"+moztype+"(M){\n";return moz_to_me+="return new mytype({\nstart: my_start_token(M),\nend: my_end_token(M)",propmap&&propmap.split(/\s*,\s*/).forEach(function(prop){var m=/([a-z0-9$_]+)(=|@|>|%)([a-z0-9$_]+)/i.exec(prop);if(!m)throw new Error("Can't understand property map: "+prop);var moz="M."+m[1],how=m[2],my=m[3];moz_to_me+=",\n"+my+": ";if(how=="@")moz_to_me+=moz+".map(from_moz)";else if(how==">")moz_to_me+="from_moz("+moz+")";else if(how=="=")moz_to_me+=moz;else{if(how!="%")throw new Error("Can't understand operator in propmap: "+prop);moz_to_me+="from_moz("+moz+").body"}}),moz_to_me+="\n})}",moz_to_me=(new Function("mytype","my_start_token","my_end_token","from_moz","return("+moz_to_me+")"))(mytype,my_start_token,my_end_token,from_moz),MOZ_TO_ME[moztype]=moz_to_me}function from_moz(node){FROM_MOZ_STACK.push(node);var ret=node!=null?MOZ_TO_ME[node.type](node):null;return FROM_MOZ_STACK.pop(),ret}var MOZ_TO_ME={TryStatement:function(M){return new AST_Try({start:my_start_token(M),end:my_end_token(M),body:from_moz(M.block).body,bcatch:from_moz(M.handlers[0]),bfinally:M.finalizer?new AST_Finally(from_moz(M.finalizer)):null})},CatchClause:function(M){return new AST_Catch({start:my_start_token(M),end:my_end_token(M),argname:from_moz(M.param),body:from_moz(M.body).body})},ObjectExpression:function(M){return new AST_Object({start:my_start_token(M),end:my_end_token(M),properties:M.properties.map(function(prop){var key=prop.key,name=key.type=="Identifier"?key.name:key.value,args={start:my_start_token(key),end:my_end_token(prop.value),key:name,value:from_moz(prop.value)};switch(prop.kind){case"init":return new AST_ObjectKeyVal(args);case"set":return args.value.name=from_moz(key),new AST_ObjectSetter(args);case"get":return args.value.name=from_moz(key),new AST_ObjectGetter(args)}})})},SequenceExpression:function(M){return AST_Seq.from_array(M.expressions.map(from_moz))},MemberExpression:function(M){return new(M.computed?AST_Sub:AST_Dot)({start:my_start_token(M),end:my_end_token(M),property:M.computed?from_moz(M.property):M.property.name,expression:from_moz(M.object)})},SwitchCase:function(M){return new(M.test?AST_Case:AST_Default)({start:my_start_token(M),end:my_end_token(M),expression:from_moz(M.test),body:M.consequent.map(from_moz)})},Literal:function(M){var val=M.value,args={start:my_start_token(M),end:my_end_token(M)};if(val===null)return new AST_Null(args);switch(typeof val){case"string":return args.value=val,new AST_String(args);case"number":return args.value=val,new AST_Number(args);case"boolean":return new(val?AST_True:AST_False)(args);default:return args.value=val,new AST_RegExp(args)}},UnaryExpression:From_Moz_Unary,UpdateExpression:From_Moz_Unary,Identifier:function(M){var p=FROM_MOZ_STACK[FROM_MOZ_STACK.length-2];return new(M.name=="this"?AST_This:p.type=="LabeledStatement"?AST_Label:p.type=="VariableDeclarator"&&p.id===M?p.kind=="const"?AST_SymbolConst:AST_SymbolVar:p.type=="FunctionExpression"?p.id===M?AST_SymbolLambda:AST_SymbolFunarg:p.type=="FunctionDeclaration"?p.id===M?AST_SymbolDefun:AST_SymbolFunarg:p.type=="CatchClause"?AST_SymbolCatch:p.type=="BreakStatement"||p.type=="ContinueStatement"?AST_LabelRef:AST_SymbolRef)({start:my_start_token(M),end:my_end_token(M),name:M.name})}},ME_TO_MOZ={};map("Node",AST_Node),map("Program",AST_Toplevel,"body@body"),map("Function",AST_Function,"id>name, params@argnames, body%body"),map("EmptyStatement",AST_EmptyStatement),map("BlockStatement",AST_BlockStatement,"body@body"),map("ExpressionStatement",AST_SimpleStatement,"expression>body"),map("IfStatement",AST_If,"test>condition, consequent>body, alternate>alternative"),map("LabeledStatement",AST_LabeledStatement,"label>label, body>body"),map("BreakStatement",AST_Break,"label>label"),map("ContinueStatement",AST_Continue,"label>label"),map("WithStatement",AST_With,"object>expression, body>body"),map("SwitchStatement",AST_Switch,"discriminant>expression, cases@body"),map("ReturnStatement",AST_Return,"argument>value"),map("ThrowStatement",AST_Throw,"argument>value"),map("WhileStatement",AST_While,"test>condition, body>body"),map("DoWhileStatement",AST_Do,"test>condition, body>body"),map("ForStatement",AST_For,"init>init, test>condition, update>step, body>body"),map("ForInStatement",AST_ForIn,"left>init, right>object, body>body"),map("DebuggerStatement",AST_Debugger),map("FunctionDeclaration",AST_Defun,"id>name, params@argnames, body%body"),map("VariableDeclaration",AST_Var,"declarations@definitions"),map("VariableDeclarator",AST_VarDef,"id>name, init>value"),map("ThisExpression",AST_This),map("ArrayExpression",AST_Array,"elements@elements"),map("FunctionExpression",AST_Function,"id>name, params@argnames, body%body"),map("BinaryExpression",AST_Binary,"operator=operator, left>left, right>right"),map("AssignmentExpression",AST_Assign,"operator=operator, left>left, right>right"),map("LogicalExpression",AST_Binary,"operator=operator, left>left, right>right"),map("ConditionalExpression",AST_Conditional,"test>condition, consequent>consequent, alternate>alternative"),map("NewExpression",AST_New,"callee>expression, arguments@args"),map("CallExpression",AST_Call,"callee>expression, arguments@args");var FROM_MOZ_STACK=null;AST_Node.from_mozilla_ast=function(node){var save_stack=FROM_MOZ_STACK;FROM_MOZ_STACK=[];var ast=from_moz(node);return FROM_MOZ_STACK=save_stack,ast}}(),exports.array_to_hash=array_to_hash,exports.slice=slice,exports.characters=characters,exports.member=member,exports.find_if=find_if,exports.repeat_string=repeat_string,exports.DefaultsError=DefaultsError,exports.defaults=defaults,exports.merge=merge,exports.noop=noop,exports.MAP=MAP,exports.push_uniq=push_uniq,exports.string_template=string_template,exports.remove=remove,exports.mergeSort=mergeSort,exports.set_difference=set_difference,exports.set_intersection=set_intersection,exports.makePredicate=makePredicate,exports.Dictionary=Dictionary,exports.DEFNODE=DEFNODE,exports.AST_Token=AST_Token,exports.AST_Node=AST_Node,exports.AST_Statement=AST_Statement,exports.AST_Debugger=AST_Debugger,exports.AST_Directive=AST_Directive,exports.AST_SimpleStatement=AST_SimpleStatement,exports.walk_body=walk_body,exports.AST_Block=AST_Block,exports.AST_BlockStatement=AST_BlockStatement,exports.AST_EmptyStatement=AST_EmptyStatement,exports.AST_StatementWithBody=AST_StatementWithBody,exports.AST_LabeledStatement=AST_LabeledStatement,exports.AST_DWLoop=AST_DWLoop,exports.AST_Do=AST_Do,exports.AST_While=AST_While,exports.AST_For=AST_For,exports.AST_ForIn=AST_ForIn,exports.AST_With=AST_With,exports.AST_Scope=AST_Scope,exports.AST_Toplevel=AST_Toplevel,exports.AST_Lambda=AST_Lambda,exports.AST_Accessor=AST_Accessor,exports.AST_Function=AST_Function,exports.AST_Defun=AST_Defun,exports.AST_Jump=AST_Jump,exports.AST_Exit=AST_Exit,exports.AST_Return=AST_Return,exports.AST_Throw=AST_Throw,exports.AST_LoopControl=AST_LoopControl,exports.AST_Break=AST_Break,exports.AST_Continue=AST_Continue,exports.AST_If=AST_If,exports.AST_Switch=AST_Switch,exports.AST_SwitchBranch=AST_SwitchBranch,exports.AST_Default=AST_Default,exports.AST_Case=AST_Case,exports.AST_Try=AST_Try,exports.AST_Catch=AST_Catch,exports.AST_Finally=AST_Finally,exports.AST_Definitions=AST_Definitions,exports.AST_Var=AST_Var,exports.AST_Const=AST_Const,exports.AST_VarDef=AST_VarDef,exports.AST_Call=AST_Call,exports.AST_New=AST_New,exports.AST_Seq=AST_Seq,exports.AST_PropAccess=AST_PropAccess,exports.AST_Dot=AST_Dot,exports.AST_Sub=AST_Sub,exports.AST_Unary=AST_Unary,exports.AST_UnaryPrefix=AST_UnaryPrefix,exports.AST_UnaryPostfix=AST_UnaryPostfix,exports.AST_Binary=AST_Binary,exports.AST_Conditional=AST_Conditional,exports.AST_Assign=AST_Assign,exports.AST_Array=AST_Array,exports.AST_Object=AST_Object,exports.AST_ObjectProperty=AST_ObjectProperty,exports.AST_ObjectKeyVal=AST_ObjectKeyVal,exports.AST_ObjectSetter=AST_ObjectSetter,exports.AST_ObjectGetter=AST_ObjectGetter,exports.AST_Symbol=AST_Symbol,exports.AST_SymbolAccessor=AST_SymbolAccessor,exports.AST_SymbolDeclaration=AST_SymbolDeclaration,exports.AST_SymbolVar=AST_SymbolVar,exports.AST_SymbolConst=AST_SymbolConst,exports.AST_SymbolFunarg=AST_SymbolFunarg,exports.AST_SymbolDefun=AST_SymbolDefun,exports.AST_SymbolLambda=AST_SymbolLambda,exports.AST_SymbolCatch=AST_SymbolCatch,exports.AST_Label=AST_Label,exports.AST_SymbolRef=AST_SymbolRef,exports.AST_LabelRef=AST_LabelRef,exports.AST_This=AST_This,exports.AST_Constant=AST_Constant,exports.AST_String=AST_String,exports.AST_Number=AST_Number,exports.AST_RegExp=AST_RegExp,exports.AST_Atom=AST_Atom,exports.AST_Null=AST_Null,exports.AST_NaN=AST_NaN,exports.AST_Undefined=AST_Undefined,exports.AST_Hole=AST_Hole,exports.AST_Infinity=AST_Infinity,exports.AST_Boolean=AST_Boolean,exports.AST_False=AST_False,exports.AST_True=AST_True,exports.TreeWalker=TreeWalker,exports.KEYWORDS=KEYWORDS,exports.KEYWORDS_ATOM=KEYWORDS_ATOM,exports.RESERVED_WORDS=RESERVED_WORDS,exports.KEYWORDS_BEFORE_EXPRESSION=KEYWORDS_BEFORE_EXPRESSION,exports.OPERATOR_CHARS=OPERATOR_CHARS,exports.RE_HEX_NUMBER=RE_HEX_NUMBER,exports.RE_OCT_NUMBER=RE_OCT_NUMBER,exports.RE_DEC_NUMBER=RE_DEC_NUMBER,exports.OPERATORS=OPERATORS,exports.WHITESPACE_CHARS=WHITESPACE_CHARS,exports.PUNC_BEFORE_EXPRESSION=PUNC_BEFORE_EXPRESSION,exports.PUNC_CHARS=PUNC_CHARS,exports.REGEXP_MODIFIERS=REGEXP_MODIFIERS,exports.UNICODE=UNICODE,exports.is_letter=is_letter,exports.is_digit=is_digit,exports.is_alphanumeric_char=is_alphanumeric_char,exports.is_unicode_combining_mark=is_unicode_combining_mark,exports.is_unicode_connector_punctuation=is_unicode_connector_punctuation,exports.is_identifier=is_identifier,exports.is_identifier_start=is_identifier_start,exports.is_identifier_char=is_identifier_char,exports.parse_js_number=parse_js_number,exports.JS_Parse_Error=JS_Parse_Error,exports.js_error=js_error,exports.is_token=is_token,exports.EX_EOF=EX_EOF,exports.tokenizer=tokenizer,exports.UNARY_PREFIX=UNARY_PREFIX,exports.UNARY_POSTFIX=UNARY_POSTFIX,exports.ASSIGNMENT=ASSIGNMENT,exports.PRECEDENCE=PRECEDENCE,exports.STATEMENTS_WITH_LABELS=STATEMENTS_WITH_LABELS,exports.ATOMIC_START_TOKEN=ATOMIC_START_TOKEN,exports.parse=parse,exports.TreeTransformer=TreeTransformer,exports.SymbolDef=SymbolDef,exports.base54=base54,exports.OutputStream=OutputStream,exports.Compressor=Compressor,exports.SourceMap=SourceMap}({},function(){return this}()),define("uglify",function(global){return function(){var ret,fn;return ret||global.UglifyJS}}(this)),define("ZeptoBuilder",["zepto","DownloadBuilder","uglify"],function($,DownloadBuilder,UglifyJS){var $body=$("body"),$source=$("#source"),$modules=$("#modules"),$generateBtn=$("#btn-generate"),sessionStorage=function(){var uid=new Date,storage,result;try{return(storage=window.sessionStorage).setItem(uid,uid),result=storage.getItem(uid)==uid,storage.removeItem(uid),result&&storage}catch(e){}}(),CONFIG={location:"github",author:"madrobby",repo:"zepto",branch:"master",client_id:"44ea087258fd57a58a53",client_secret:"08e6bdee04caf16e0f4e6f9b4508adc43ac8a7cd"},API_URL="https://api.github.com",REPO_PATH="/repos/madrobby/zepto/contents",SRC_PATH="/src",ZeptoBuilder={_minify:function(codes,options){var toplevel=null,compress,sq,stream;return options=UglifyJS.defaults(options||{},{warnings:!1,mangle:{},compress:{}}),typeof codes=="string"&&(codes=[codes]),$.each(codes,function(index,code){toplevel=UglifyJS.parse(code,{filename:"?",toplevel:toplevel})}),options.compress&&(compress={warnings:options.warnings},UglifyJS.merge(compress,options.compress),toplevel.figure_out_scope(),sq=UglifyJS.Compressor(compress),toplevel=toplevel.transform(sq)),options.mangle&&(toplevel.figure_out_scope(),toplevel.compute_char_frequency(),toplevel.mangle_names(options.mangle)),stream=UglifyJS.OutputStream(),toplevel.print(stream),stream.toString()},init:function(){return this.builder=new DownloadBuilder(CONFIG),this.getVersion(),this.modules.init(),this.modal.init(),this},getVersion:function(){var version;if(sessionStorage&&sessionStorage.getItem("zepto-version"))return $("#v").text(sessionStorage.getItem("zepto-version"));this.builder.JSONP(API_URL+REPO_PATH+"/package.json",function(data){version=JSON.parse(ZeptoBuilder.builder._parseGithubResponse({data:data})).version,sessionStorage&&sessionStorage.setItem("zepto-version",version),$("#v").text(version)})},tooltip:{$el:$(".tooltip"),show:function(e){ZeptoBuilder.tooltip.$el.html($(this).find(".hide").text()).removeClass("hide"),ZeptoBuilder.tooltip.move(e)},move:function(e){ZeptoBuilder.tooltip.$el.css({top:e.pageY-50-ZeptoBuilder.tooltip.$el.height()/2+"px",left:e.pageX+10+"px"})},hide:function(){ZeptoBuilder.tooltip.$el.addClass("hide")}},modal:{init:function(){$("#copy-sign").html(navigator.platform.indexOf("Mac")!==-1?"⌘":"Ctrl")},show:function(){$body.addClass("move-from-top")},hide:function(){$body.removeClass("move-from-top")}},modules:{selection:[],metaData:{},init:function(){this.load(),this.loadMetaData(),this.observe()},observe:function(){$(document).on("keyup",function(e){e.keyCode===27&&ZeptoBuilder.modal.hide()}).on("click",".overlay",ZeptoBuilder.modal.hide).on("submit","form",this.generate).on("click","#select-button",this.selectSource).on("click",".topcoat-list__item",this.select).on("mouseenter",".topcoat-list__item",ZeptoBuilder.tooltip.show).on("mousemove",".topcoat-list__item",ZeptoBuilder.tooltip.move).on("mouseleave",".topcoat-list__item",ZeptoBuilder.tooltip.hide)},loadMetaData:function(){var self=this;$.get("assets/json/modules.json",function(response){self.metaData=response})},generate:function(e){var $checkboxes=$(".checkbox:checked");e.preventDefault();if(!$checkboxes.length)return;ZeptoBuilder.builder.buildURL($checkboxes,"zepto.js","javascript",function(data){var input=data.content,minified;$("#uglify")[0].checked?(minified=ZeptoBuilder._minify(data.content),$("#file").hide(),$("#saved").text("You saved: "+((1-minified.length/input.length)*100).toFixed(2)+"%")):$("#file").show(),$("#file").attr("href",data.url),$source.val(minified||input),ZeptoBuilder.modal.show(),$source.focus(),$source[0].select()})},cache:function(input){sessionStorage&&sessionStorage.setItem("zepto-modules",input)},load:function(){var self=this;if(sessionStorage&&sessionStorage.getItem("zepto-modules"))return $modules.html(sessionStorage.getItem("zepto-modules"));ZeptoBuilder.builder.JSONP(API_URL+REPO_PATH+SRC_PATH,function(response){var tpl=$("#module-tpl").html(),modules="";for(var m in response.data)self.metaData.hasOwnProperty(response.data[m].name)&&(response.data[m].description=self.metaData[response.data[m].name].description),modules+=ZeptoBuilder.modules.parse(tpl,response.data[m]);ZeptoBuilder.modules.cache(modules),$modules.html(modules)})},parse:function(s,d){for(var p in d)s=s.replace(new RegExp("{{"+p+"}}","g"),d[p]);return s},select:function(e){var $row=$(e.target).parents("tr"),$checkbox=$row.find(".checkbox");if(e.target.nodeName==="INPUT")return;$generateBtn.removeAttr("disabled"),$checkbox[0].checked?ZeptoBuilder.modules.selection.splice($.inArray($checkbox[0].value,ZeptoBuilder.modules.selection)):ZeptoBuilder.modules.selection.push($checkbox[0].value),ZeptoBuilder.modules.selection.length||$generateBtn.attr("disabled","disabled"),$row.toggleClass("selected"),$checkbox.prop("checked",!$checkbox[0].checked)}}};return ZeptoBuilder.init()}),function(window){require.config({paths:{uglify2:"uglify2/lib/",base64:"../bower/base64/base64",zepto:"../bower/zepto/zepto",uglify:"uglify.min",zeroclipboard:"../bower/zeroclipboard/zeroclipboard",almond:"../bower/almond/almond"},shim:{zepto:{exports:"$"},DownloadBuilder:{exports:"DownloadBuilder"},zeroclipboard:{exports:"ZeroClipboard"},uglify:{exports:"UglifyJS"}}}),!window.btoa&&!window.atob&&require(["base64"]),require(["ZeptoBuilder"])}(window),define("main",function(){}),require(["main"])})();